{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_expirationPeriod",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_linkFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_VRFKeyHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        }
      ],
      "name": "RaffleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ticketIndex",
          "type": "uint256"
        }
      ],
      "name": "WinnerChosen",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketCount",
          "type": "uint256"
        }
      ],
      "name": "BuyTickets",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "ClaimRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CollectChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_raffleName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_ticketPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_raffleLength",
          "type": "uint256"
        }
      ],
      "name": "CreateRaffle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "GetRaffleBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetRaffleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetRaffleInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetRaffleTicketInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RaffleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Raffles",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ticketCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketPrice",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "enum CharityRaffle.RaffleState",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "payedOut",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        }
      ],
      "name": "TicketRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VRFKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "VRFRequestIdTORaffleId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "change",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol",
    "1": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
    "3": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol",
    "4": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol",
    "5": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFRequestIDBase.sol",
    "7": "contracts/CharityRaffle.sol"
  },
  "ast": {
    "absolutePath": "contracts/CharityRaffle.sol",
    "exportedSymbols": {
      "CharityRaffle": [
        796
      ],
      "Context": [
        1196
      ],
      "Counters": [
        1053
      ],
      "IERC20": [
        979
      ],
      "LinkTokenInterface": [
        1341
      ],
      "Ownable": [
        901
      ],
      "VRFConsumerBase": [
        1174
      ],
      "VRFRequestIDBase": [
        1246
      ]
    },
    "id": 797,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:23:7"
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 797,
        "sourceUnit": 902,
        "src": "92:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 797,
        "sourceUnit": 1054,
        "src": "145:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 797,
        "sourceUnit": 1175,
        "src": "198:63:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 797,
        "sourceUnit": 980,
        "src": "262:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 901,
              "src": "346:7:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "346:7:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1174,
              "src": "355:15:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "355:15:7"
          }
        ],
        "canonicalName": "CharityRaffle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 796,
        "linearizedBaseContracts": [
          796,
          1174,
          1246,
          901,
          1196
        ],
        "name": "CharityRaffle",
        "nameLocation": "329:13:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13,
            "libraryName": {
              "id": 10,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1053,
              "src": "383:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "377:36:7",
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 985,
                "src": "396:16:7"
              },
              "referencedDeclaration": 985,
              "src": "396:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$985_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ef124faf",
            "id": 15,
            "mutability": "mutable",
            "name": "linkTokenAddress",
            "nameLocation": "434:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "419:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01889611",
            "id": 17,
            "mutability": "mutable",
            "name": "linkFee",
            "nameLocation": "471:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "456:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "456:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1d3bde3",
            "id": 19,
            "mutability": "mutable",
            "name": "VRFKeyHash",
            "nameLocation": "499:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "484:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 18,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8897cad3",
            "id": 21,
            "mutability": "mutable",
            "name": "expirationPeriod",
            "nameLocation": "576:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "561:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "561:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "778:161:7",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "linkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "788:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_linkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "798:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "788:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "788:18:7"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "VRFKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "816:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_VRFKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "829:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "816:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "816:24:7"
                },
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "linkTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "850:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_linkTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "869:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "850:36:7"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "expirationPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "896:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51,
                      "name": "_expirationPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "915:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "896:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "896:36:7"
                }
              ]
            },
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "744:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 35,
                    "name": "_linkTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "760:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 36,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1174,
                  "src": "728:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "728:50:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_expirationPeriod",
                  "nameLocation": "618:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "610:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "645:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "637:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_linkTokenAddress",
                  "nameLocation": "670:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "662:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_linkFee",
                  "nameLocation": "697:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "689:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_VRFKeyHash",
                  "nameLocation": "715:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "707:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:118:7"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:0:7"
            },
            "scope": 796,
            "src": "598:341:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "RequestRandomness",
            "nameLocation": "951:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "977:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "969:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:19:7"
            },
            "src": "945:43:7"
          },
          {
            "anonymous": false,
            "id": 67,
            "name": "WinnerChosen",
            "nameLocation": "999:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "1020:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1012:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "1046:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1030:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ticketIndex",
                  "nameLocation": "1062:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1054:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:63:7"
            },
            "src": "993:82:7"
          },
          {
            "anonymous": false,
            "id": 73,
            "name": "RaffleCreated",
            "nameLocation": "1086:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1108:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1100:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "1129:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1121:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1099:39:7"
            },
            "src": "1080:59:7"
          },
          {
            "canonicalName": "CharityRaffle.RaffleState",
            "id": 78,
            "members": [
              {
                "id": 74,
                "name": "Open",
                "nameLocation": "1172:4:7",
                "nodeType": "EnumValue",
                "src": "1172:4:7"
              },
              {
                "id": 75,
                "name": "SelectingWinner",
                "nameLocation": "1186:15:7",
                "nodeType": "EnumValue",
                "src": "1186:15:7"
              },
              {
                "id": 76,
                "name": "Finished",
                "nameLocation": "1211:8:7",
                "nodeType": "EnumValue",
                "src": "1211:8:7"
              },
              {
                "id": 77,
                "name": "Expired",
                "nameLocation": "1229:7:7",
                "nodeType": "EnumValue",
                "src": "1229:7:7"
              }
            ],
            "name": "RaffleState",
            "nameLocation": "1150:11:7",
            "nodeType": "EnumDefinition",
            "src": "1145:98:7"
          },
          {
            "canonicalName": "CharityRaffle.Raffle",
            "id": 107,
            "members": [
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1673:2:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1665:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1665:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1728:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1721:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1721:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "ticketCount",
                "nameLocation": "1772:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1764:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1764:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "ticketPrice",
                "nameLocation": "1845:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1837:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1837:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "beneficiary",
                "nameLocation": "1892:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1876:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 87,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1876:15:7",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "mutability": "mutable",
                "name": "winner",
                "nameLocation": "1959:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "1943:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 89,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1943:15:7",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 92,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "2043:9:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "2035:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 91,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2035:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "2115:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "2107:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 93,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2107:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 97,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2187:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "2175:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RaffleState_$78",
                  "typeString": "enum CharityRaffle.RaffleState"
                },
                "typeName": {
                  "id": 96,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 95,
                    "name": "RaffleState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 78,
                    "src": "2175:11:7"
                  },
                  "referencedDeclaration": 78,
                  "src": "2175:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleState_$78",
                    "typeString": "enum CharityRaffle.RaffleState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 101,
                "mutability": "mutable",
                "name": "ticketBalances",
                "nameLocation": "2253:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "2225:42:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 100,
                  "keyType": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2225:27:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2244:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 104,
                "mutability": "mutable",
                "name": "ticketOwners",
                "nameLocation": "2325:12:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "2315:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ArrayTypeName",
                  "src": "2315:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "mutability": "mutable",
                "name": "payedOut",
                "nameLocation": "2444:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 107,
                "src": "2439:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 105,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2439:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Raffle",
            "nameLocation": "1648:6:7",
            "nodeType": "StructDefinition",
            "scope": 796,
            "src": "1641:859:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "57529e6c",
            "id": 110,
            "mutability": "mutable",
            "name": "RaffleCount",
            "nameLocation": "2910:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "2886:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$985_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 109,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 108,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 985,
                "src": "2886:16:7"
              },
              "referencedDeclaration": 985,
              "src": "2886:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$985_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d5ccd9b",
            "id": 115,
            "mutability": "mutable",
            "name": "Raffles",
            "nameLocation": "2961:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "2927:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"
            },
            "typeName": {
              "id": 114,
              "keyType": {
                "id": 111,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2935:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2927:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"
              },
              "valueType": {
                "id": 113,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 112,
                  "name": "Raffle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107,
                  "src": "2946:6:7"
                },
                "referencedDeclaration": 107,
                "src": "2946:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                  "typeString": "struct CharityRaffle.Raffle"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27028a84",
            "id": 119,
            "mutability": "mutable",
            "name": "VRFRequestIdTORaffleId",
            "nameLocation": "3048:22:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "3013:57:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 118,
              "keyType": {
                "id": 116,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3021:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3013:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 117,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3032:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ee79ded",
            "id": 122,
            "mutability": "mutable",
            "name": "change",
            "nameLocation": "3207:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 796,
            "src": "3192:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 120,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3192:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 121,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3216:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3350:551:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 133,
                        "name": "RaffleCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3360:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$985_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1011,
                      "src": "3360:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$985_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$985_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:23:7"
                },
                {
                  "assignments": [
                    139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "3401:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "3393:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3393:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 140,
                        "name": "RaffleCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3407:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$985_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 997,
                      "src": "3407:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$985_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$985_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3407:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3393:35:7"
                },
                {
                  "assignments": [
                    146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 146,
                      "mutability": "mutable",
                      "name": "raffle",
                      "nameLocation": "3453:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "3438:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                        "typeString": "struct CharityRaffle.Raffle"
                      },
                      "typeName": {
                        "id": 145,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 144,
                          "name": "Raffle",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 107,
                          "src": "3438:6:7"
                        },
                        "referencedDeclaration": 107,
                        "src": "3438:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "baseExpression": {
                      "id": 147,
                      "name": "Raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "3462:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                        "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                      }
                    },
                    "id": 149,
                    "indexExpression": {
                      "id": 148,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3470:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3462:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Raffle_$107_storage",
                      "typeString": "struct CharityRaffle.Raffle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:36:7"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 151,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3485:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "3485:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 154,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3497:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3485:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:15:7"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3510:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "3510:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 160,
                      "name": "_raffleName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "3524:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3510:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3510:25:7"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 163,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3545:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "3545:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3566:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3545:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:22:7"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 169,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3577:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "3577:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "_ticketPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "3598:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3577:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:33:7"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3620:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "3620:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3649:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3649:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3641:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3641:8:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3641:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3620:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "3620:40:7"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 185,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3670:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "3670:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 188,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3689:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3689:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3670:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:34:7"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 192,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3714:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "3714:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 195,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3731:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3731:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 197,
                        "name": "_raffleLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "3749:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3731:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3714:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:48:7"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 201,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3772:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "3772:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 204,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3787:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Open",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3787:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "3772:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$78",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3772:31:7"
                },
                {
                  "expression": {
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 208,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3813:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "3813:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3837:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3829:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3829:8:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3829:12:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3813:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3813:28:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 218,
                          "name": "raffle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "3870:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage_ptr",
                            "typeString": "struct CharityRaffle.Raffle storage pointer"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "beneficiary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88,
                        "src": "3870:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 220,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "3890:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 217,
                      "name": "RaffleCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "3856:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "EmitStatement",
                  "src": "3851:43:7"
                }
              ]
            },
            "functionSelector": "2fec9240",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateRaffle",
            "nameLocation": "3233:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_raffleName",
                  "nameLocation": "3260:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3246:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3246:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_ticketPrice",
                  "nameLocation": "3281:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3273:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3273:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_raffleLength",
                  "nameLocation": "3303:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3295:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3295:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3245:72:7"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "3341:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3333:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3332:18:7"
            },
            "scope": 796,
            "src": "3224:677:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "4133:136:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 239,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4151:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 241,
                          "indexExpression": {
                            "id": 240,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4159:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4151:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 82,
                        "src": "4151:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 243,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4170:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 245,
                          "indexExpression": {
                            "id": 244,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4178:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4170:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "beneficiary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88,
                        "src": "4170:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 247,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4196:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 249,
                          "indexExpression": {
                            "id": 248,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4204:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4196:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "4196:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 251,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4217:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 253,
                          "indexExpression": {
                            "id": 252,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4225:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4217:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92,
                        "src": "4217:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 255,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4241:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 257,
                          "indexExpression": {
                            "id": 256,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4249:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4241:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "4241:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 259,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4150:112:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,address payable,address payable,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 238,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "4143:119:7"
                }
              ]
            },
            "functionSelector": "32dd45fb",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleInfo",
            "nameLocation": "3976:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3998:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "3990:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:13:7"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "4038:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4024:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "4060:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4044:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4044:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "4089:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4073:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "4105:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4097:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "4124:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4116:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4116:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4023:109:7"
            },
            "scope": 796,
            "src": "3967:302:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4436:141:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 277,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4454:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 279,
                          "indexExpression": {
                            "id": 278,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "4462:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4454:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 82,
                        "src": "4454:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 281,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4473:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "id": 282,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "4481:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4473:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92,
                        "src": "4473:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 285,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4497:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 287,
                          "indexExpression": {
                            "id": 286,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "4505:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4497:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "4497:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 289,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4519:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 291,
                          "indexExpression": {
                            "id": 290,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "4527:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4519:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "4519:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 293,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "4545:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "id": 294,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "4553:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4545:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "4545:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 297,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4453:117:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 276,
                  "id": 298,
                  "nodeType": "Return",
                  "src": "4446:124:7"
                }
              ]
            },
            "functionSelector": "533b4c56",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleTicketInfo",
            "nameLocation": "4284:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4312:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4304:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4304:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:13:7"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "4352:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4338:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4338:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "4366:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4358:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4358:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "4385:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4377:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "ticketCount",
                  "nameLocation": "4402:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4394:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "ticketPrice",
                  "nameLocation": "4423:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4415:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4337:98:7"
            },
            "scope": 796,
            "src": "4275:302:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "4675:58:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 309,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "4692:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 311,
                        "indexExpression": {
                          "id": 310,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "4700:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4692:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketBalances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "4692:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 314,
                    "indexExpression": {
                      "id": 313,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "4720:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4692:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 308,
                  "id": 315,
                  "nodeType": "Return",
                  "src": "4685:41:7"
                }
              ]
            },
            "functionSelector": "21d7112e",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleBalance",
            "nameLocation": "4592:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4617:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4609:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4630:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4622:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4622:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4608:28:7"
            },
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4666:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4658:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4658:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4657:17:7"
            },
            "scope": 796,
            "src": "4583:150:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "4795:45:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 322,
                        "name": "RaffleCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "4812:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$985_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 997,
                      "src": "4812:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$985_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$985_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 321,
                  "id": 325,
                  "nodeType": "Return",
                  "src": "4805:28:7"
                }
              ]
            },
            "functionSelector": "b198333c",
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleCount",
            "nameLocation": "4748:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4762:2:7"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "4786:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4786:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4785:9:7"
            },
            "scope": 796,
            "src": "4739:101:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "4886:918:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 333,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4904:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4904:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 335,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "4918:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 337,
                            "indexExpression": {
                              "id": 336,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 329,
                              "src": "4926:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4918:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "beneficiary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88,
                          "src": "4918:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4904:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074686520726166666c65",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4944:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220",
                          "typeString": "literal_string \"Only the beneficiary can claim the raffle\""
                        },
                        "value": "Only the beneficiary can claim the raffle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220",
                          "typeString": "literal_string \"Only the beneficiary can claim the raffle\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4896:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4896:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4896:92:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 344,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5006:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5006:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 346,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "5025:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 348,
                            "indexExpression": {
                              "id": 347,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 329,
                              "src": "5033:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5025:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "5025:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5006:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c6520686173206e6f7420636c6f73656420796574",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5047:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45",
                          "typeString": "literal_string \"The raffle has not closed yet\""
                        },
                        "value": "The raffle has not closed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45",
                          "typeString": "literal_string \"The raffle has not closed yet\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4998:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4998:81:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:81:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 355,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "5097:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 357,
                              "indexExpression": {
                                "id": 356,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 329,
                                "src": "5105:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5097:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94,
                            "src": "5097:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 359,
                            "name": "expirationPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "5120:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5097:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 361,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5139:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5139:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5097:57:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c6520686173206578706972656420616e642063616e6e6f7420626520636c61696d6564",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5156:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5",
                          "typeString": "literal_string \"The raffle has expired and cannot be claimed\""
                        },
                        "value": "The raffle has expired and cannot be claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5",
                          "typeString": "literal_string \"The raffle has expired and cannot be claimed\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5089:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5089:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "5089:114:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$78",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 368,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "5221:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 370,
                            "indexExpression": {
                              "id": 369,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 329,
                              "src": "5229:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5221:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "5221:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 372,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5243:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Open",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74,
                          "src": "5243:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "5221:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c65206973206e6f742061766169626c6520666f7220636c61696d696e67",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5261:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d37f02932720ba7e9bec07458f230400ebe868995db28e78f3971c456d9a26b4",
                          "typeString": "literal_string \"The raffle is not avaible for claiming\""
                        },
                        "value": "The raffle is not avaible for claiming"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d37f02932720ba7e9bec07458f230400ebe868995db28e78f3971c456d9a26b4",
                          "typeString": "literal_string \"The raffle is not avaible for claiming\""
                        }
                      ],
                      "id": 367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5213:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5213:89:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:89:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 385,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5363:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CharityRaffle_$796",
                                    "typeString": "contract CharityRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CharityRaffle_$796",
                                    "typeString": "contract CharityRaffle"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5355:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5355:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5355:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 380,
                                  "name": "linkTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15,
                                  "src": "5327:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 379,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 979,
                                "src": "5320:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$979_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5320:24:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$979",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 918,
                            "src": "5320:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5320:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 388,
                          "name": "linkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "5374:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5320:61:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e7472616374206e6565647320746f2062652070616964206c696e6b20746f6b656e20746f20636c61696d2074686520726166666c65",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5383:62:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872",
                          "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""
                        },
                        "value": "The contract needs to be paid link token to claim the raffle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872",
                          "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5312:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:134:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "5312:134:7"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 393,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "5456:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 395,
                        "indexExpression": {
                          "id": 394,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "5464:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5456:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "5456:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 397,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "5477:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SelectingWinner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "5477:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "5456:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$78",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "5456:48:7"
                },
                {
                  "assignments": [
                    402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 402,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "5571:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "5563:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 401,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5563:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 407,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 404,
                        "name": "VRFKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "5601:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 405,
                        "name": "linkFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "5613:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 403,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "5583:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5583:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5563:58:7"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 408,
                        "name": "VRFRequestIdTORaffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "5676:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 410,
                      "indexExpression": {
                        "id": 409,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "5699:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5676:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 411,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "5712:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5676:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "5676:39:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 415,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "5787:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 414,
                      "name": "RequestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "5769:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5769:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "EmitStatement",
                  "src": "5764:33:7"
                }
              ]
            },
            "functionSelector": "cda32773",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ClaimRaffle",
            "nameLocation": "4855:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4875:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "4867:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4866:13:7"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4886:0:7"
            },
            "scope": 796,
            "src": "4846:958:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1068
            ],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "5961:1294:7",
              "statements": [
                {
                  "assignments": [
                    428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "raffleId",
                      "nameLocation": "5979:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "5971:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5971:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 432,
                  "initialValue": {
                    "baseExpression": {
                      "id": 429,
                      "name": "VRFRequestIdTORaffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "5990:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 431,
                    "indexExpression": {
                      "id": 430,
                      "name": "_requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "6013:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5990:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5971:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$78",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 434,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "6042:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 436,
                            "indexExpression": {
                              "id": 435,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "6050:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6042:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "6042:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 438,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "6069:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SelectingWinner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "6069:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "6042:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c65206973206e6f7420696e207468652053656c656374696e6757696e6e6572207374617465",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6098:48:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c",
                          "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""
                        },
                        "value": "The raffle is not in the SelectingWinner state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c",
                          "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6034:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6034:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "6034:113:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 445,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "6165:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6180:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6165:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072616e646f6d6e65737320666f756e64",
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6183:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        },
                        "value": "No randomness found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6157:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6157:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "6157:48:7"
                },
                {
                  "expression": {
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 451,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "6215:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 453,
                        "indexExpression": {
                          "id": 452,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "6223:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6215:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "6215:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 455,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "6241:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Finished",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "6241:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "6215:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$78",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "6215:46:7"
                },
                {
                  "assignments": [
                    460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 460,
                      "mutability": "mutable",
                      "name": "winningTicketIndex",
                      "nameLocation": "6279:18:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "6271:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 459,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6271:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 461,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "6300:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 462,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "6314:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 464,
                        "indexExpression": {
                          "id": 463,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "6322:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6314:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "6314:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6300:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6271:72:7"
                },
                {
                  "assignments": [
                    469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "ticketCounter",
                      "nameLocation": "6425:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "6417:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6417:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6441:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6417:25:7"
                },
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "6460:1:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "6452:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6452:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 479,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 474,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "6464:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 476,
                        "indexExpression": {
                          "id": 475,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "6472:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6464:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketOwners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104,
                      "src": "6464:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6464:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6452:49:7"
                },
                {
                  "body": {
                    "id": 535,
                    "nodeType": "Block",
                    "src": "6543:411:7",
                    "statements": [
                      {
                        "assignments": [
                          491
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 491,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "6565:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 535,
                            "src": "6557:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 490,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6557:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 503,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 492,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "6575:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 494,
                              "indexExpression": {
                                "id": 493,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 428,
                                "src": "6583:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6575:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ticketBalances",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 101,
                            "src": "6575:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 502,
                          "indexExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 496,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "6608:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 498,
                                "indexExpression": {
                                  "id": 497,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 428,
                                  "src": "6616:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6608:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 499,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketOwners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 104,
                              "src": "6608:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 501,
                            "indexExpression": {
                              "id": 500,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "6639:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6608:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6575:67:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6557:85:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 504,
                              "name": "ticketCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "6660:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 505,
                              "name": "winningTicketIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "6677:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6660:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 507,
                              "name": "winningTicketIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 460,
                              "src": "6699:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 508,
                                "name": "ticketCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 469,
                                "src": "6720:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 509,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 491,
                                "src": "6736:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6720:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6699:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6660:83:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 530,
                        "nodeType": "IfStatement",
                        "src": "6656:250:7",
                        "trueBody": {
                          "id": 529,
                          "nodeType": "Block",
                          "src": "6745:161:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 513,
                                      "name": "Raffles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 115,
                                      "src": "6799:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                        "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                      }
                                    },
                                    "id": 515,
                                    "indexExpression": {
                                      "id": 514,
                                      "name": "raffleId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 428,
                                      "src": "6807:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6799:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                      "typeString": "struct CharityRaffle.Raffle storage ref"
                                    }
                                  },
                                  "id": 516,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 90,
                                  "src": "6799:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 519,
                                            "name": "Raffles",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 115,
                                            "src": "6834:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                            }
                                          },
                                          "id": 521,
                                          "indexExpression": {
                                            "id": 520,
                                            "name": "raffleId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 428,
                                            "src": "6842:8:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6834:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                            "typeString": "struct CharityRaffle.Raffle storage ref"
                                          }
                                        },
                                        "id": 522,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ticketOwners",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 104,
                                        "src": "6834:30:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 524,
                                      "indexExpression": {
                                        "id": 523,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 481,
                                        "src": "6865:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6834:33:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6826:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 517,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6826:8:7",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6826:42:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "6799:69:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 527,
                              "nodeType": "ExpressionStatement",
                              "src": "6799:69:7"
                            },
                            {
                              "id": 528,
                              "nodeType": "Break",
                              "src": "6886:5:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 531,
                            "name": "ticketCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "6919:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 532,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "6936:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6919:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 534,
                        "nodeType": "ExpressionStatement",
                        "src": "6919:24:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 484,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "6531:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 485,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "6535:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6531:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "initializationExpression": {
                    "assignments": [
                      481
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6524:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 536,
                        "src": "6516:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6516:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 483,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6528:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6516:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6538:3:7",
                      "subExpression": {
                        "id": 487,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "6538:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 489,
                    "nodeType": "ExpressionStatement",
                    "src": "6538:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "6511:443:7"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 537,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "7016:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 539,
                            "indexExpression": {
                              "id": 538,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "7024:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7016:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "payedOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "7016:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        null
                      ],
                      "id": 541,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7015:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$__$",
                        "typeString": "tuple(bool,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7162:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 544,
                                    "name": "Raffles",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "7056:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                      "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                    }
                                  },
                                  "id": 546,
                                  "indexExpression": {
                                    "id": 545,
                                    "name": "raffleId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 428,
                                    "src": "7064:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7056:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                    "typeString": "struct CharityRaffle.Raffle storage ref"
                                  }
                                },
                                "id": 547,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "beneficiary",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 88,
                                "src": "7056:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7048:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 542,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7048:8:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7048:38:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "src": "7048:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 550,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "7099:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 552,
                                "indexExpression": {
                                  "id": 551,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 428,
                                  "src": "7107:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7099:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86,
                              "src": "7099:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 554,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "7131:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 556,
                                "indexExpression": {
                                  "id": 555,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 428,
                                  "src": "7139:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7131:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "7131:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7099:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "7048:113:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7048:117:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "7015:150:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "7015:150:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 565,
                        "name": "raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "7193:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 566,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "7203:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 568,
                          "indexExpression": {
                            "id": 567,
                            "name": "raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "7211:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7203:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "7203:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 570,
                        "name": "winningTicketIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "7229:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 564,
                      "name": "WinnerChosen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "7180:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address payable,uint256)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7180:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "EmitStatement",
                  "src": "7175:73:7"
                }
              ]
            },
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "5884:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 425,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5952:8:7"
            },
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "5910:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "5902:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "5930:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "5922:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5922:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:41:7"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5961:0:7"
            },
            "scope": 796,
            "src": "5875:1380:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "7382:890:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$78",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 582,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "7400:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 584,
                            "indexExpression": {
                              "id": 583,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "7408:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7400:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "7400:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 586,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "7427:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Open",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74,
                          "src": "7427:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "7400:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c65206e6f74206f70656e",
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea",
                          "typeString": "literal_string \"Raffle not open\""
                        },
                        "value": "Raffle not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea",
                          "typeString": "literal_string \"Raffle not open\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7392:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "7392:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 593,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7481:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7481:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 595,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "7499:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 597,
                            "indexExpression": {
                              "id": 596,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "7507:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7499:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "7499:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7481:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c6520697320636c6f736564",
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7526:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a",
                          "typeString": "literal_string \"Raffle is closed\""
                        },
                        "value": "Raffle is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a",
                          "typeString": "literal_string \"Raffle is closed\""
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7473:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7473:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 604,
                          "name": "_ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "7563:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7578:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7563:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b657420636f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7581:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3",
                          "typeString": "literal_string \"Ticket count must be greater than 0\""
                        },
                        "value": "Ticket count must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3",
                          "typeString": "literal_string \"Ticket count must be greater than 0\""
                        }
                      ],
                      "id": 603,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7555:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7555:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "7555:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 611,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7637:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7637:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 613,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "7650:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 615,
                              "indexExpression": {
                                "id": 614,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "7658:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7650:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ticketPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86,
                            "src": "7650:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 617,
                            "name": "_ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "7682:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7650:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7637:57:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b65742070726963652069732067726561746572207468616e2074686520616d6f756e742073656e74",
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7696:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8",
                          "typeString": "literal_string \"Ticket price is greater than the amount sent\""
                        },
                        "value": "Ticket price is greater than the amount sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8",
                          "typeString": "literal_string \"Ticket price is greater than the amount sent\""
                        }
                      ],
                      "id": 610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7629:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7629:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "7629:114:7"
                },
                {
                  "expression": {
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 623,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "7753:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 625,
                        "indexExpression": {
                          "id": 624,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "7761:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7753:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "7753:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 627,
                      "name": "_ticketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "7786:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7753:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "7753:45:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 630,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "7812:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 632,
                          "indexExpression": {
                            "id": 631,
                            "name": "raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "7820:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7812:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketBalances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 101,
                        "src": "7812:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 636,
                      "indexExpression": {
                        "expression": {
                          "id": 634,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7845:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7845:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7812:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7860:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7812:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 649,
                  "nodeType": "IfStatement",
                  "src": "7808:245:7",
                  "trueBody": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "7863:190:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 644,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8031:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8031:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 639,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "7995:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 641,
                                "indexExpression": {
                                  "id": 640,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 576,
                                  "src": "8003:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7995:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketOwners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 104,
                              "src": "7995:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7995:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7995:47:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 647,
                        "nodeType": "ExpressionStatement",
                        "src": "7995:47:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 650,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "8062:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 652,
                          "indexExpression": {
                            "id": 651,
                            "name": "raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "8070:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8062:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$107_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketBalances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 101,
                        "src": "8062:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 656,
                      "indexExpression": {
                        "expression": {
                          "id": 654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8095:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8095:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8062:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 657,
                      "name": "_ticketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "8110:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8062:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "8062:60:7"
                },
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 660,
                      "name": "change",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "8199:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8209:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8209:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 663,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "8221:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 665,
                            "indexExpression": {
                              "id": 664,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "8229:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8221:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ticketPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "8221:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 667,
                          "name": "_ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "8253:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8221:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8209:56:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8199:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "8199:66:7"
                }
              ]
            },
            "functionSelector": "b894ad33",
            "id": 673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyTickets",
            "nameLocation": "7316:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "7335:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "7327:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7327:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_ticketCount",
                  "nameLocation": "7353:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "7345:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7345:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7326:40:7"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7382:0:7"
            },
            "scope": 796,
            "src": "7307:965:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "8427:201:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 681,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "8445:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8454:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8445:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f206368616e676520746f20636f6c6c65637421",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8457:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee",
                          "typeString": "literal_string \"There is no change to collect!\""
                        },
                        "value": "There is no change to collect!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee",
                          "typeString": "literal_string \"There is no change to collect!\""
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8437:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8437:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "8437:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8540:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 689,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8508:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8508:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8500:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 687,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8500:8:7",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8500:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8500:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 693,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "8532:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8500:39:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8500:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "8500:43:7"
                },
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "mutability": "mutable",
                      "name": "_change",
                      "nameLocation": "8561:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "8553:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8553:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "id": 700,
                    "name": "change",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 122,
                    "src": "8571:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8553:24:7"
                },
                {
                  "expression": {
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 702,
                      "name": "change",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "8587:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8596:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8587:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "8587:10:7"
                },
                {
                  "expression": {
                    "id": 706,
                    "name": "_change",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 699,
                    "src": "8614:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 679,
                  "id": 707,
                  "nodeType": "Return",
                  "src": "8607:14:7"
                }
              ]
            },
            "functionSelector": "3803abef",
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 676,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 675,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 843,
                  "src": "8400:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "8400:9:7"
              }
            ],
            "name": "CollectChange",
            "nameLocation": "8377:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8390:2:7"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "8419:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8418:9:7"
            },
            "scope": 796,
            "src": "8368:260:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "8754:719:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 715,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8772:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8772:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 717,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "8791:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 719,
                              "indexExpression": {
                                "id": 718,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "8799:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8791:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 720,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94,
                            "src": "8791:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 721,
                            "name": "expirationPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8819:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8791:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8772:63:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726566756e6420706572696f6420686173206e6f7420656e64656420796574",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8837:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104fd6edc252450dbdbbf035e5ae245c2d019958a538db2d2358445af1bd495d",
                          "typeString": "literal_string \"The refund period has not ended yet\""
                        },
                        "value": "The refund period has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104fd6edc252450dbdbbf035e5ae245c2d019958a538db2d2358445af1bd495d",
                          "typeString": "literal_string \"The refund period has not ended yet\""
                        }
                      ],
                      "id": 714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8764:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8764:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "8764:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$78",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 728,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "8893:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 730,
                            "indexExpression": {
                              "id": 729,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "8901:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8893:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "8893:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 732,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "8920:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finished",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "8920:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "8893:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c652069732066696e6973686564",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8942:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70e8571f93f096fdbd972b9f281289c7e97b56d57bf6df3a7362cacd0ebd8c9d",
                          "typeString": "literal_string \"The raffle is finished\""
                        },
                        "value": "The raffle is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70e8571f93f096fdbd972b9f281289c7e97b56d57bf6df3a7362cacd0ebd8c9d",
                          "typeString": "literal_string \"The raffle is finished\""
                        }
                      ],
                      "id": 727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8885:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8885:82:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "8885:82:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$78",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 739,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "8985:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 741,
                            "indexExpression": {
                              "id": 740,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "8993:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8985:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$107_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "8985:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 743,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "9012:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SelectingWinner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "9012:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$78",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "8985:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c652069732073656c656374696e6720612077696e6e65722e",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9041:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5244b4c89bcdeb74c2906eea5cc8bb9fba7e5fbb42b20cbf704c9bd7ce0894d3",
                          "typeString": "literal_string \"The raffle is selecting a winner.\""
                        },
                        "value": "The raffle is selecting a winner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5244b4c89bcdeb74c2906eea5cc8bb9fba7e5fbb42b20cbf704c9bd7ce0894d3",
                          "typeString": "literal_string \"The raffle is selecting a winner.\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8977:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8977:100:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "8977:100:7"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 749,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "9134:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 751,
                        "indexExpression": {
                          "id": 750,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "9142:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9134:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$107_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "9134:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 753,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "9160:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Expired",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "9160:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$78",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "9134:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$78",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:45:7"
                },
                {
                  "assignments": [
                    758,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 758,
                      "mutability": "mutable",
                      "name": "transfered",
                      "nameLocation": "9239:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "9234:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 757,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9234:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 780,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9365:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 761,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9263:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9263:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9255:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 759,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9255:8:7",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9255:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9255:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 765,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "9287:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 767,
                              "indexExpression": {
                                "id": 766,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "9295:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9287:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ticketPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86,
                            "src": "9287:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 769,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "9319:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 771,
                                "indexExpression": {
                                  "id": 770,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "9327:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9319:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 772,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketBalances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 101,
                              "src": "9319:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 775,
                            "indexExpression": {
                              "expression": {
                                "id": 773,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9352:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9352:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9319:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9287:76:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "9255:109:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9255:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9233:135:7"
                },
                {
                  "condition": {
                    "id": 781,
                    "name": "transfered",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 758,
                    "src": "9382:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 793,
                  "nodeType": "IfStatement",
                  "src": "9378:89:7",
                  "trueBody": {
                    "id": 792,
                    "nodeType": "Block",
                    "src": "9394:73:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 782,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "9408:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 784,
                                "indexExpression": {
                                  "id": 783,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "9416:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9408:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$107_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketBalances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 101,
                              "src": "9408:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 788,
                            "indexExpression": {
                              "expression": {
                                "id": 786,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9441:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9441:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9408:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9455:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9408:48:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 791,
                        "nodeType": "ExpressionStatement",
                        "src": "9408:48:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e3aa85cb",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "TicketRefund",
            "nameLocation": "8717:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "8738:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "8730:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8730:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8729:18:7"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8754:0:7"
            },
            "scope": 796,
            "src": "8708:765:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 797,
        "src": "320:9155:7",
        "usedErrors": []
      }
    ],
    "src": "67:9408:7"
  },
  "bytecode": "60c060405260006009553480156200001657600080fd5b5060405162001c8a38038062001c8a8339810160408190526200003991620000f1565b8383620000463362000084565b6001600160a01b0391821660a0528116608052600392909255600455600280546001600160a01b031916929091169190911790555060055562000145565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ec57600080fd5b919050565b600080600080600060a086880312156200010a57600080fd5b855194506200011c60208701620000d4565b93506200012c60408701620000d4565b6060870151608090970151959894975095949392505050565b60805160a051611b1862000172600039600081816108270152611481015260006114520152611b186000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063b894ad331161006f578063b894ad331461035a578063cda327731461036d578063d1d3bde31461038d578063e3aa85cb146103a3578063ef124faf146103c3578063f2fde38b146103e357600080fd5b8063715018a6146102c65780638897cad3146102dd5780638da5cb5b146102f357806394985ddd14610325578063b198333c1461034557600080fd5b80632fec9240116100f25780632fec92401461021857806332dd45fb146102385780633803abef14610269578063533b4c561461027e57806357529e6c146102af57600080fd5b8063018896111461012f5780631d5ccd9b1461015857806321d7112e1461018e57806327028a84146101d55780632ee79ded14610202575b600080fd5b34801561013b57600080fd5b5061014560035481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b5061017861017336600461166a565b610403565b60405161014f9a999897969594939291906116e6565b34801561019a57600080fd5b506101456101a936600461178f565b60008281526007602090815260408083206001600160a01b038516845260090190915290205492915050565b3480156101e157600080fd5b506101456101f036600461166a565b60086020526000908152604090205481565b34801561020e57600080fd5b5061014560095481565b34801561022457600080fd5b506101456102333660046117d1565b6104ef565b34801561024457600080fd5b5061025861025336600461166a565b6105e0565b60405161014f959493929190611895565b34801561027557600080fd5b506101456106c3565b34801561028a57600080fd5b5061029e61029936600461166a565b6107a1565b60405161014f9594939291906118d5565b3480156102bb57600080fd5b506006546101459081565b3480156102d257600080fd5b506102db6107e6565b005b3480156102e957600080fd5b5061014560055481565b3480156102ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014f565b34801561033157600080fd5b506102db61034036600461190c565b61081c565b34801561035157600080fd5b506101456108a2565b6102db61036836600461190c565b6108b2565b34801561037957600080fd5b506102db61038836600461166a565b610b33565b34801561039957600080fd5b5061014560045481565b3480156103af57600080fd5b506102db6103be36600461166a565b610e76565b3480156103cf57600080fd5b5060025461030d906001600160a01b031681565b3480156103ef57600080fd5b506102db6103fe36600461192e565b611093565b6007602052600090815260409020805460018201805491929161042590611950565b80601f016020809104026020016040519081016040528092919081815260200182805461045190611950565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546008890154600b90990154979895979496506001600160a01b03938416959390921693909260ff90811691168a565b60006104ff600680546001019055565b600061050a60065490565b6000818152600760209081526040909120828155875192935091610536916001840191908901906115d1565b5060006002820155600381018590556004810180546001600160a01b03191633179055426006820181905561056c9085906119a1565b600782015560088101805460ff191690556005810180546001600160a01b03191690556004810154604080516001600160a01b039092168252602082018490527fa5f5edc69e0aa3c9f2fa246209ef9418fc10a316ffa12f1d807a68692436d06b910160405180910390a150509392505050565b600081815260076020819052604082206004810154600582015460068301549383015460019093018054606096958695869586956001600160a01b03918216949116929190859061063090611950565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90611950565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050505094509450945094509450945091939590929450565b600080546001600160a01b031633146106f75760405162461bcd60e51b81526004016106ee906119b9565b60405180910390fd5b6000600954116107495760405162461bcd60e51b815260206004820152601e60248201527f5468657265206973206e6f206368616e676520746f20636f6c6c65637421000060448201526064016106ee565b600954604051339190600081818185875af1925050503d806000811461078b576040519150601f19603f3d011682016040523d82523d6000602084013e610790565b606091505b505060098054600090915591505090565b60008181526007602081905260408220600681015491810154600282015460038301546001909301805460609695869586958695929390929190859061063090611950565b6000546001600160a01b031633146108105760405162461bcd60e51b81526004016106ee906119b9565b61081a600061112e565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108945760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016106ee565b61089e828261117e565b5050565b60006108ad60065490565b905090565b60008281526007602052604081206008015460ff1660038111156108d8576108d86116d0565b146109175760405162461bcd60e51b815260206004820152600f60248201526e2930b3333632903737ba1037b832b760891b60448201526064016106ee565b60008281526007602081905260409091200154421061096b5760405162461bcd60e51b815260206004820152601060248201526f149859999b19481a5cc818db1bdcd95960821b60448201526064016106ee565b600081116109c75760405162461bcd60e51b815260206004820152602360248201527f5469636b657420636f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b60648201526084016106ee565b6000828152600760205260409020600301546109e49082906119ee565b341015610a485760405162461bcd60e51b815260206004820152602c60248201527f5469636b65742070726963652069732067726561746572207468616e2074686560448201526b08185b5bdd5b9d081cd95b9d60a21b60648201526084016106ee565b60008281526007602052604081206002018054839290610a699084906119a1565b90915550506000828152600760209081526040808320338452600901909152902054610ac15760008281526007602090815260408220600a01805460018101825590835291200180546001600160a01b031916331790555b600082815260076020908152604080832033845260090190915281208054839290610aed9084906119a1565b9091555050600082815260076020526040902060030154610b0f9082906119ee565b610b199034611a0d565b60096000828254610b2a91906119a1565b90915550505050565b6000818152600760205260409020600401546001600160a01b03163314610bae5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074604482015268686520726166666c6560b81b60648201526084016106ee565b60008181526007602081905260409091200154421015610c105760405162461bcd60e51b815260206004820152601d60248201527f54686520726166666c6520686173206e6f7420636c6f7365642079657400000060448201526064016106ee565b600554600082815260076020819052604090912001544291610c31916119a1565b11610c935760405162461bcd60e51b815260206004820152602c60248201527f54686520726166666c6520686173206578706972656420616e642063616e6e6f60448201526b1d0818994818db185a5b595960a21b60648201526084016106ee565b60008181526007602052604081206008015460ff166003811115610cb957610cb96116d0565b14610d155760405162461bcd60e51b815260206004820152602660248201527f54686520726166666c65206973206e6f742061766169626c6520666f7220636c60448201526561696d696e6760d01b60648201526084016106ee565b6003546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190611a24565b1015610df85760405162461bcd60e51b815260206004820152603c60248201527f54686520636f6e7472616374206e6565647320746f2062652070616964206c6960448201527f6e6b20746f6b656e20746f20636c61696d2074686520726166666c650000000060648201526084016106ee565b6000818152600760205260408120600801805460ff19166001179055600454600354610e24919061144e565b60008181526008602052604090819020849055519091507fe7e9d173875e49599c9dc06ea20fd1d8878525700b2711462f8379cccdc637eb90610e6a9083815260200190565b60405180910390a15050565b60055460008281526007602081905260409091200154610e9691906119a1565b421015610ef15760405162461bcd60e51b815260206004820152602360248201527f54686520726566756e6420706572696f6420686173206e6f7420656e646564206044820152621e595d60ea1b60648201526084016106ee565b600260008281526007602052604090206008015460ff166003811115610f1957610f196116d0565b1415610f605760405162461bcd60e51b8152602060048201526016602482015275151a19481c9859999b19481a5cc8199a5b9a5cda195960521b60448201526064016106ee565b600160008281526007602052604090206008015460ff166003811115610f8857610f886116d0565b1415610fe05760405162461bcd60e51b815260206004820152602160248201527f54686520726166666c652069732073656c656374696e6720612077696e6e65726044820152601760f91b60648201526084016106ee565b600081815260076020818152604080842060088101805460ff1916600390811790915533808752600983018552928620548787529490935291909101549091611028916119ee565b604051600081818185875af1925050503d8060008114611064576040519150601f19603f3d011682016040523d82523d6000602084013e611069565b606091505b50509050801561089e57506000908152600760209081526040808320338452600901909152812055565b6000546001600160a01b031633146110bd5760405162461bcd60e51b81526004016106ee906119b9565b6001600160a01b0381166111225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ee565b61112b8161112e565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260086020526040902054600160008281526007602052604090206008015460ff1660038111156111b5576111b56116d0565b146112195760405162461bcd60e51b815260206004820152602e60248201527f54686520726166666c65206973206e6f7420696e207468652053656c6563746960448201526d6e6757696e6e657220737461746560901b60648201526084016106ee565b600081815260076020526040812060088101805460ff1916600290811790915501546112459084611a3d565b6000838152600760205260408120600a015491925090815b8181101561135a576000858152600760205260408120600a810180546009909201918391908590811061129257611292611a5f565b60009182526020808320909101546001600160a01b0316835282019290925260400190205490508484118015906112d157506112ce81856119a1565b85105b1561133a576000868152600760205260409020600a018054839081106112f9576112f9611a5f565b60009182526020808320909101548883526007909152604090912060050180546001600160a01b0319166001600160a01b039092169190911790555061135a565b61134481856119a1565b935050808061135290611a75565b91505061125d565b506000848152600760205260409020600481015460028201546003909201546001600160a01b039091169161138e916119ee565b604051600081818185875af1925050503d80600081146113ca576040519150601f19603f3d011682016040523d82523d6000602084013e6113cf565b606091505b5050600085815260076020908152604091829020600b8101805460ff19169415159490941790935560059092015481518781526001600160a01b039091169281019290925281018490527fb14375695e696ee7a5001ece25e2fcfb144242680d208452819016209ae26f679060600160405180910390a1505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016114be929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016114eb93929190611a90565b6020604051808303816000875af115801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e9190611ac0565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905290829052611589916119a1565b6000858152600160205260409020556115c98482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b8280546115dd90611950565b90600052602060002090601f0160209004810192826115ff5760008555611645565b82601f1061161857805160ff1916838001178555611645565b82800160010185558215611645579182015b8281111561164557825182559160200191906001019061162a565b50611651929150611655565b5090565b5b808211156116515760008155600101611656565b60006020828403121561167c57600080fd5b5035919050565b6000815180845260005b818110156116a95760208185018101518683018201520161168d565b818111156116bb576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101408c83528060208401526117008184018d611683565b604084018c9052606084018b90526001600160a01b038a81166080860152891660a085015260c0840188905260e084018790529150506004841061175457634e487b7160e01b600052602160045260246000fd5b836101008301528215156101208301529b9a5050505050505050505050565b80356001600160a01b038116811461178a57600080fd5b919050565b600080604083850312156117a257600080fd5b823591506117b260208401611773565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156117e657600080fd5b833567ffffffffffffffff808211156117fe57600080fd5b818601915086601f83011261181257600080fd5b813581811115611824576118246117bb565b604051601f8201601f19908116603f0116810190838211818310171561184c5761184c6117bb565b8160405282815289602084870101111561186557600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60a0815260006118a860a0830188611683565b6001600160a01b039687166020840152949095166040820152606081019290925260809091015292915050565b60a0815260006118e860a0830188611683565b90508560208301528460408301528360608301528260808301529695505050505050565b6000806040838503121561191f57600080fd5b50508035926020909101359150565b60006020828403121561194057600080fd5b61194982611773565b9392505050565b600181811c9082168061196457607f821691505b6020821081141561198557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156119b4576119b461198b565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611a0857611a0861198b565b500290565b600082821015611a1f57611a1f61198b565b500390565b600060208284031215611a3657600080fd5b5051919050565b600082611a5a57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611a8957611a8961198b565b5060010190565b60018060a01b0384168152826020820152606060408201526000611ab76060830184611683565b95945050505050565b600060208284031215611ad257600080fd5b8151801515811461194957600080fdfea2646970667358221220ab03a42741be988e2be777509f23191a7a7bbc3887c2ece75e2e65e07966d60e64736f6c634300080a0033",
  "bytecodeSha1": "786392201498e50bd5373b57b1d9f9bac4e09114",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CharityRaffle",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "80": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "81": [
            9750,
            9778,
            true
          ]
        }
      },
      "5": {},
      "7": {
        "CharityRaffle.BuyTickets": {
          "64": [
            7400,
            7443,
            true
          ],
          "65": [
            7481,
            7524,
            true
          ],
          "66": [
            7563,
            7579,
            true
          ],
          "67": [
            7637,
            7694,
            true
          ]
        },
        "CharityRaffle.ClaimRaffle": {
          "68": [
            4904,
            4942,
            true
          ],
          "69": [
            5006,
            5045,
            true
          ],
          "70": [
            5097,
            5154,
            true
          ],
          "71": [
            5221,
            5259,
            true
          ],
          "72": [
            5320,
            5381,
            true
          ]
        },
        "CharityRaffle.CollectChange": {
          "63": [
            8445,
            8455,
            true
          ]
        },
        "CharityRaffle.TicketRefund": {
          "73": [
            8772,
            8835,
            true
          ],
          "74": [
            8893,
            8940,
            true
          ],
          "75": [
            8985,
            9039,
            true
          ],
          "76": [
            9382,
            9392,
            false
          ]
        },
        "CharityRaffle.fulfillRandomness": {
          "77": [
            6042,
            6096,
            true
          ],
          "78": [
            6660,
            6695,
            false
          ],
          "79": [
            6699,
            6743,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "48": [
            2378,
            2395
          ],
          "49": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "46": [
            1998,
            2071
          ],
          "47": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "16": [
            712,
            729
          ]
        }
      },
      "3": {
        "Counters.current": {
          "4": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "3": [
            1032,
            1051
          ]
        }
      },
      "4": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "22": [
            9742,
            9814
          ],
          "23": [
            9820,
            9860
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "58": [
            7889,
            7976
          ],
          "60": [
            8719,
            8758
          ],
          "61": [
            8764,
            8803
          ]
        }
      },
      "5": {
        "VRFRequestIDBase.makeRequestId": {
          "62": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "59": [
            980,
            1058
          ]
        }
      },
      "7": {
        "CharityRaffle.BuyTickets": {
          "25": [
            7392,
            7463
          ],
          "26": [
            7473,
            7545
          ],
          "27": [
            7555,
            7619
          ],
          "28": [
            7629,
            7743
          ],
          "29": [
            7753,
            7798
          ],
          "30": [
            7995,
            8042
          ],
          "31": [
            8062,
            8122
          ],
          "32": [
            8199,
            8265
          ]
        },
        "CharityRaffle.ClaimRaffle": {
          "33": [
            4896,
            4988
          ],
          "34": [
            4998,
            5079
          ],
          "35": [
            5089,
            5203
          ],
          "36": [
            5213,
            5302
          ],
          "37": [
            5312,
            5446
          ],
          "38": [
            5456,
            5504
          ],
          "39": [
            5676,
            5715
          ],
          "40": [
            5764,
            5797
          ]
        },
        "CharityRaffle.CollectChange": {
          "17": [
            8437,
            8490
          ],
          "18": [
            8500,
            8543
          ],
          "19": [
            8587,
            8597
          ]
        },
        "CharityRaffle.CreateRaffle": {
          "2": [
            3360,
            3383
          ],
          "5": [
            3485,
            3500
          ],
          "6": [
            3510,
            3535
          ],
          "7": [
            3545,
            3567
          ],
          "8": [
            3577,
            3610
          ],
          "9": [
            3620,
            3660
          ],
          "10": [
            3670,
            3704
          ],
          "11": [
            3714,
            3762
          ],
          "12": [
            3772,
            3803
          ],
          "13": [
            3813,
            3841
          ],
          "14": [
            3851,
            3894
          ]
        },
        "CharityRaffle.GetRaffleBalance": {
          "0": [
            4685,
            4726
          ]
        },
        "CharityRaffle.GetRaffleCount": {
          "24": [
            4805,
            4833
          ]
        },
        "CharityRaffle.GetRaffleInfo": {
          "15": [
            4143,
            4262
          ]
        },
        "CharityRaffle.GetRaffleTicketInfo": {
          "20": [
            4446,
            4570
          ]
        },
        "CharityRaffle.TicketRefund": {
          "41": [
            8764,
            8875
          ],
          "42": [
            8885,
            8967
          ],
          "43": [
            8977,
            9077
          ],
          "44": [
            9134,
            9179
          ],
          "45": [
            9408,
            9456
          ]
        },
        "CharityRaffle.fulfillRandomness": {
          "50": [
            6034,
            6147
          ],
          "51": [
            6215,
            6261
          ],
          "52": [
            6799,
            6868
          ],
          "53": [
            6886,
            6891
          ],
          "54": [
            6919,
            6943
          ],
          "55": [
            6538,
            6541
          ],
          "56": [
            7015,
            7165
          ],
          "57": [
            7175,
            7248
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "320:9155:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:22;;;;;;;;;;;;;;;;;;;160:25:8;;;148:2;133:18;456:22:7;;;;;;;;2927:41;;;;;;;;;;-1:-1:-1;2927:41:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;4583:150::-;;;;;;;;;;-1:-1:-1;4583:150:7;;;;;:::i;:::-;4658:15;4692:12;;;:7;:12;;;;;;;;-1:-1:-1;;;;;4692:34:7;;;;:27;;:34;;;;;;4583:150;;;;;3013:57;;;;;;;;;;-1:-1:-1;3013:57:7;;;;;:::i;:::-;;;;;;;;;;;;;;3192:25;;;;;;;;;;;;;;;;3224:677;;;;;;;;;;-1:-1:-1;3224:677:7;;;;;:::i;:::-;;:::i;3967:302::-;;;;;;;;;;-1:-1:-1;3967:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;8368:260::-;;;;;;;;;;;;;:::i;4275:302::-;;;;;;;;;;-1:-1:-1;4275:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2886:35::-;;;;;;;;;;-1:-1:-1;2886:35:7;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;561:31:7;;;;;;;;;;;;;;;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;5248:32:8;;;5230:51;;5218:2;5203:18;1036:85:0;5084:203:8;9640:225:4;;;;;;;;;;-1:-1:-1;9640:225:4;;;;;:::i;:::-;;:::i;4739:101:7:-;;;;;;;;;;;;;:::i;7307:965::-;;;;;;:::i;:::-;;:::i;4846:958::-;;;;;;;;;;-1:-1:-1;4846:958:7;;;;;:::i;:::-;;:::i;484:25::-;;;;;;;;;;;;;;;;8708:765;;;;;;;;;;-1:-1:-1;8708:765:7;;;;;:::i;:::-;;:::i;419:31::-;;;;;;;;;;-1:-1:-1;419:31:7;;;;-1:-1:-1;;;;;419:31:7;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2927:41:7:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2927:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2927:41:7;;;;;;;;;;;;;;;;;;:::o;3224:677::-;3333:16;3360:23;:11;1032:19:3;;1050:1;1032:19;;;945:123;3360:23:7;3393:11;3407:21;:11;918:14:3;;827:112;3407:21:7;3438;3462:12;;;:7;:12;;;;;;;;3485:15;;;3510:25;;3393:35;;-1:-1:-1;3462:12:7;3510:25;;:11;;;;:25;;;;;:::i;:::-;-1:-1:-1;3566:1:7;3545:18;;;:22;3577:18;;;:33;;;3620:18;;;:40;;-1:-1:-1;;;;;;3620:40:7;3649:10;3620:40;;;3689:15;3670:16;;;:34;;;3731:31;;3749:13;;3731:31;:::i;:::-;3714:14;;;:48;3772:12;;;:31;;-1:-1:-1;;3772:31:7;;;3813:13;;;:28;;-1:-1:-1;;;;;;3813:28:7;;;3870:18;;;;3856:38;;;-1:-1:-1;;;;;3870:18:7;;;7003:51:8;;7085:2;7070:18;;7063:34;;;3856:38:7;;6976:18:8;3856:38:7;;;;;;;3350:551;;3224:677;;;;;:::o;3967:302::-;4044:27;4151:12;;;:7;:12;;;;;;;4170:24;;;;4196:19;;;;4217:22;;;;4241:20;;;;4151:17;;;;4143:119;;4024:18;;4044:27;;;;;;;-1:-1:-1;;;;;4170:24:7;;;;4196:19;;;4217:22;4241:20;4151:17;;4143:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3967:302;;;;;;;:::o;8368:260::-;8419:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;8454:1:7::1;8445:6;;:10;8437:53;;;::::0;-1:-1:-1;;;8437:53:7;;7671:2:8;8437:53:7::1;::::0;::::1;7653:21:8::0;7710:2;7690:18;;;7683:30;7749:32;7729:18;;;7722:60;7799:18;;8437:53:7::1;7469:354:8::0;8437:53:7::1;8532:6;::::0;8500:43:::1;::::0;8508:10:::1;::::0;8532:6;8500:43:::1;::::0;;;8532:6;8508:10;8500:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;8571:6:7::1;::::0;;8553:15:::1;8587:10:::0;;;8571:6;-1:-1:-1;;8368:260:7;:::o;4275:302::-;4358:17;4454:12;;;:7;:12;;;;;;;4473:22;;;;4497:20;;;;4519:24;;;;4545;;;;4454:17;;;;4446:124;;4338:18;;4358:17;;;;;;;4473:22;;4497:20;;4519:24;4545;4454:17;;4446:124;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;9640:225:4:-;9750:10;-1:-1:-1;;;;;9764:14:4;9750:28;;9742:72;;;;-1:-1:-1;;;9742:72:4;;8240:2:8;9742:72:4;;;8222:21:8;8279:2;8259:18;;;8252:30;8318:33;8298:18;;;8291:61;8369:18;;9742:72:4;8038:355:8;9742:72:4;9820:40;9838:9;9849:10;9820:17;:40::i;:::-;9640:225;;:::o;4739:101:7:-;4786:7;4812:21;:11;918:14:3;;827:112;4812:21:7;4805:28;;4739:101;:::o;7307:965::-;7427:16;7400:17;;;:7;:17;;;;;:23;;;;;:43;;;;;;;;:::i;:::-;;7392:71;;;;-1:-1:-1;;;7392:71:7;;8600:2:8;7392:71:7;;;8582:21:8;8639:2;8619:18;;;8612:30;-1:-1:-1;;;8658:18:8;;;8651:45;8713:18;;7392:71:7;8398:339:8;7392:71:7;7499:17;;;;:7;:17;;;;;;;;:25;;7481:15;:43;7473:72;;;;-1:-1:-1;;;7473:72:7;;8944:2:8;7473:72:7;;;8926:21:8;8983:2;8963:18;;;8956:30;-1:-1:-1;;;9002:18:8;;;8995:46;9058:18;;7473:72:7;8742:340:8;7473:72:7;7578:1;7563:12;:16;7555:64;;;;-1:-1:-1;;;7555:64:7;;9289:2:8;7555:64:7;;;9271:21:8;9328:2;9308:18;;;9301:30;9367:34;9347:18;;;9340:62;-1:-1:-1;;;9418:18:8;;;9411:33;9461:19;;7555:64:7;9087:399:8;7555:64:7;7650:17;;;;:7;:17;;;;;:29;;;:44;;7682:12;;7650:44;:::i;:::-;7637:9;:57;;7629:114;;;;-1:-1:-1;;;7629:114:7;;9866:2:8;7629:114:7;;;9848:21:8;9905:2;9885:18;;;9878:30;9944:34;9924:18;;;9917:62;-1:-1:-1;;;9995:18:8;;;9988:42;10047:19;;7629:114:7;9664:408:8;7629:114:7;7753:17;;;;:7;:17;;;;;:29;;:45;;7786:12;;7753:17;:45;;7786:12;;7753:45;:::i;:::-;;;;-1:-1:-1;;7812:17:7;;;;:7;:17;;;;;;;;7845:10;7812:44;;:32;;:44;;;;;;7808:245;;7995:17;;;;:7;:17;;;;;;;:30;;:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7995:47:7;8031:10;7995:47;;;7808:245;8062:17;;;;:7;:17;;;;;;;;8095:10;8062:44;;:32;;:44;;;;;:60;;8110:12;;8062:17;:60;;8110:12;;8062:60;:::i;:::-;;;;-1:-1:-1;;8221:17:7;;;;:7;:17;;;;;:29;;;:44;;8253:12;;8221:44;:::i;:::-;8209:56;;:9;:56;:::i;:::-;8199:6;;:66;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;7307:965:7:o;4846:958::-;4918:12;;;;:7;:12;;;;;:24;;;-1:-1:-1;;;;;4918:24:7;4904:10;:38;4896:92;;;;-1:-1:-1;;;4896:92:7;;10409:2:8;4896:92:7;;;10391:21:8;10448:2;10428:18;;;10421:30;10487:34;10467:18;;;10460:62;-1:-1:-1;;;10538:18:8;;;10531:39;10587:19;;4896:92:7;10207:405:8;4896:92:7;5025:12;;;;:7;:12;;;;;;;;:20;;5006:15;:39;;4998:81;;;;-1:-1:-1;;;4998:81:7;;10819:2:8;4998:81:7;;;10801:21:8;10858:2;10838:18;;;10831:30;10897:31;10877:18;;;10870:59;10946:18;;4998:81:7;10617:353:8;4998:81:7;5120:16;;5097:12;;;;:7;:12;;;;;;;;:20;;5139:15;;5097:39;;;:::i;:::-;:57;5089:114;;;;-1:-1:-1;;;5089:114:7;;11177:2:8;5089:114:7;;;11159:21:8;11216:2;11196:18;;;11189:30;11255:34;11235:18;;;11228:62;-1:-1:-1;;;11306:18:8;;;11299:42;11358:19;;5089:114:7;10975:408:8;5089:114:7;5243:16;5221:12;;;:7;:12;;;;;:18;;;;;:38;;;;;;;;:::i;:::-;;5213:89;;;;-1:-1:-1;;;5213:89:7;;11590:2:8;5213:89:7;;;11572:21:8;11629:2;11609:18;;;11602:30;11668:34;11648:18;;;11641:62;-1:-1:-1;;;11719:18:8;;;11712:36;11765:19;;5213:89:7;11388:402:8;5213:89:7;5374:7;;5327:16;;5320:49;;-1:-1:-1;;;5320:49:7;;5363:4;5320:49;;;5230:51:8;-1:-1:-1;;;;;5327:16:7;;;;5320:34;;5203:18:8;;5320:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;5312:134;;;;-1:-1:-1;;;5312:134:7;;12186:2:8;5312:134:7;;;12168:21:8;12225:2;12205:18;;;12198:30;12264:34;12244:18;;;12237:62;12335:30;12315:18;;;12308:58;12383:19;;5312:134:7;11984:424:8;5312:134:7;5456:12;;;;:7;:12;;;;;:18;;:48;;-1:-1:-1;;5456:48:7;5477:27;5456:48;;;5601:10;;5613:7;;5583:38;;5601:10;5583:17;:38::i;:::-;5676:33;;;;:22;:33;;;;;;;:39;;;5769:28;5563:58;;-1:-1:-1;5769:28:7;;;;5563:58;160:25:8;;148:2;133:18;;14:177;5769:28:7;;;;;;;;4886:918;4846:958;:::o;8708:765::-;8819:16;;8791:17;;;;:7;:17;;;;;;;;:25;;:44;;8819:16;8791:44;:::i;:::-;8772:15;:63;;8764:111;;;;-1:-1:-1;;;8764:111:7;;12615:2:8;8764:111:7;;;12597:21:8;12654:2;12634:18;;;12627:30;12693:34;12673:18;;;12666:62;-1:-1:-1;;;12744:18:8;;;12737:33;12787:19;;8764:111:7;12413:399:8;8764:111:7;8920:20;8893:17;;;;:7;:17;;;;;:23;;;;;:47;;;;;;;;:::i;:::-;;;8885:82;;;;-1:-1:-1;;;8885:82:7;;13019:2:8;8885:82:7;;;13001:21:8;13058:2;13038:18;;;13031:30;-1:-1:-1;;;13077:18:8;;;13070:52;13139:18;;8885:82:7;12817:346:8;8885:82:7;9012:27;8985:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;;8977:100;;;;-1:-1:-1;;;8977:100:7;;13370:2:8;8977:100:7;;;13352:21:8;13409:2;13389:18;;;13382:30;13448:34;13428:18;;;13421:62;-1:-1:-1;;;13499:18:8;;;13492:31;13540:19;;8977:100:7;13168:397:8;8977:100:7;9134:17;;;;:7;:17;;;;;;;;:23;;;:45;;-1:-1:-1;;9134:45:7;9160:19;9134:45;;;;;;9263:10;9319:44;;;:32;;;:44;;;;;;9287:17;;;;;;;:29;;;;;9263:10;;9287:76;;;:::i;:::-;9255:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9233:135;;;9382:10;9378:89;;;-1:-1:-1;9455:1:7;9408:17;;;:7;:17;;;;;;;;9441:10;9408:44;;:32;;:44;;;;;:48;8708:765::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;13772:2:8;1998:73:0::1;::::0;::::1;13754:21:8::0;13811:2;13791:18;;;13784:30;13850:34;13830:18;;;13823:62;-1:-1:-1;;;13901:18:8;;;13894:36;13947:19;;1998:73:0::1;13570:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5875:1380:7:-;5971:16;5990:34;;;:22;:34;;;;;;6069:27;6042:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;6034:113;;;;-1:-1:-1;;;6034:113:7;;14179:2:8;6034:113:7;;;14161:21:8;14218:2;14198:18;;;14191:30;14257:34;14237:18;;;14230:62;-1:-1:-1;;;14308:18:8;;;14301:44;14362:19;;6034:113:7;13977:410:8;6034:113:7;6215:17;;;;:7;:17;;;;;:23;;;:46;;-1:-1:-1;;6215:46:7;6241:20;6215:46;;;;;;6314:29;;6300:43;;:11;:43;:::i;:::-;6417:21;6464:17;;;:7;:17;;;;;:30;;:37;6271:72;;-1:-1:-1;6417:21:7;;6511:443;6535:1;6531;:5;6511:443;;;6557:15;6575:17;;;:7;:17;;;;;6608:30;;;:33;;6575:32;;;;;6557:15;;6608:30;6639:1;;6608:33;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6608:33:7;6575:67;;;;;;;;;;;;;;-1:-1:-1;6660:35:7;;;;;;:83;;-1:-1:-1;6720:23:7;6736:7;6720:13;:23;:::i;:::-;6699:18;:44;6660:83;6656:250;;;6834:17;;;;:7;:17;;;;;:30;;:33;;6865:1;;6834:33;;;;;;:::i;:::-;;;;;;;;;;;;;6799:17;;;:7;:17;;;;;;;:24;;:69;;-1:-1:-1;;;;;;6799:69:7;-1:-1:-1;;;;;6834:33:7;;;6799:69;;;;;;-1:-1:-1;6886:5:7;;6656:250;6919:24;6936:7;6919:24;;:::i;:::-;;;6543:411;6538:3;;;;;:::i;:::-;;;;6511:443;;;-1:-1:-1;7056:17:7;;;;:7;:17;;;;;:29;;;;7131;;;;7099;;;;;-1:-1:-1;;;;;7056:29:7;;;;7099:61;;;:::i;:::-;7048:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7016:17:7;;;;:7;:17;;;;;;;;;:26;;;7015:150;;-1:-1:-1;;7015:150:7;;;;;;;;;;;7203:24;;;;;7180:68;;15444:25:8;;;-1:-1:-1;;;;;7203:24:7;;;15485:18:8;;;15478:60;;;;15554:18;;15547:34;;;7180:68:7;;15432:2:8;15417:18;7180:68:7;;;;;;;5961:1294;;;;5875:1380;;:::o;7753:1055:4:-;7857:17;7889:4;-1:-1:-1;;;;;7889:20:4;;7910:14;7926:4;7943:8;6610:1;7932:43;;;;;;;;15766:25:8;;;15822:2;15807:18;;15800:34;15754:2;15739:18;;15592:248;7932:43:4;;;;;;;;;;;;;7889:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8207:15:4;8291:16;;;:6;:16;;;;;;;;;1005:51:5;;;;;16749:25:8;;;16790:18;;;16783:34;;;8284:4:4;16833:18:8;;;16826:60;16902:18;;;;16895:34;;;1005:51:5;;;;;;;;;;16721:19:8;;;;1005:51:5;;;995:62;;;;;;;;;8738:16:4;;;;;;;;:20;;;:::i;:::-;8719:16;;;;:6;:16;;;;;:39;8771:32;8726:8;8795:7;1600:41:5;;;;;;;17097:19:8;;;;17132:12;;;17125:28;;;;1600:41:5;;;;;;;;;17169:12:8;;;;1600:41:5;;1590:52;;;;;;1443:204;8771:32:4;8764:39;7753:1055;-1:-1:-1;;;;7753:1055:4:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:8;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:8;;196:180;-1:-1:-1;196:180:8:o;381:472::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;703:6;700:1;697:13;694:87;;;769:1;762:4;753:6;748:3;744:16;740:27;733:38;694:87;-1:-1:-1;835:2:8;814:15;-1:-1:-1;;810:29:8;801:39;;;;842:4;797:50;;381:472;-1:-1:-1;;381:472:8:o;858:127::-;919:10;914:3;910:20;907:1;900:31;950:4;947:1;940:15;974:4;971:1;964:15;990:1150;1392:4;1421:3;1451:6;1440:9;1433:25;1494:2;1489;1478:9;1474:18;1467:30;1514:45;1555:2;1544:9;1540:18;1532:6;1514:45;:::i;:::-;1590:2;1575:18;;1568:34;;;1633:2;1618:18;;1611:34;;;-1:-1:-1;;;;;1720:15:8;;;1714:3;1699:19;;1692:44;1773:15;;1672:3;1752:19;;1745:44;1820:3;1805:19;;1798:35;;;1864:3;1849:19;;1842:35;;;1506:53;-1:-1:-1;;1907:1:8;1896:13;;1886:144;;1952:10;1947:3;1943:20;1940:1;1933:31;1987:4;1984:1;1977:15;2015:4;2012:1;2005:15;1886:144;2067:6;2061:3;2050:9;2046:19;2039:35;2125:6;2118:14;2111:22;2105:3;2094:9;2090:19;2083:51;990:1150;;;;;;;;;;;;;:::o;2145:173::-;2213:20;;-1:-1:-1;;;;;2262:31:8;;2252:42;;2242:70;;2308:1;2305;2298:12;2242:70;2145:173;;;:::o;2323:254::-;2391:6;2399;2452:2;2440:9;2431:7;2427:23;2423:32;2420:52;;;2468:1;2465;2458:12;2420:52;2504:9;2491:23;2481:33;;2533:38;2567:2;2556:9;2552:18;2533:38;:::i;:::-;2523:48;;2323:254;;;;;:::o;2767:127::-;2828:10;2823:3;2819:20;2816:1;2809:31;2859:4;2856:1;2849:15;2883:4;2880:1;2873:15;2899:1068;2986:6;2994;3002;3055:2;3043:9;3034:7;3030:23;3026:32;3023:52;;;3071:1;3068;3061:12;3023:52;3111:9;3098:23;3140:18;3181:2;3173:6;3170:14;3167:34;;;3197:1;3194;3187:12;3167:34;3235:6;3224:9;3220:22;3210:32;;3280:7;3273:4;3269:2;3265:13;3261:27;3251:55;;3302:1;3299;3292:12;3251:55;3338:2;3325:16;3360:2;3356;3353:10;3350:36;;;3366:18;;:::i;:::-;3441:2;3435:9;3409:2;3495:13;;-1:-1:-1;;3491:22:8;;;3515:2;3487:31;3483:40;3471:53;;;3539:18;;;3559:22;;;3536:46;3533:72;;;3585:18;;:::i;:::-;3625:10;3621:2;3614:22;3660:2;3652:6;3645:18;3702:7;3695:4;3690:2;3686;3682:11;3678:22;3675:35;3672:55;;;3723:1;3720;3713:12;3672:55;3783:2;3776:4;3772:2;3768:13;3761:4;3753:6;3749:17;3736:50;3830:1;3823:4;3818:2;3810:6;3806:15;3802:26;3795:37;3851:6;3841:16;;;;;;;3904:4;3893:9;3889:20;3876:34;3866:44;;3957:2;3946:9;3942:18;3929:32;3919:42;;2899:1068;;;;;:::o;3972:595::-;4265:3;4254:9;4247:22;4228:4;4286:46;4327:3;4316:9;4312:19;4304:6;4286:46;:::i;:::-;-1:-1:-1;;;;;4406:15:8;;;4401:2;4386:18;;4379:43;4458:15;;;;4453:2;4438:18;;4431:43;4505:2;4490:18;;4483:34;;;;4548:3;4533:19;;;4526:35;4278:54;3972:595;-1:-1:-1;;3972:595:8:o;4572:507::-;4833:3;4822:9;4815:22;4796:4;4854:46;4895:3;4884:9;4880:19;4872:6;4854:46;:::i;:::-;4846:54;;4936:6;4931:2;4920:9;4916:18;4909:34;4979:6;4974:2;4963:9;4959:18;4952:34;5022:6;5017:2;5006:9;5002:18;4995:34;5066:6;5060:3;5049:9;5045:19;5038:35;4572:507;;;;;;;;:::o;5292:248::-;5360:6;5368;5421:2;5409:9;5400:7;5396:23;5392:32;5389:52;;;5437:1;5434;5427:12;5389:52;-1:-1:-1;;5460:23:8;;;5530:2;5515:18;;;5502:32;;-1:-1:-1;5292:248:8:o;5980:186::-;6039:6;6092:2;6080:9;6071:7;6067:23;6063:32;6060:52;;;6108:1;6105;6098:12;6060:52;6131:29;6150:9;6131:29;:::i;:::-;6121:39;5980:186;-1:-1:-1;;;5980:186:8:o;6171:380::-;6250:1;6246:12;;;;6293;;;6314:61;;6368:4;6360:6;6356:17;6346:27;;6314:61;6421:2;6413:6;6410:14;6390:18;6387:38;6384:161;;;6467:10;6462:3;6458:20;6455:1;6448:31;6502:4;6499:1;6492:15;6530:4;6527:1;6520:15;6384:161;;6171:380;;;:::o;6556:127::-;6617:10;6612:3;6608:20;6605:1;6598:31;6648:4;6645:1;6638:15;6672:4;6669:1;6662:15;6688:128;6728:3;6759:1;6755:6;6752:1;6749:13;6746:39;;;6765:18;;:::i;:::-;-1:-1:-1;6801:9:8;;6688:128::o;7108:356::-;7310:2;7292:21;;;7329:18;;;7322:30;7388:34;7383:2;7368:18;;7361:62;7455:2;7440:18;;7108:356::o;9491:168::-;9531:7;9597:1;9593;9589:6;9585:14;9582:1;9579:21;9574:1;9567:9;9560:17;9556:45;9553:71;;;9604:18;;:::i;:::-;-1:-1:-1;9644:9:8;;9491:168::o;10077:125::-;10117:4;10145:1;10142;10139:8;10136:34;;;10150:18;;:::i;:::-;-1:-1:-1;10187:9:8;;10077:125::o;11795:184::-;11865:6;11918:2;11906:9;11897:7;11893:23;11889:32;11886:52;;;11934:1;11931;11924:12;11886:52;-1:-1:-1;11957:16:8;;11795:184;-1:-1:-1;11795:184:8:o;14740:209::-;14772:1;14798;14788:132;;14842:10;14837:3;14833:20;14830:1;14823:31;14877:4;14874:1;14867:15;14905:4;14902:1;14895:15;14788:132;-1:-1:-1;14934:9:8;;14740:209::o;14954:127::-;15015:10;15010:3;15006:20;15003:1;14996:31;15046:4;15043:1;15036:15;15070:4;15067:1;15060:15;15086:135;15125:3;-1:-1:-1;;15146:17:8;;15143:43;;;15166:18;;:::i;:::-;-1:-1:-1;15213:1:8;15202:13;;15086:135::o;15845:386::-;16077:1;16073;16068:3;16064:11;16060:19;16052:6;16048:32;16037:9;16030:51;16117:6;16112:2;16101:9;16097:18;16090:34;16160:2;16155;16144:9;16140:18;16133:30;16011:4;16180:45;16221:2;16210:9;16206:18;16198:6;16180:45;:::i;:::-;16172:53;15845:386;-1:-1:-1;;;;;15845:386:8:o;16236:277::-;16303:6;16356:2;16344:9;16335:7;16331:23;16327:32;16324:52;;;16372:1;16369;16362:12;16324:52;16404:9;16398:16;16457:5;16450:13;16443:21;16436:5;16433:32;16423:60;;16479:1;16476;16469:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    320,
    9475
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB894AD33 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB894AD33 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xCDA32773 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD1D3BDE3 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xE3AA85CB EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xEF124FAF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x8897CAD3 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xB198333C EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FEC9240 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2FEC9240 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x32DD45FB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x3803ABEF EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x533B4C56 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x57529E6C EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1889611 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1D5CCD9B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x21D7112E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x27028A84 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x2EE79DED EQ PUSH2 0x202 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x6C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x145 SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x7E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x30D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x192E JUMP JUMPDEST PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x425 SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x473 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x481 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0xB SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND DUP11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50A PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 DUP2 SSTORE DUP8 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x536 SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 SWAP1 DUP10 ADD SWAP1 PUSH2 0x15D1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0x56C SWAP1 DUP6 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0xA5F5EDC69E0AA3C9F2FA246209EF9418FC10A316FFA12F1D807A68692436D06B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP2 AND SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x630 SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65C SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD GT PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x790 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x630 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x81A PUSH1 0x0 PUSH2 0x112E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x89E DUP3 DUP3 PUSH2 0x117E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8D8 PUSH2 0x16D0 JUMP JUMPDEST EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2930B3333632903737BA1037B832B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149859999B19481A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420636F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x9E4 SWAP1 DUP3 SWAP1 PUSH2 0x19EE JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65742070726963652069732067726561746572207468616E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x8185B5BDD5B9D081CD95B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA69 SWAP1 DUP5 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xAC1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAED SWAP1 DUP5 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB0F SWAP1 DUP3 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0xB19 SWAP1 CALLVALUE PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x686520726166666C65 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0xC31 SWAP2 PUSH2 0x19A1 JUMP JUMPDEST GT PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206578706972656420616E642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D0818994818DB185A5B5959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB9 PUSH2 0x16D0 JUMP JUMPDEST EQ PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F742061766169626C6520666F7220636C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x61696D696E67 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST LT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB SWAP1 PUSH2 0xE6A SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726566756E6420706572696F6420686173206E6F7420656E64656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x16D0 JUMP JUMPDEST EQ ISZERO PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A19481C9859999B19481A5CC8199A5B9A5CDA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0x16D0 JUMP JUMPDEST EQ ISZERO PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C652069732073656C656374696E6720612077696E6E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE CALLER DUP1 DUP8 MSTORE PUSH1 0x9 DUP4 ADD DUP6 MSTORE SWAP3 DUP7 KECCAK256 SLOAD DUP8 DUP8 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0x1028 SWAP2 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x89E JUMPI POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x112B DUP2 PUSH2 0x112E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B5 PUSH2 0x16D0 JUMP JUMPDEST EQ PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F7420696E207468652053656C65637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6757696E6E6572207374617465 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADD SLOAD PUSH2 0x1245 SWAP1 DUP5 PUSH2 0x1A3D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x135A JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0x9 SWAP1 SWAP3 ADD SWAP2 DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP DUP5 DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x12D1 JUMPI POP PUSH2 0x12CE DUP2 DUP6 PUSH2 0x19A1 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12F9 JUMPI PUSH2 0x12F9 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP9 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0x135A JUMP JUMPDEST PUSH2 0x1344 DUP2 DUP6 PUSH2 0x19A1 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x1352 SWAP1 PUSH2 0x1A75 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x125D JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x138E SWAP2 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xB DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD DUP2 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB14375695E696EE7A5001ECE25E2FCFB144242680D208452819016209AE26F67 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14BE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152E SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1589 SWAP2 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x15C9 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x15DD SWAP1 PUSH2 0x1950 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15FF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1645 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1618 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1645 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1645 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1645 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x162A JUMP JUMPDEST POP PUSH2 0x1651 SWAP3 SWAP2 POP PUSH2 0x1655 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1651 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x168D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1700 DUP2 DUP5 ADD DUP14 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE DUP10 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 POP POP PUSH1 0x4 DUP5 LT PUSH2 0x1754 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x17B2 PUSH1 0x20 DUP5 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH2 0x1824 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x184C JUMPI PUSH2 0x184C PUSH2 0x17BB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18A8 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18E8 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x191F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1949 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1964 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1985 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B4 PUSH2 0x198B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1A08 PUSH2 0x198B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A1F JUMPI PUSH2 0x1A1F PUSH2 0x198B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A5A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A89 PUSH2 0x198B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AB7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1683 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SUB LOG4 0x27 COINBASE 0xBE SWAP9 DUP15 0x2B 0xE7 PUSH24 0x509F23191A7A7BBC3887C2ECE75E2E65E07966D60E64736F PUSH13 0x634300080A0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12A"
    },
    "12": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "GT",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB894AD33"
    },
    "36": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "GT",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB894AD33"
    },
    "47": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35A"
    },
    "51": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCDA32773"
    },
    "58": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36D"
    },
    "62": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD1D3BDE3"
    },
    "69": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38D"
    },
    "73": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE3AA85CB"
    },
    "80": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A3"
    },
    "84": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "86": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xEF124FAF"
    },
    "91": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "92": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C3"
    },
    "95": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "96": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "97": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E3"
    },
    "106": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "107": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "REVERT",
      "path": "7"
    },
    "111": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "118": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "122": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8897CAD3"
    },
    "129": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DD"
    },
    "133": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "134": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "135": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "140": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F3"
    },
    "144": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "145": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "146": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "151": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x325"
    },
    "155": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "156": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "157": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB198333C"
    },
    "162": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x345"
    },
    "166": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "167": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "REVERT",
      "path": "7"
    },
    "171": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FEC9240"
    },
    "178": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "GT",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FEC9240"
    },
    "189": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "190": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x218"
    },
    "193": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "194": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "195": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x32DD45FB"
    },
    "200": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "201": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "204": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "205": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "206": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3803ABEF"
    },
    "211": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x269"
    },
    "215": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "216": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "217": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x533B4C56"
    },
    "222": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27E"
    },
    "226": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "227": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "228": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x57529E6C"
    },
    "233": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AF"
    },
    "237": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "238": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "REVERT",
      "path": "7"
    },
    "242": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "243": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "244": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1889611"
    },
    "249": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "250": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F"
    },
    "253": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "254": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "255": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1D5CCD9B"
    },
    "260": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "261": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x158"
    },
    "264": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "265": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "266": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x21D7112E"
    },
    "271": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18E"
    },
    "275": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "276": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "277": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x27028A84"
    },
    "282": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D5"
    },
    "286": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "287": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "288": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2EE79DED"
    },
    "293": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "EQ",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x202"
    },
    "297": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "298": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "299": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "301": {
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "DUP1",
      "path": "7"
    },
    "302": {
      "first_revert": true,
      "fn": null,
      "offset": [
        320,
        9475
      ],
      "op": "REVERT",
      "path": "7"
    },
    "303": {
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "304": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "306": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "307": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13B"
    },
    "310": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "311": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "314": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "REVERT",
      "path": "7"
    },
    "315": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "POP",
      "path": "7"
    },
    "317": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "320": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "322": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "323": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP2",
      "path": "7"
    },
    "324": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMP",
      "path": "7"
    },
    "325": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "326": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "328": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "DUP2"
    },
    "331": {
      "op": "MSTORE"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "334": {
      "op": "ADD"
    },
    "335": {
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "336": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "338": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "339": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "340": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "341": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SUB",
      "path": "7"
    },
    "342": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "343": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "RETURN",
      "path": "7"
    },
    "344": {
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "345": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "346": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "347": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "348": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x164"
    },
    "351": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "352": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "355": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "REVERT",
      "path": "7"
    },
    "356": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178"
    },
    "361": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x173"
    },
    "364": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "365": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "367": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166A"
    },
    "370": {
      "fn": null,
      "jump": "i",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "371": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "372": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x403"
    },
    "375": {
      "fn": null,
      "jump": "i",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "376": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "377": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "379": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "380": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "383": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP11",
      "path": "7"
    },
    "384": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "385": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "386": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "387": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "388": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "389": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "390": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "391": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "392": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "393": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "394": {
      "fn": null,
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16E6"
    },
    "397": {
      "fn": null,
      "jump": "i",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "398": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "399": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "400": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "DUP1",
      "path": "7"
    },
    "401": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "402": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A"
    },
    "405": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "406": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "408": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "DUP1",
      "path": "7"
    },
    "409": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "REVERT",
      "path": "7"
    },
    "410": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "415": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A9"
    },
    "418": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "419": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "421": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178F"
    },
    "424": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "jump": "i",
      "offset": [
        4583,
        4733
      ],
      "op": "JUMP",
      "path": "7"
    },
    "425": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "426": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4658,
        4673
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "428": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 0
    },
    "429": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "430": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "431": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "433": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "435": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "436": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "437": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "438": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "440": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "DUP1",
      "path": "7"
    },
    "441": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "DUP4",
      "path": "7"
    },
    "442": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4704
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "DUP6",
      "path": "7"
    },
    "452": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "AND",
      "path": "7"
    },
    "453": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "DUP5",
      "path": "7"
    },
    "454": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "455": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4719
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "457": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4719
      ],
      "op": "ADD",
      "path": "7"
    },
    "458": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "459": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "460": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "461": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "462": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "463": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4692,
        4726
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "464": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "465": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "466": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "POP",
      "path": "7"
    },
    "467": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "POP",
      "path": "7"
    },
    "468": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4583,
        4733
      ],
      "op": "JUMP",
      "path": "7"
    },
    "469": {
      "offset": [
        3013,
        3070
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "470": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "471": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "DUP1",
      "path": "7"
    },
    "472": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "473": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E1"
    },
    "476": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "477": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "479": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "DUP1",
      "path": "7"
    },
    "480": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "REVERT",
      "path": "7"
    },
    "481": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "486": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F0"
    },
    "489": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "490": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "492": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166A"
    },
    "495": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "jump": "i",
      "offset": [
        3013,
        3070
      ],
      "op": "JUMP",
      "path": "7"
    },
    "496": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "497": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "499": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "501": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "502": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "504": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "505": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "DUP2",
      "path": "7"
    },
    "506": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "507": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "509": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "510": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "511": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "512": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "DUP2",
      "path": "7"
    },
    "513": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3013,
        3070
      ],
      "op": "JUMP",
      "path": "7"
    },
    "514": {
      "offset": [
        3192,
        3217
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "515": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "516": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "DUP1",
      "path": "7"
    },
    "517": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "518": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20E"
    },
    "521": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "522": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "524": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "DUP1",
      "path": "7"
    },
    "525": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "REVERT",
      "path": "7"
    },
    "526": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "527": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "POP",
      "path": "7"
    },
    "528": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "531": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "533": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "534": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "DUP2",
      "path": "7"
    },
    "535": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3192,
        3217
      ],
      "op": "JUMP",
      "path": "7"
    },
    "536": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "537": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "538": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "DUP1",
      "path": "7"
    },
    "539": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "540": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x224"
    },
    "543": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "544": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "546": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "DUP1",
      "path": "7"
    },
    "547": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "REVERT",
      "path": "7"
    },
    "548": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "553": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x233"
    },
    "556": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "557": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "559": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17D1"
    },
    "562": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMP",
      "path": "7"
    },
    "563": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "564": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4EF"
    },
    "567": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMP",
      "path": "7"
    },
    "568": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "569": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "570": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "571": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "572": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "575": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "576": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "578": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "579": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "REVERT",
      "path": "7"
    },
    "580": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x258"
    },
    "585": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x253"
    },
    "588": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "589": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "591": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166A"
    },
    "594": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "595": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "596": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5E0"
    },
    "599": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "600": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "601": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "603": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "604": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "607": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "608": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "609": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "610": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "611": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "612": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "613": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1895"
    },
    "616": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "617": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "618": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "619": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "DUP1",
      "path": "7"
    },
    "620": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "621": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x275"
    },
    "624": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "625": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "627": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "DUP1",
      "path": "7"
    },
    "628": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "REVERT",
      "path": "7"
    },
    "629": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "630": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "POP",
      "path": "7"
    },
    "631": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "634": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C3"
    },
    "637": {
      "fn": "CharityRaffle.CollectChange",
      "jump": "i",
      "offset": [
        8368,
        8628
      ],
      "op": "JUMP",
      "path": "7"
    },
    "638": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "639": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "640": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "DUP1",
      "path": "7"
    },
    "641": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "642": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28A"
    },
    "645": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "646": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "648": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "DUP1",
      "path": "7"
    },
    "649": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "REVERT",
      "path": "7"
    },
    "650": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29E"
    },
    "655": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x299"
    },
    "658": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "659": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "661": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166A"
    },
    "664": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMP",
      "path": "7"
    },
    "665": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "666": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A1"
    },
    "669": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMP",
      "path": "7"
    },
    "670": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "671": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "673": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "674": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "677": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "678": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "679": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "680": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "681": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "682": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "683": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18D5"
    },
    "686": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMP",
      "path": "7"
    },
    "687": {
      "offset": [
        2886,
        2921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "688": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "689": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "DUP1",
      "path": "7"
    },
    "690": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "691": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BB"
    },
    "694": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "695": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "697": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "DUP1",
      "path": "7"
    },
    "698": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "REVERT",
      "path": "7"
    },
    "699": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "700": {
      "op": "POP"
    },
    "701": {
      "offset": [
        2886,
        2921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "703": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "704": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "707": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "708": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "709": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2886,
        2921
      ],
      "op": "JUMP",
      "path": "7"
    },
    "710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2"
    },
    "717": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "723": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB"
    },
    "727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E6"
    },
    "730": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "733": {
      "offset": [
        561,
        592
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "DUP1",
      "path": "7"
    },
    "736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E9"
    },
    "740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "DUP1",
      "path": "7"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "REVERT",
      "path": "7"
    },
    "745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "POP",
      "path": "7"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "DUP2",
      "path": "7"
    },
    "754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "JUMP",
      "path": "7"
    },
    "755": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "756": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "757": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "758": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "759": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "762": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "763": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "765": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "766": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "767": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "781": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "782": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "784": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "791": {
      "op": "SHL"
    },
    "792": {
      "op": "SUB"
    },
    "793": {
      "op": "SWAP1"
    },
    "794": {
      "op": "SWAP2"
    },
    "795": {
      "op": "AND"
    },
    "796": {
      "op": "DUP2"
    },
    "797": {
      "op": "MSTORE"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "804": {
      "op": "JUMP"
    },
    "805": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "806": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "807": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "808": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "809": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x331"
    },
    "812": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "813": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "815": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "816": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "REVERT",
      "path": "4"
    },
    "817": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "818": {
      "op": "POP"
    },
    "819": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DB"
    },
    "822": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "825": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "826": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "828": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x190C"
    },
    "831": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "832": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "833": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x81C"
    },
    "836": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "837": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "838": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "839": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "DUP1",
      "path": "7"
    },
    "840": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "841": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x351"
    },
    "844": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "845": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "847": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "DUP1",
      "path": "7"
    },
    "848": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "REVERT",
      "path": "7"
    },
    "849": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "850": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "POP",
      "path": "7"
    },
    "851": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "854": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8A2"
    },
    "857": {
      "fn": "CharityRaffle.GetRaffleCount",
      "jump": "i",
      "offset": [
        4739,
        4840
      ],
      "op": "JUMP",
      "path": "7"
    },
    "858": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "859": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DB"
    },
    "862": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x368"
    },
    "865": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "866": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "868": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x190C"
    },
    "871": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7307,
        8272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "872": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "873": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8B2"
    },
    "876": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7307,
        8272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "877": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "878": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "879": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "DUP1",
      "path": "7"
    },
    "880": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "881": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x379"
    },
    "884": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "885": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "887": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "DUP1",
      "path": "7"
    },
    "888": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "REVERT",
      "path": "7"
    },
    "889": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DB"
    },
    "894": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x388"
    },
    "897": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "898": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "900": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166A"
    },
    "903": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMP",
      "path": "7"
    },
    "904": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "905": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB33"
    },
    "908": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMP",
      "path": "7"
    },
    "909": {
      "offset": [
        484,
        509
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "910": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "911": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "DUP1",
      "path": "7"
    },
    "912": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "913": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x399"
    },
    "916": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "917": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "919": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "DUP1",
      "path": "7"
    },
    "920": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "REVERT",
      "path": "7"
    },
    "921": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "922": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "POP",
      "path": "7"
    },
    "923": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "926": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "928": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "929": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "DUP2",
      "path": "7"
    },
    "930": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "JUMP",
      "path": "7"
    },
    "931": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "932": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "933": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "DUP1",
      "path": "7"
    },
    "934": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "935": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AF"
    },
    "938": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "939": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "941": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "DUP1",
      "path": "7"
    },
    "942": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "REVERT",
      "path": "7"
    },
    "943": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DB"
    },
    "948": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3BE"
    },
    "951": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "952": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "954": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166A"
    },
    "957": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMP",
      "path": "7"
    },
    "958": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "959": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE76"
    },
    "962": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMP",
      "path": "7"
    },
    "963": {
      "offset": [
        419,
        450
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "964": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "965": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "DUP1",
      "path": "7"
    },
    "966": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "967": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CF"
    },
    "970": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "971": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "973": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "DUP1",
      "path": "7"
    },
    "974": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "REVERT",
      "path": "7"
    },
    "975": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "offset": [
        419,
        450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "979": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "980": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30D"
    },
    "983": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "offset": [
        419,
        450
      ],
      "op": "AND",
      "path": "7"
    },
    "993": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "994": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "JUMP",
      "path": "7"
    },
    "995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EF"
    },
    "1002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB"
    },
    "1012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1016": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192E"
    },
    "1021": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1093"
    },
    "1026": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1027": {
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1043": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1047": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x425"
    },
    "1056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1950"
    },
    "1060": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1062": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1066": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DIV",
      "path": "7"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MUL",
      "path": "7"
    },
    "1072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1083": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1088": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x451"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1950"
    },
    "1104": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49E"
    },
    "1111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "LT",
      "path": "7"
    },
    "1116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x473"
    },
    "1119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DIV",
      "path": "7"
    },
    "1127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MUL",
      "path": "7"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49E"
    },
    "1138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "GT",
      "path": "7"
    },
    "1169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x481"
    },
    "1172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SUB",
      "path": "7"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "AND",
      "path": "7"
    },
    "1179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP10",
      "path": "7"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "ADD",
      "path": "7"
    },
    "1227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "1232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "AND",
      "path": "7"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "AND",
      "path": "7"
    },
    "1251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "AND",
      "path": "7"
    },
    "1259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "AND",
      "path": "7"
    },
    "1261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2927,
        2968
      ],
      "op": "DUP11",
      "path": "7"
    },
    "1262": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2927,
        2968
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1263": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1264": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3333,
        3349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1266": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3360,
        3383
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 2,
      "value": "0x4FF"
    },
    "1269": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3360,
        3371
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1271": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 3
    },
    "1272": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1273": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1275": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "3"
    },
    "1276": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1277": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1278": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1279": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3360,
        3383
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1280": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3393,
        3404
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1282": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3407,
        3428
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x50A"
    },
    "1285": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3407,
        3418
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1287": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 4
    },
    "1288": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1289": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1290": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3407,
        3428
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1291": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3438,
        3459
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1293": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1294": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1295": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1296": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1298": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1300": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1301": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1302": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1303": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1305": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1306": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1307": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1308": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3485,
        3500
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 5
    },
    "1309": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3485,
        3500
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1310": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3485,
        3500
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1311": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "DUP8",
      "path": "7",
      "statement": 6
    },
    "1312": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1313": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3393,
        3428
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1314": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3393,
        3428
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3462,
        3474
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1317": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x536"
    },
    "1320": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1321": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3521
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1323": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3521
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1324": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3521
      ],
      "op": "ADD",
      "path": "7"
    },
    "1325": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3521
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1326": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1327": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "DUP10",
      "path": "7"
    },
    "1328": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "ADD",
      "path": "7"
    },
    "1329": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1330": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D1"
    },
    "1333": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3510,
        3535
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1334": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3510,
        3535
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3566,
        3567
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x0"
    },
    "1338": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3545,
        3563
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1340": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3545,
        3563
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1341": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3545,
        3563
      ],
      "op": "ADD",
      "path": "7"
    },
    "1342": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3545,
        3567
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1343": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3577,
        3595
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x3"
    },
    "1345": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3577,
        3595
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1346": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3577,
        3595
      ],
      "op": "ADD",
      "path": "7"
    },
    "1347": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3577,
        3610
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1348": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3577,
        3610
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1349": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3577,
        3610
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1350": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3638
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x4"
    },
    "1352": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3638
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1353": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3638
      ],
      "op": "ADD",
      "path": "7"
    },
    "1354": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3660
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1355": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3660
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "op": "NOT"
    },
    "1365": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3660
      ],
      "op": "AND",
      "path": "7"
    },
    "1366": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3649,
        3659
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1367": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3660
      ],
      "op": "OR",
      "path": "7"
    },
    "1368": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3660
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1369": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3620,
        3660
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1370": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3689,
        3704
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 10
    },
    "1371": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3670,
        3686
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1373": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3670,
        3686
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1374": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3670,
        3686
      ],
      "op": "ADD",
      "path": "7"
    },
    "1375": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3670,
        3704
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1376": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3670,
        3704
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1377": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3670,
        3704
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1378": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3731,
        3762
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0x56C"
    },
    "1381": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3731,
        3762
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1382": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3762
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1383": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3762
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1384": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3731,
        3762
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "1387": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3731,
        3762
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1388": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3731,
        3762
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1389": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3714,
        3728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1391": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3714,
        3728
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1392": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3714,
        3728
      ],
      "op": "ADD",
      "path": "7"
    },
    "1393": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3714,
        3762
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1394": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3784
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x8"
    },
    "1396": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3784
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1397": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3784
      ],
      "op": "ADD",
      "path": "7"
    },
    "1398": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3803
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1399": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3803
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1402": {
      "op": "NOT"
    },
    "1403": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3803
      ],
      "op": "AND",
      "path": "7"
    },
    "1404": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3803
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1405": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3772,
        3803
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1406": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3826
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x5"
    },
    "1408": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3826
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1409": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3826
      ],
      "op": "ADD",
      "path": "7"
    },
    "1410": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3841
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1411": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3841
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "op": "NOT"
    },
    "1421": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3841
      ],
      "op": "AND",
      "path": "7"
    },
    "1422": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3841
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1423": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3813,
        3841
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1424": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 14,
      "value": "0x4"
    },
    "1426": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1427": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "ADD",
      "path": "7"
    },
    "1428": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1429": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1431": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1432": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "op": "SUB"
    },
    "1441": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1442": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1443": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3870,
        3888
      ],
      "op": "AND",
      "path": "7"
    },
    "1444": {
      "op": "DUP3"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "DUP5"
    },
    "1451": {
      "op": "SWAP1"
    },
    "1452": {
      "op": "MSTORE"
    },
    "1453": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xA5F5EDC69E0AA3C9F2FA246209EF9418FC10A316FFA12F1D807A68692436D06B"
    },
    "1486": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1487": {
      "op": "ADD"
    },
    "1488": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1490": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1491": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1492": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1493": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "SUB",
      "path": "7"
    },
    "1494": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1495": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3856,
        3894
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1496": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3350,
        3901
      ],
      "op": "POP",
      "path": "7"
    },
    "1497": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3350,
        3901
      ],
      "op": "POP",
      "path": "7"
    },
    "1498": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1499": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1500": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "POP",
      "path": "7"
    },
    "1501": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "POP",
      "path": "7"
    },
    "1502": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3224,
        3901
      ],
      "op": "POP",
      "path": "7"
    },
    "1503": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "o",
      "offset": [
        3224,
        3901
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1504": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1505": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1507": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 15
    },
    "1508": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1509": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1510": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4158
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1512": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1514": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1515": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1516": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1517": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1519": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1520": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4163
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1521": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1523": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1524": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "ADD",
      "path": "7"
    },
    "1525": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1526": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1528": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1529": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "ADD",
      "path": "7"
    },
    "1530": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1531": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4217,
        4239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1533": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4217,
        4239
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1534": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4217,
        4239
      ],
      "op": "ADD",
      "path": "7"
    },
    "1535": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4217,
        4239
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1536": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4241,
        4261
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1537": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4241,
        4261
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1538": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4241,
        4261
      ],
      "op": "ADD",
      "path": "7"
    },
    "1539": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4241,
        4261
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1540": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4168
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1542": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1543": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4168
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1544": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4168
      ],
      "op": "ADD",
      "path": "7"
    },
    "1545": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1546": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1547": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4024,
        4042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1549": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4024,
        4042
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1550": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1551": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1552": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1553": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1554": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1555": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1556": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4044,
        4071
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1563": {
      "op": "SHL"
    },
    "1564": {
      "op": "SUB"
    },
    "1565": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1566": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1567": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "7"
    },
    "1568": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1569": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1570": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "AND",
      "path": "7"
    },
    "1571": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4196,
        4215
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1572": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4217,
        4239
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1573": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4241,
        4261
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1574": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4168
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1575": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4151,
        4168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1576": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x630"
    },
    "1579": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1580": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1950"
    },
    "1583": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1584": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1585": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1586": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1588": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1589": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1591": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1592": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1593": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DIV",
      "path": "7"
    },
    "1594": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MUL",
      "path": "7"
    },
    "1595": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1597": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1598": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1600": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1601": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1602": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1603": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1604": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1606": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1607": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1608": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1609": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1610": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1611": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1612": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1613": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1614": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1616": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1617": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1618": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1619": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1620": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x65C"
    },
    "1623": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1624": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1950"
    },
    "1627": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1628": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1629": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1630": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1631": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A9"
    },
    "1634": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1635": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1636": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1638": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "LT",
      "path": "7"
    },
    "1639": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67E"
    },
    "1642": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1643": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1646": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1647": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1648": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1649": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DIV",
      "path": "7"
    },
    "1650": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MUL",
      "path": "7"
    },
    "1651": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1652": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1653": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1654": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1656": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1657": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1658": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A9"
    },
    "1661": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1662": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1663": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1664": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1665": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1666": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1667": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1669": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1670": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1672": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1674": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1675": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1676": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1677": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1678": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1679": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1680": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1681": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1682": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1684": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1685": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1686": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1688": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1689": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1690": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1691": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "GT",
      "path": "7"
    },
    "1692": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x68C"
    },
    "1695": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1696": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1697": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1698": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SUB",
      "path": "7"
    },
    "1699": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1701": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "AND",
      "path": "7"
    },
    "1702": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1703": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "ADD",
      "path": "7"
    },
    "1704": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1705": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1706": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1707": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1708": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1709": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1710": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1711": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1712": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1713": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1714": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1715": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1716": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1717": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1718": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1719": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1720": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1721": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1722": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4143,
        4262
      ],
      "op": "POP",
      "path": "7"
    },
    "1723": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1724": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1725": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1726": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1727": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1728": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1729": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3967,
        4269
      ],
      "op": "POP",
      "path": "7"
    },
    "1730": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "o",
      "offset": [
        3967,
        4269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1731": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1732": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8419,
        8426
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1734": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1735": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "SUB"
    },
    "1744": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1745": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 16
    },
    "1746": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1747": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F7"
    },
    "1750": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1751": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1753": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1763": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1766": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EE"
    },
    "1769": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1770": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B9"
    },
    "1773": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1775": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1779": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1784": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8454,
        8455
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x0"
    },
    "1786": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8445,
        8451
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1788": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8445,
        8451
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1789": {
      "branch": 63,
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8445,
        8455
      ],
      "op": "GT",
      "path": "7"
    },
    "1790": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x749"
    },
    "1793": {
      "branch": 63,
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1794": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1796": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1803": {
      "op": "SHL"
    },
    "1804": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1805": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1808": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1810": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1811": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "ADD",
      "path": "7"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1817": {
      "op": "DUP3"
    },
    "1818": {
      "op": "ADD"
    },
    "1819": {
      "op": "MSTORE"
    },
    "1820": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1855": {
      "op": "DUP3"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "1864": {
      "op": "JUMP"
    },
    "1865": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8437,
        8490
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1866": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8532,
        8538
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x9"
    },
    "1868": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8532,
        8538
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1869": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1871": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1872": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8508,
        8518
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1873": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8508,
        8518
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1874": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8532,
        8538
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1875": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1877": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1878": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1879": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1880": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8532,
        8538
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1881": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8508,
        8518
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1882": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "GAS",
      "path": "7"
    },
    "1883": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "CALL",
      "path": "7"
    },
    "1884": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1885": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "POP",
      "path": "7"
    },
    "1886": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "POP",
      "path": "7"
    },
    "1887": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "POP",
      "path": "7"
    },
    "1888": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1889": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1890": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1892": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1893": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "EQ",
      "path": "7"
    },
    "1894": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78B"
    },
    "1897": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1898": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1900": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1901": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1902": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "POP",
      "path": "7"
    },
    "1903": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1905": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "NOT",
      "path": "7"
    },
    "1906": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "1908": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1909": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "ADD",
      "path": "7"
    },
    "1910": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "AND",
      "path": "7"
    },
    "1911": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1912": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "ADD",
      "path": "7"
    },
    "1913": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1915": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1916": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1917": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1918": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1919": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1920": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1922": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1924": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1925": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "ADD",
      "path": "7"
    },
    "1926": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1927": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x790"
    },
    "1930": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1931": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1932": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1934": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1935": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "POP",
      "path": "7"
    },
    "1936": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8500,
        8543
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8571,
        8577
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1941": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8571,
        8577
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1942": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8571,
        8577
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1943": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8553,
        8568
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1945": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8587,
        8597
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 19
    },
    "1946": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8587,
        8597
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1947": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8587,
        8597
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1948": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8571,
        8577
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8368,
        8628
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1952": {
      "fn": "CharityRaffle.CollectChange",
      "jump": "o",
      "offset": [
        8368,
        8628
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1953": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4275,
        4577
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1954": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1956": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 20
    },
    "1957": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1958": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1959": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1961": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1963": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1964": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1965": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1966": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1968": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1969": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4466
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1970": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4473,
        4495
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1972": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4473,
        4495
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1973": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4473,
        4495
      ],
      "op": "ADD",
      "path": "7"
    },
    "1974": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4473,
        4495
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1975": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4497,
        4517
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1976": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4497,
        4517
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1977": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4497,
        4517
      ],
      "op": "ADD",
      "path": "7"
    },
    "1978": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4497,
        4517
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1979": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4519,
        4543
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1981": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4519,
        4543
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1982": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4519,
        4543
      ],
      "op": "ADD",
      "path": "7"
    },
    "1983": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4519,
        4543
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1984": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4545,
        4569
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1986": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4545,
        4569
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1987": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4545,
        4569
      ],
      "op": "ADD",
      "path": "7"
    },
    "1988": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4545,
        4569
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1989": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1991": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1992": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4471
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1993": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4471
      ],
      "op": "ADD",
      "path": "7"
    },
    "1994": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4446,
        4570
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1995": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4446,
        4570
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1996": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1998": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1999": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2000": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2001": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2002": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2003": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2004": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2005": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4358,
        4375
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "2006": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4473,
        4495
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2007": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4473,
        4495
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2008": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4497,
        4517
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2009": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4497,
        4517
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2010": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4519,
        4543
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2011": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4545,
        4569
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2012": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4471
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2013": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4454,
        4471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2014": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4446,
        4570
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x630"
    },
    "2017": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4446,
        4570
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2018": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4446,
        4570
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1950"
    },
    "2021": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4446,
        4570
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2022": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2023": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2025": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "op": "SUB"
    },
    "2034": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2035": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2036": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2037": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "2040": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2056": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EE"
    },
    "2059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2060": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B9"
    },
    "2063": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2064": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2065": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x81A"
    },
    "2068": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2070": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112E"
    },
    "2073": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2074": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2075": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2076": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2077": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9750,
        9760
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 22
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2084": {
      "op": "SHL"
    },
    "2085": {
      "op": "SUB"
    },
    "2086": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9764,
        9778
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "2119": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9750,
        9778
      ],
      "op": "AND",
      "path": "4"
    },
    "2120": {
      "branch": 81,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9750,
        9778
      ],
      "op": "EQ",
      "path": "4"
    },
    "2121": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x894"
    },
    "2124": {
      "branch": 81,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2125": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2127": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2134": {
      "op": "SHL"
    },
    "2135": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2136": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2139": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2141": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2142": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "ADD",
      "path": "4"
    },
    "2143": {
      "op": "MSTORE"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2148": {
      "op": "DUP3"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2186": {
      "op": "DUP3"
    },
    "2187": {
      "op": "ADD"
    },
    "2188": {
      "op": "MSTORE"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2191": {
      "op": "ADD"
    },
    "2192": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6EE"
    },
    "2195": {
      "op": "JUMP"
    },
    "2196": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2197": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9820,
        9860
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 23,
      "value": "0x89E"
    },
    "2200": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9838,
        9847
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2201": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9849,
        9859
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2202": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9820,
        9837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x117E"
    },
    "2205": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9820,
        9860
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2206": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9820,
        9860
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2207": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "POP",
      "path": "4"
    },
    "2208": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "POP",
      "path": "4"
    },
    "2209": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2210": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2211": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4786,
        4793
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2213": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4812,
        4833
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 24,
      "value": "0x8AD"
    },
    "2216": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4812,
        4823
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2218": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2219": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2220": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2221": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4812,
        4833
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2222": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4805,
        4833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2223": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4805,
        4833
      ],
      "op": "POP",
      "path": "7"
    },
    "2224": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4739,
        4840
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2225": {
      "fn": "CharityRaffle.GetRaffleCount",
      "jump": "o",
      "offset": [
        4739,
        4840
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2226": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7307,
        8272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2227": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7427,
        7443
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 25,
      "value": "0x0"
    },
    "2229": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2230": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2231": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2232": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2234": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2236": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2237": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2239": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2240": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7417
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2241": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7423
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2243": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7423
      ],
      "op": "ADD",
      "path": "7"
    },
    "2244": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7423
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2245": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7423
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2247": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7423
      ],
      "op": "AND",
      "path": "7"
    },
    "2248": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2250": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2251": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "GT",
      "path": "7"
    },
    "2252": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2253": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8D8"
    },
    "2256": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2257": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8D8"
    },
    "2260": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D0"
    },
    "2263": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7400,
        7443
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2264": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2265": {
      "branch": 64,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7400,
        7443
      ],
      "op": "EQ",
      "path": "7"
    },
    "2266": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x917"
    },
    "2269": {
      "branch": 64,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2270": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2272": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2279": {
      "op": "SHL"
    },
    "2280": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2281": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2284": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2286": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2287": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "ADD",
      "path": "7"
    },
    "2288": {
      "op": "MSTORE"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH15",
      "value": "0x2930B3333632903737BA1037B832B7"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2317": {
      "op": "DUP3"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "MSTORE"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "2326": {
      "op": "JUMP"
    },
    "2327": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7392,
        7463
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2328": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x0"
    },
    "2330": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2331": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2332": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2333": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7506
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2335": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2337": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2338": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2339": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2340": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2342": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2343": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2344": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7516
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2345": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7524
      ],
      "op": "ADD",
      "path": "7"
    },
    "2346": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7499,
        7524
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2347": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7481,
        7496
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "2348": {
      "branch": 65,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7481,
        7524
      ],
      "op": "LT",
      "path": "7"
    },
    "2349": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x96B"
    },
    "2352": {
      "branch": 65,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2353": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2355": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2362": {
      "op": "SHL"
    },
    "2363": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2364": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2367": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2369": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2370": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "ADD",
      "path": "7"
    },
    "2371": {
      "op": "MSTORE"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2376": {
      "op": "DUP3"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "MSTORE"
    },
    "2379": {
      "op": "PUSH16",
      "value": "0x149859999B19481A5CC818DB1BDCD959"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2401": {
      "op": "DUP3"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "2410": {
      "op": "JUMP"
    },
    "2411": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7473,
        7545
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2412": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7578,
        7579
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x0"
    },
    "2414": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7563,
        7575
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2415": {
      "branch": 66,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7563,
        7579
      ],
      "op": "GT",
      "path": "7"
    },
    "2416": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C7"
    },
    "2419": {
      "branch": 66,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2420": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2422": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2429": {
      "op": "SHL"
    },
    "2430": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2431": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2436": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2437": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "ADD",
      "path": "7"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH32",
      "value": "0x5469636B657420636F756E74206D757374206265206772656174657220746861"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2481": {
      "op": "DUP3"
    },
    "2482": {
      "op": "ADD"
    },
    "2483": {
      "op": "MSTORE"
    },
    "2484": {
      "op": "PUSH3",
      "value": "0x6E203"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "MSTORE"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2498": {
      "op": "ADD"
    },
    "2499": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "2502": {
      "op": "JUMP"
    },
    "2503": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7555,
        7619
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2504": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x0"
    },
    "2506": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2507": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2508": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2509": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7657
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2511": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2513": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2514": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2516": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2517": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7667
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2518": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7679
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2520": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7679
      ],
      "op": "ADD",
      "path": "7"
    },
    "2521": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7679
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2522": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9E4"
    },
    "2525": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2526": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7682,
        7694
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2527": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7682,
        7694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2528": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7694
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19EE"
    },
    "2531": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7650,
        7694
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2532": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7650,
        7694
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2533": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7637,
        7646
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2534": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7637,
        7694
      ],
      "op": "LT",
      "path": "7"
    },
    "2535": {
      "branch": 67,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7637,
        7694
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2536": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA48"
    },
    "2539": {
      "branch": 67,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2540": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2542": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2543": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2549": {
      "op": "SHL"
    },
    "2550": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2551": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2554": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2556": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2557": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "ADD",
      "path": "7"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2563": {
      "op": "DUP3"
    },
    "2564": {
      "op": "ADD"
    },
    "2565": {
      "op": "MSTORE"
    },
    "2566": {
      "op": "PUSH32",
      "value": "0x5469636B65742070726963652069732067726561746572207468616E20746865"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2601": {
      "op": "DUP3"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "op": "MSTORE"
    },
    "2604": {
      "op": "PUSH12",
      "value": "0x8185B5BDD5B9D081CD95B9D"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2622": {
      "op": "DUP3"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "2631": {
      "op": "JUMP"
    },
    "2632": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7629,
        7743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2633": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x0"
    },
    "2635": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2636": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2637": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2638": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7760
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2640": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2642": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2643": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2645": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2646": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2647": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2649": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7782
      ],
      "op": "ADD",
      "path": "7"
    },
    "2650": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2651": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2652": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7786,
        7798
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2653": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7786,
        7798
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2654": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7770
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2655": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA69"
    },
    "2658": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2659": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7786,
        7798
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2660": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7786,
        7798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2661": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "2664": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7753,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2665": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2666": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2667": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2668": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7753,
        7798
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2673": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2674": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2675": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2676": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2678": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2680": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2681": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2682": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2683": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2685": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2686": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2687": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7829
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2688": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7845,
        7855
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2689": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2690": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2691": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7844
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2693": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7844
      ],
      "op": "ADD",
      "path": "7"
    },
    "2694": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2695": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2696": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2697": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2698": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2699": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7812,
        7856
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2700": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7808,
        8053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAC1"
    },
    "2703": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7808,
        8053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2704": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x0"
    },
    "2706": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2707": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2708": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2709": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2711": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2713": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2714": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2715": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2716": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2718": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2719": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8012
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2720": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8025
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2722": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8025
      ],
      "op": "ADD",
      "path": "7"
    },
    "2723": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2724": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2725": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2727": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2728": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "ADD",
      "path": "7"
    },
    "2729": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2730": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2731": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2732": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2733": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2734": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2735": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2736": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "ADD",
      "path": "7"
    },
    "2737": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2738": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "op": "NOT"
    },
    "2748": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "AND",
      "path": "7"
    },
    "2749": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8031,
        8041
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2750": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "OR",
      "path": "7"
    },
    "2751": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2752": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7995,
        8042
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2753": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7808,
        8053
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2754": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x0"
    },
    "2756": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2757": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2758": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2759": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2761": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2763": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2764": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2765": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2766": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2768": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2769": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2770": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2771": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8095,
        8105
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2772": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2773": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2774": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2776": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8094
      ],
      "op": "ADD",
      "path": "7"
    },
    "2777": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2778": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2779": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2780": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2781": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8106
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2782": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2783": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2784": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8110,
        8122
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2785": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2786": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2787": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAED"
    },
    "2790": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2791": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8110,
        8122
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2792": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2793": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "2796": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8062,
        8122
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2797": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2798": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2799": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2800": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8062,
        8122
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x0"
    },
    "2805": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2806": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2807": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2808": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8228
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2810": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2812": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2813": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2815": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2816": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8238
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2817": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2819": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8250
      ],
      "op": "ADD",
      "path": "7"
    },
    "2820": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8250
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2821": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB0F"
    },
    "2824": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2825": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8253,
        8265
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2826": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8253,
        8265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2827": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19EE"
    },
    "2830": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8221,
        8265
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2831": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8221,
        8265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2832": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8209,
        8265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB19"
    },
    "2835": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8209,
        8265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2836": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8209,
        8218
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2837": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8209,
        8265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0D"
    },
    "2840": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8209,
        8265
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2841": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8209,
        8265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2842": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2844": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2846": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2847": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2848": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2849": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB2A"
    },
    "2852": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2853": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2854": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "2857": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8199,
        8265
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2858": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2859": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2860": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2861": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8199,
        8265
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2862": {
      "op": "POP"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "op": "POP"
    },
    "2866": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "o",
      "offset": [
        7307,
        8272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2867": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2868": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x0"
    },
    "2870": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2871": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2872": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2873": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4925
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2875": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2877": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2878": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2880": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2881": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4930
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2882": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2884": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4942
      ],
      "op": "ADD",
      "path": "7"
    },
    "2885": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4942
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4918,
        4942
      ],
      "op": "AND",
      "path": "7"
    },
    "2895": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4904,
        4914
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2896": {
      "branch": 68,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4904,
        4942
      ],
      "op": "EQ",
      "path": "7"
    },
    "2897": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBAE"
    },
    "2900": {
      "branch": 68,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2901": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2903": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2912": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2915": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2917": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2918": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "ADD",
      "path": "7"
    },
    "2919": {
      "op": "MSTORE"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2924": {
      "op": "DUP3"
    },
    "2925": {
      "op": "ADD"
    },
    "2926": {
      "op": "MSTORE"
    },
    "2927": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2962": {
      "op": "DUP3"
    },
    "2963": {
      "op": "ADD"
    },
    "2964": {
      "op": "MSTORE"
    },
    "2965": {
      "op": "PUSH9",
      "value": "0x686520726166666C65"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2980": {
      "op": "DUP3"
    },
    "2981": {
      "op": "ADD"
    },
    "2982": {
      "op": "MSTORE"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2985": {
      "op": "ADD"
    },
    "2986": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "2989": {
      "op": "JUMP"
    },
    "2990": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4896,
        4988
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2991": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x0"
    },
    "2993": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2994": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2995": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2996": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5032
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2998": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3000": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3001": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3002": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3003": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3005": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3006": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3007": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5037
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3008": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5045
      ],
      "op": "ADD",
      "path": "7"
    },
    "3009": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5025,
        5045
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3010": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5006,
        5021
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3011": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5006,
        5045
      ],
      "op": "LT",
      "path": "7"
    },
    "3012": {
      "branch": 69,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5006,
        5045
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3013": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC10"
    },
    "3016": {
      "branch": 69,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3017": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3019": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3020": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3026": {
      "op": "SHL"
    },
    "3027": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3028": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3031": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3033": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3034": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "ADD",
      "path": "7"
    },
    "3035": {
      "op": "MSTORE"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3040": {
      "op": "DUP3"
    },
    "3041": {
      "op": "ADD"
    },
    "3042": {
      "op": "MSTORE"
    },
    "3043": {
      "op": "PUSH32",
      "value": "0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3078": {
      "op": "DUP3"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "MSTORE"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3083": {
      "op": "ADD"
    },
    "3084": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "3087": {
      "op": "JUMP"
    },
    "3088": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4998,
        5079
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3089": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5120,
        5136
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x5"
    },
    "3091": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5120,
        5136
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3092": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3094": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3095": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3096": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3097": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5104
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3099": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3101": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3102": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3103": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3104": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3106": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3107": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3108": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5109
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3109": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5117
      ],
      "op": "ADD",
      "path": "7"
    },
    "3110": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5117
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3111": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5139,
        5154
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3112": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5139,
        5154
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3113": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC31"
    },
    "3116": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5136
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3117": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "3120": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5097,
        5136
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3121": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5136
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3122": {
      "branch": 70,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5097,
        5154
      ],
      "op": "GT",
      "path": "7"
    },
    "3123": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC93"
    },
    "3126": {
      "branch": 70,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3127": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3129": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3138": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3141": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3143": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3144": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "ADD",
      "path": "7"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "ADD"
    },
    "3152": {
      "op": "MSTORE"
    },
    "3153": {
      "op": "PUSH32",
      "value": "0x54686520726166666C6520686173206578706972656420616E642063616E6E6F"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3188": {
      "op": "DUP3"
    },
    "3189": {
      "op": "ADD"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH12",
      "value": "0x1D0818994818DB185A5B5959"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3209": {
      "op": "DUP3"
    },
    "3210": {
      "op": "ADD"
    },
    "3211": {
      "op": "MSTORE"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "3218": {
      "op": "JUMP"
    },
    "3219": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5089,
        5203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3220": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5243,
        5259
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x0"
    },
    "3222": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3223": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3224": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3225": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5228
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3227": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3229": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3230": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3232": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3233": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5233
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3234": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3236": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5239
      ],
      "op": "ADD",
      "path": "7"
    },
    "3237": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5239
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3238": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3240": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5239
      ],
      "op": "AND",
      "path": "7"
    },
    "3241": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3243": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3244": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "GT",
      "path": "7"
    },
    "3245": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3246": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCB9"
    },
    "3249": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3250": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCB9"
    },
    "3253": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D0"
    },
    "3256": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5221,
        5259
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3257": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3258": {
      "branch": 71,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5221,
        5259
      ],
      "op": "EQ",
      "path": "7"
    },
    "3259": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD15"
    },
    "3262": {
      "branch": 71,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3263": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3265": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3274": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3277": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3279": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3280": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "ADD",
      "path": "7"
    },
    "3281": {
      "op": "MSTORE"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3286": {
      "op": "DUP3"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "op": "PUSH32",
      "value": "0x54686520726166666C65206973206E6F742061766169626C6520666F7220636C"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3324": {
      "op": "DUP3"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "op": "PUSH6",
      "value": "0x61696D696E67"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "ADD"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "3348": {
      "op": "JUMP"
    },
    "3349": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5213,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3350": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5374,
        5381
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 37,
      "value": "0x3"
    },
    "3352": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5374,
        5381
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3353": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5327,
        5343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3355": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5327,
        5343
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3356": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3358": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3359": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3366": {
      "op": "SHL"
    },
    "3367": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3368": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3369": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5363,
        5367
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "3370": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3372": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3373": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "ADD",
      "path": "7"
    },
    "3374": {
      "op": "MSTORE"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "op": "SUB"
    },
    "3383": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5327,
        5343
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3384": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5327,
        5343
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3385": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5327,
        5343
      ],
      "op": "AND",
      "path": "7"
    },
    "3386": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5327,
        5343
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3387": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5354
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "3392": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5354
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3398": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3400": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3401": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3402": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3403": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "SUB",
      "path": "7"
    },
    "3404": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3405": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3406": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "GAS",
      "path": "7"
    },
    "3407": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "3408": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3409": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3410": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3411": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD60"
    },
    "3414": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3415": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3416": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3418": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3419": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3420": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3421": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3423": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3424": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3425": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "POP",
      "path": "7"
    },
    "3426": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "POP",
      "path": "7"
    },
    "3427": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "POP",
      "path": "7"
    },
    "3428": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "POP",
      "path": "7"
    },
    "3429": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3431": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3432": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3433": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3435": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "NOT",
      "path": "7"
    },
    "3436": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3438": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3439": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "ADD",
      "path": "7"
    },
    "3440": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "AND",
      "path": "7"
    },
    "3441": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3442": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "ADD",
      "path": "7"
    },
    "3443": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3444": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3446": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3447": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "POP",
      "path": "7"
    },
    "3448": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3449": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "ADD",
      "path": "7"
    },
    "3450": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3451": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD84"
    },
    "3454": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3455": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3456": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A24"
    },
    "3459": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5320,
        5369
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3460": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5369
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3461": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5381
      ],
      "op": "LT",
      "path": "7"
    },
    "3462": {
      "branch": 72,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5320,
        5381
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3463": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF8"
    },
    "3466": {
      "branch": 72,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3467": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3469": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3476": {
      "op": "SHL"
    },
    "3477": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3478": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3481": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3483": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3484": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "ADD",
      "path": "7"
    },
    "3485": {
      "op": "MSTORE"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "ADD"
    },
    "3492": {
      "op": "MSTORE"
    },
    "3493": {
      "op": "PUSH32",
      "value": "0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3528": {
      "op": "DUP3"
    },
    "3529": {
      "op": "ADD"
    },
    "3530": {
      "op": "MSTORE"
    },
    "3531": {
      "op": "PUSH32",
      "value": "0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3566": {
      "op": "DUP3"
    },
    "3567": {
      "op": "ADD"
    },
    "3568": {
      "op": "MSTORE"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "3575": {
      "op": "JUMP"
    },
    "3576": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5312,
        5446
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3577": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 38,
      "value": "0x0"
    },
    "3579": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3580": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3581": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3582": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3584": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3586": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3587": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3589": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3590": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5468
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3591": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5474
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3593": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5474
      ],
      "op": "ADD",
      "path": "7"
    },
    "3594": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5504
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3595": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5504
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3598": {
      "op": "NOT"
    },
    "3599": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5504
      ],
      "op": "AND",
      "path": "7"
    },
    "3600": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5477,
        5504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3602": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5504
      ],
      "op": "OR",
      "path": "7"
    },
    "3603": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5504
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3604": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5456,
        5504
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3605": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5601,
        5611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3607": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5601,
        5611
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3608": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5613,
        5620
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3610": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5613,
        5620
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3611": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5583,
        5621
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE24"
    },
    "3614": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5583,
        5621
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3615": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5601,
        5611
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3616": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5583,
        5600
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x144E"
    },
    "3619": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5583,
        5621
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3620": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5583,
        5621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3621": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 39,
      "value": "0x0"
    },
    "3623": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3624": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3625": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3626": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5698
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3628": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3630": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3631": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3633": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3634": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3635": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3636": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5709
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3637": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5715
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3638": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5715
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3639": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5676,
        5715
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3640": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "MLOAD",
      "path": "7",
      "statement": 40
    },
    "3641": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5563,
        5621
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3642": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5563,
        5621
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB"
    },
    "3677": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3678": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE6A"
    },
    "3681": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3682": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5563,
        5621
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3683": {
      "op": "DUP2"
    },
    "3684": {
      "op": "MSTORE"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "SWAP1"
    },
    "3689": {
      "op": "JUMP"
    },
    "3690": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3691": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3693": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3694": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3695": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3696": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "SUB",
      "path": "7"
    },
    "3697": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3698": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5769,
        5797
      ],
      "op": "LOG1",
      "path": "7"
    },
    "3699": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4886,
        5804
      ],
      "op": "POP",
      "path": "7"
    },
    "3700": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4846,
        5804
      ],
      "op": "POP",
      "path": "7"
    },
    "3701": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "o",
      "offset": [
        4846,
        5804
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3702": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3703": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8819,
        8835
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 41,
      "value": "0x5"
    },
    "3705": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8819,
        8835
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3706": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3708": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3709": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3710": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3711": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3713": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3715": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3716": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3717": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3718": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3720": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3721": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3722": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8808
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3723": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8816
      ],
      "op": "ADD",
      "path": "7"
    },
    "3724": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8816
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3725": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE96"
    },
    "3728": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8835
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3729": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8819,
        8835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3730": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "3733": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8791,
        8835
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3734": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8791,
        8835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3735": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8772,
        8787
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3736": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8772,
        8835
      ],
      "op": "LT",
      "path": "7"
    },
    "3737": {
      "branch": 73,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8772,
        8835
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3738": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF1"
    },
    "3741": {
      "branch": 73,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3742": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3744": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3753": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3756": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3758": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3759": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "ADD",
      "path": "7"
    },
    "3760": {
      "op": "MSTORE"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "op": "PUSH32",
      "value": "0x54686520726566756E6420706572696F6420686173206E6F7420656E64656420"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3803": {
      "op": "DUP3"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "MSTORE"
    },
    "3806": {
      "op": "PUSH3",
      "value": "0x1E595D"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "MSTORE"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3820": {
      "op": "ADD"
    },
    "3821": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "3824": {
      "op": "JUMP"
    },
    "3825": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8764,
        8875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3826": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8920,
        8940
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0x2"
    },
    "3828": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3830": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3831": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3832": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3833": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3835": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3837": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3838": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3840": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3841": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8910
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3842": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3844": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8916
      ],
      "op": "ADD",
      "path": "7"
    },
    "3845": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8916
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3846": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8916
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3848": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8916
      ],
      "op": "AND",
      "path": "7"
    },
    "3849": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3851": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3852": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "GT",
      "path": "7"
    },
    "3853": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3854": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF19"
    },
    "3857": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3858": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF19"
    },
    "3861": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D0"
    },
    "3864": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8893,
        8940
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3865": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3866": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "EQ",
      "path": "7"
    },
    "3867": {
      "branch": 74,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8893,
        8940
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3868": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF60"
    },
    "3871": {
      "branch": 74,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3872": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3874": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3881": {
      "op": "SHL"
    },
    "3882": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3883": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3886": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3888": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3889": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "ADD",
      "path": "7"
    },
    "3890": {
      "op": "MSTORE"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3895": {
      "op": "DUP3"
    },
    "3896": {
      "op": "ADD"
    },
    "3897": {
      "op": "MSTORE"
    },
    "3898": {
      "op": "PUSH22",
      "value": "0x151A19481C9859999B19481A5CC8199A5B9A5CDA1959"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3923": {
      "op": "SHL"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3926": {
      "op": "DUP3"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "MSTORE"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "3935": {
      "op": "JUMP"
    },
    "3936": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8885,
        8967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3937": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9012,
        9039
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x1"
    },
    "3939": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3941": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3942": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3943": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3944": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        8992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3946": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3948": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3949": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3951": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3952": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9002
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3953": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3955": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9008
      ],
      "op": "ADD",
      "path": "7"
    },
    "3956": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9008
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3957": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3959": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9008
      ],
      "op": "AND",
      "path": "7"
    },
    "3960": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3962": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3963": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "GT",
      "path": "7"
    },
    "3964": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3965": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF88"
    },
    "3968": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3969": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF88"
    },
    "3972": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D0"
    },
    "3975": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8985,
        9039
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3976": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3977": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "EQ",
      "path": "7"
    },
    "3978": {
      "branch": 75,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8985,
        9039
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3979": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE0"
    },
    "3982": {
      "branch": 75,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3983": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3985": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3992": {
      "op": "SHL"
    },
    "3993": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3994": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3997": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3999": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4000": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "ADD",
      "path": "7"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4006": {
      "op": "DUP3"
    },
    "4007": {
      "op": "ADD"
    },
    "4008": {
      "op": "MSTORE"
    },
    "4009": {
      "op": "PUSH32",
      "value": "0x54686520726166666C652069732073656C656374696E6720612077696E6E6572"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4044": {
      "op": "DUP3"
    },
    "4045": {
      "op": "ADD"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4051": {
      "op": "SHL"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4054": {
      "op": "DUP3"
    },
    "4055": {
      "op": "ADD"
    },
    "4056": {
      "op": "MSTORE"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "4063": {
      "op": "JUMP"
    },
    "4064": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8977,
        9077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4065": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x0"
    },
    "4067": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4068": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4069": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4070": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9141
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4072": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4074": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4075": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4076": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4077": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4079": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4080": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4081": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9151
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4082": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9157
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4084": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9157
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4085": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9157
      ],
      "op": "ADD",
      "path": "7"
    },
    "4086": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4087": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4090": {
      "op": "NOT"
    },
    "4091": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "AND",
      "path": "7"
    },
    "4092": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9160,
        9179
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4094": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4095": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4096": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "OR",
      "path": "7"
    },
    "4097": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4098": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4099": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9134,
        9179
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4100": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9263,
        9273
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4101": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4102": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4103": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4104": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9351
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4106": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9351
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4107": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9351
      ],
      "op": "ADD",
      "path": "7"
    },
    "4108": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4109": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4110": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4111": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4112": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4113": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9319,
        9363
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4114": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4115": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4116": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4117": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4118": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4119": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4120": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9304
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4121": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9316
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4122": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9316
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4123": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9316
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4124": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9316
      ],
      "op": "ADD",
      "path": "7"
    },
    "4125": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9316
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4126": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9263,
        9273
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4127": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9263,
        9273
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4128": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9363
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1028"
    },
    "4131": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9363
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4132": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9363
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19EE"
    },
    "4135": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        9287,
        9363
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4136": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9287,
        9363
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4137": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4139": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4140": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4142": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4143": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4144": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4145": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4146": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4147": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "GAS",
      "path": "7"
    },
    "4148": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "CALL",
      "path": "7"
    },
    "4149": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4150": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4151": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4152": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4153": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4154": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4155": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4157": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4158": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "EQ",
      "path": "7"
    },
    "4159": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1064"
    },
    "4162": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4163": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4165": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4166": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4167": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4168": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4170": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "NOT",
      "path": "7"
    },
    "4171": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "4173": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4174": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "ADD",
      "path": "7"
    },
    "4175": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "AND",
      "path": "7"
    },
    "4176": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4177": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "ADD",
      "path": "7"
    },
    "4178": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4180": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4181": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4182": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4183": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4184": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4185": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4187": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4189": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4190": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "ADD",
      "path": "7"
    },
    "4191": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "4192": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1069"
    },
    "4195": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4196": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4197": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "4199": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4200": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4201": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4202": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9255,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4203": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9233,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4204": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9233,
        9368
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4205": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9233,
        9368
      ],
      "op": "POP",
      "path": "7"
    },
    "4206": {
      "branch": 76,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9382,
        9392
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4207": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9378,
        9467
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4208": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9378,
        9467
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x89E"
    },
    "4211": {
      "branch": 76,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9378,
        9467
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9455,
        9456
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 45,
      "value": "0x0"
    },
    "4215": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4216": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4217": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4218": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9415
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4220": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4222": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4223": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4224": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4225": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4227": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4228": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4229": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9425
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4230": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9441,
        9451
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4231": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4232": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4233": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9440
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4235": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9440
      ],
      "op": "ADD",
      "path": "7"
    },
    "4236": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4237": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4238": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4239": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4240": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9452
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4241": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9408,
        9456
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4242": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "o",
      "offset": [
        8708,
        9473
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4244": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4246": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4253": {
      "op": "SHL"
    },
    "4254": {
      "op": "SUB"
    },
    "4255": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4256": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4257": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4258": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BD"
    },
    "4261": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4262": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4264": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4273": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4274": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4276": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EE"
    },
    "4280": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4281": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B9"
    },
    "4284": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4285": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4292": {
      "op": "SHL"
    },
    "4293": {
      "op": "SUB"
    },
    "4294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 46
    },
    "4295": {
      "branch": 80,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "4296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1122"
    },
    "4299": {
      "branch": 80,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4303": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "4318": {
      "op": "MSTORE"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "MSTORE"
    },
    "4326": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4361": {
      "op": "DUP3"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "MSTORE"
    },
    "4364": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EE"
    },
    "4385": {
      "op": "JUMP"
    },
    "4386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x112B"
    },
    "4390": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112E"
    },
    "4394": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4396": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "4397": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4398": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4401": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4409": {
      "op": "SHL"
    },
    "4410": {
      "op": "SUB"
    },
    "4411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 48
    },
    "4412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4420": {
      "op": "SHL"
    },
    "4421": {
      "op": "SUB"
    },
    "4422": {
      "op": "NOT"
    },
    "4423": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "4427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x40"
    },
    "4431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4432": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "4436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4472": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4473": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4474": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4477": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4478": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5875,
        7255
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4479": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5971,
        5987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4481": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4482": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4483": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4484": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6012
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4486": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4488": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4489": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4491": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4492": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4493": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5990,
        6024
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4494": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6069,
        6096
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 50,
      "value": "0x1"
    },
    "4496": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4498": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4499": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4500": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4501": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6049
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4503": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4505": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4506": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4508": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4509": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6059
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4510": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4512": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6065
      ],
      "op": "ADD",
      "path": "7"
    },
    "4513": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6065
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4514": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "4516": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6065
      ],
      "op": "AND",
      "path": "7"
    },
    "4517": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4519": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4520": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "GT",
      "path": "7"
    },
    "4521": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4522": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11B5"
    },
    "4525": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4526": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11B5"
    },
    "4529": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16D0"
    },
    "4532": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6042,
        6096
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4533": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4534": {
      "branch": 77,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6042,
        6096
      ],
      "op": "EQ",
      "path": "7"
    },
    "4535": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1219"
    },
    "4538": {
      "branch": 77,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4539": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4541": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4548": {
      "op": "SHL"
    },
    "4549": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4550": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4553": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4555": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4556": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "ADD",
      "path": "7"
    },
    "4557": {
      "op": "MSTORE"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4562": {
      "op": "DUP3"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "PUSH32",
      "value": "0x54686520726166666C65206973206E6F7420696E207468652053656C65637469"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4600": {
      "op": "DUP3"
    },
    "4601": {
      "op": "ADD"
    },
    "4602": {
      "op": "MSTORE"
    },
    "4603": {
      "op": "PUSH14",
      "value": "0x6E6757696E6E6572207374617465"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4623": {
      "op": "DUP3"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "MSTORE"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EE"
    },
    "4632": {
      "op": "JUMP"
    },
    "4633": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6034,
        6147
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4634": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 51,
      "value": "0x0"
    },
    "4636": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4637": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4638": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4639": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4641": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4643": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4644": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4646": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4647": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6232
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4648": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4650": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4651": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6238
      ],
      "op": "ADD",
      "path": "7"
    },
    "4652": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4653": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4656": {
      "op": "NOT"
    },
    "4657": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "AND",
      "path": "7"
    },
    "4658": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6241,
        6261
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4660": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4661": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4662": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "OR",
      "path": "7"
    },
    "4663": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4664": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4665": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6215,
        6261
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4666": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6314,
        6343
      ],
      "op": "ADD",
      "path": "7"
    },
    "4667": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6314,
        6343
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4668": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6300,
        6343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1245"
    },
    "4671": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6300,
        6343
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4672": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6300,
        6311
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4673": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6300,
        6343
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A3D"
    },
    "4676": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6300,
        6343
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4677": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6300,
        6343
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4678": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6417,
        6438
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4680": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4681": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4682": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4683": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4685": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4687": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4688": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4690": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4691": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6481
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4692": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6494
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4694": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6494
      ],
      "op": "ADD",
      "path": "7"
    },
    "4695": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6464,
        6501
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4696": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6271,
        6343
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4697": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6271,
        6343
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4698": {
      "op": "POP"
    },
    "4699": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6417,
        6438
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4700": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6417,
        6438
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4701": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4702": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6535,
        6536
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4703": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6531,
        6532
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4704": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6531,
        6536
      ],
      "op": "LT",
      "path": "7"
    },
    "4705": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4706": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x135A"
    },
    "4709": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4710": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6557,
        6572
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4712": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4713": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4714": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4715": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4717": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4719": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4720": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4722": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4723": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6592
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4724": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6638
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4726": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6638
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4727": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6638
      ],
      "op": "ADD",
      "path": "7"
    },
    "4728": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4729": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4730": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4732": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6607
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4733": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6607
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4734": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6607
      ],
      "op": "ADD",
      "path": "7"
    },
    "4735": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6607
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4736": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6557,
        6572
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4737": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6557,
        6572
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4738": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6638
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4739": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6639,
        6640
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4740": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6639,
        6640
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4741": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4742": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "LT",
      "path": "7"
    },
    "4743": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1292"
    },
    "4746": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4747": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1292"
    },
    "4750": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5F"
    },
    "4753": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6608,
        6641
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4754": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4755": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4757": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4758": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4759": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4760": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4762": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4763": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4764": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4765": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4766": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4767": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "ADD",
      "path": "7"
    },
    "4768": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4775": {
      "op": "SHL"
    },
    "4776": {
      "op": "SUB"
    },
    "4777": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6608,
        6641
      ],
      "op": "AND",
      "path": "7"
    },
    "4778": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4779": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4780": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4781": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "ADD",
      "path": "7"
    },
    "4782": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4783": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4784": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4785": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4786": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4788": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "ADD",
      "path": "7"
    },
    "4789": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4790": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4791": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4792": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6575,
        6642
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4795": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4796": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6695
      ],
      "op": "GT",
      "path": "7"
    },
    "4797": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6695
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4798": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6695
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4799": {
      "branch": 78,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4800": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12D1"
    },
    "4803": {
      "branch": 78,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6743
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6720,
        6743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12CE"
    },
    "4808": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6736,
        6743
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4809": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6720,
        6733
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4810": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6720,
        6743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "4813": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6720,
        6743
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4814": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6720,
        6743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4815": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6699,
        6717
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4816": {
      "branch": 79,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6699,
        6743
      ],
      "op": "LT",
      "path": "7"
    },
    "4817": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6660,
        6743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4818": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6656,
        6906
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4819": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6656,
        6906
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x133A"
    },
    "4822": {
      "branch": 79,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6656,
        6906
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4823": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 52,
      "value": "0x0"
    },
    "4825": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4826": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4827": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4828": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6841
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4830": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4832": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4833": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4835": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4836": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6851
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4837": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4839": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6864
      ],
      "op": "ADD",
      "path": "7"
    },
    "4840": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4841": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4842": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6865,
        6866
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4843": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6865,
        6866
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4844": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4845": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "LT",
      "path": "7"
    },
    "4846": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F9"
    },
    "4849": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4850": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F9"
    },
    "4853": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5F"
    },
    "4856": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6834,
        6867
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4857": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4858": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4860": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4861": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4862": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4863": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4865": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4866": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4867": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4868": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4869": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4870": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "ADD",
      "path": "7"
    },
    "4871": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4872": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4873": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4874": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4875": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6806
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4877": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4878": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4879": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4880": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4882": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4883": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4884": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6816
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4885": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6823
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "4887": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6823
      ],
      "op": "ADD",
      "path": "7"
    },
    "4888": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4889": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4896": {
      "op": "SHL"
    },
    "4897": {
      "op": "SUB"
    },
    "4898": {
      "op": "NOT"
    },
    "4899": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "AND",
      "path": "7"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4906": {
      "op": "SHL"
    },
    "4907": {
      "op": "SUB"
    },
    "4908": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4909": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4910": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6834,
        6867
      ],
      "op": "AND",
      "path": "7"
    },
    "4911": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4912": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4913": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4914": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "OR",
      "path": "7"
    },
    "4915": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4916": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6799,
        6868
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6886,
        6891
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 53,
      "value": "0x135A"
    },
    "4921": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6886,
        6891
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4922": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6656,
        6906
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4923": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6943
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 54,
      "value": "0x1344"
    },
    "4926": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6936,
        6943
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4927": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6943
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4928": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6943
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A1"
    },
    "4931": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6919,
        6943
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4932": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6943
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4933": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6943
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4934": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6943
      ],
      "op": "POP",
      "path": "7"
    },
    "4935": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6543,
        6954
      ],
      "op": "POP",
      "path": "7"
    },
    "4936": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 55
    },
    "4937": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4938": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1352"
    },
    "4941": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4942": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A75"
    },
    "4945": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6538,
        6541
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4946": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4947": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4948": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "POP",
      "path": "7"
    },
    "4949": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6538,
        6541
      ],
      "op": "POP",
      "path": "7"
    },
    "4950": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x125D"
    },
    "4953": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4954": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4955": {
      "op": "POP"
    },
    "4956": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 56,
      "value": "0x0"
    },
    "4958": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4959": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4960": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4961": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7063
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4963": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4965": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4966": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4968": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4969": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7073
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4970": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4972": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4973": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "ADD",
      "path": "7"
    },
    "4974": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4975": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7131,
        7160
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4977": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7131,
        7160
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4978": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7131,
        7160
      ],
      "op": "ADD",
      "path": "7"
    },
    "4979": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7131,
        7160
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4980": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4982": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7128
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4983": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7128
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4984": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7128
      ],
      "op": "ADD",
      "path": "7"
    },
    "4985": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7128
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4992": {
      "op": "SHL"
    },
    "4993": {
      "op": "SUB"
    },
    "4994": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4995": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4996": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "AND",
      "path": "7"
    },
    "4997": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7056,
        7085
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4998": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x138E"
    },
    "5001": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7160
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5002": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19EE"
    },
    "5005": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        7099,
        7160
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5006": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7099,
        7160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5007": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5009": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5010": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5012": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5013": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5014": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5015": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP6",
      "path": "7"
    },
    "5016": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP8",
      "path": "7"
    },
    "5017": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "GAS",
      "path": "7"
    },
    "5018": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "CALL",
      "path": "7"
    },
    "5019": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5020": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "POP",
      "path": "7"
    },
    "5021": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "POP",
      "path": "7"
    },
    "5022": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "POP",
      "path": "7"
    },
    "5023": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5024": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5025": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5027": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5028": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "EQ",
      "path": "7"
    },
    "5029": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13CA"
    },
    "5032": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5033": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5035": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5036": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5037": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "POP",
      "path": "7"
    },
    "5038": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5040": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "NOT",
      "path": "7"
    },
    "5041": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "5043": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5044": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "ADD",
      "path": "7"
    },
    "5045": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "AND",
      "path": "7"
    },
    "5046": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5047": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "ADD",
      "path": "7"
    },
    "5048": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5050": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5051": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5052": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5053": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5054": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "5055": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5057": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5059": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5060": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "ADD",
      "path": "7"
    },
    "5061": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "5062": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13CF"
    },
    "5065": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5066": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5067": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "5069": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5070": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "POP",
      "path": "7"
    },
    "5071": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7048,
        7165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5072": {
      "op": "POP"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5076": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "DUP6",
      "path": "7"
    },
    "5077": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5078": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5079": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7023
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "5081": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5083": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5084": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5085": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5086": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5088": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5089": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5090": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5091": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7033
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5092": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "5094": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7042
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5095": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7016,
        7042
      ],
      "op": "ADD",
      "path": "7"
    },
    "5096": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5097": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5100": {
      "op": "NOT"
    },
    "5101": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "AND",
      "path": "7"
    },
    "5102": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5103": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5104": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5105": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5106": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5107": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5108": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "OR",
      "path": "7"
    },
    "5109": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5110": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5111": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7015,
        7165
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5112": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 57,
      "value": "0x5"
    },
    "5114": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5115": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5116": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "ADD",
      "path": "7"
    },
    "5117": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5118": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5119": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5120": {
      "op": "DUP8"
    },
    "5121": {
      "op": "DUP2"
    },
    "5122": {
      "op": "MSTORE"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5129": {
      "op": "SHL"
    },
    "5130": {
      "op": "SUB"
    },
    "5131": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5132": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5133": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7203,
        7227
      ],
      "op": "AND",
      "path": "7"
    },
    "5134": {
      "op": "SWAP3"
    },
    "5135": {
      "op": "DUP2"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "op": "SWAP3"
    },
    "5138": {
      "op": "SWAP1"
    },
    "5139": {
      "op": "SWAP3"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "DUP2"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "DUP5"
    },
    "5144": {
      "op": "SWAP1"
    },
    "5145": {
      "op": "MSTORE"
    },
    "5146": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xB14375695E696EE7A5001ECE25E2FCFB144242680D208452819016209AE26F67"
    },
    "5179": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5182": {
      "op": "ADD"
    },
    "5183": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5185": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5186": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5187": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5188": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "SUB",
      "path": "7"
    },
    "5189": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5190": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7180,
        7248
      ],
      "op": "LOG1",
      "path": "7"
    },
    "5191": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5961,
        7255
      ],
      "op": "POP",
      "path": "7"
    },
    "5192": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5961,
        7255
      ],
      "op": "POP",
      "path": "7"
    },
    "5193": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5961,
        7255
      ],
      "op": "POP",
      "path": "7"
    },
    "5194": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5961,
        7255
      ],
      "op": "POP",
      "path": "7"
    },
    "5195": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5875,
        7255
      ],
      "op": "POP",
      "path": "7"
    },
    "5196": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5875,
        7255
      ],
      "op": "POP",
      "path": "7"
    },
    "5197": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "o",
      "offset": [
        5875,
        7255
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7753,
        8808
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5199": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7857,
        7874
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5201": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7893
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 58,
      "value": "0x0"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5240": {
      "op": "SHL"
    },
    "5241": {
      "op": "SUB"
    },
    "5242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7909
      ],
      "op": "AND",
      "path": "4"
    },
    "5243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7909
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4000AEA0"
    },
    "5248": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7910,
        7924
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "5281": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        7930
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5282": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7943,
        7951
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5283": {
      "offset": [
        6610,
        6611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5285": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5287": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5288": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5290": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "ADD",
      "path": "4"
    },
    "5291": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14BE"
    },
    "5294": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5295": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5296": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5297": {
      "op": "SWAP2"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "MSTORE"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5302": {
      "op": "DUP3"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "MSTORE"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5307": {
      "op": "ADD"
    },
    "5308": {
      "op": "SWAP1"
    },
    "5309": {
      "op": "JUMP"
    },
    "5310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5311": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5314": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5316": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5317": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5318": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SUB",
      "path": "4"
    },
    "5319": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SUB",
      "path": "4"
    },
    "5320": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5321": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5322": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5323": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5325": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5326": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5329": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5330": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "5335": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "AND",
      "path": "4"
    },
    "5336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "5338": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SHL",
      "path": "4"
    },
    "5339": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5340": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5341": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5343": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5344": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14EB"
    },
    "5347": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5348": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5349": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5350": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5351": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A90"
    },
    "5354": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5355": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5356": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5358": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5360": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5361": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5362": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5363": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SUB",
      "path": "4"
    },
    "5364": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5365": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5367": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5368": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "GAS",
      "path": "4"
    },
    "5369": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "CALL",
      "path": "4"
    },
    "5370": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5371": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5372": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5373": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x150A"
    },
    "5376": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5377": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5378": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5380": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5381": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5382": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5383": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5385": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5386": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5387": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5388": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5389": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5391": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5393": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5394": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5395": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5397": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "NOT",
      "path": "4"
    },
    "5398": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5400": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5401": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5402": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "AND",
      "path": "4"
    },
    "5403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5404": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5405": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5406": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5408": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5409": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5410": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5411": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5412": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5413": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x152E"
    },
    "5416": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5417": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5418": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AC0"
    },
    "5421": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5422": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8207,
        8222
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5427": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5429": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5431": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5433": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5436": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5438": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5440": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5441": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5442": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 59
    },
    "5443": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5444": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5445": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5446": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "5"
    },
    "5447": {
      "op": "DUP10"
    },
    "5448": {
      "op": "SWAP1"
    },
    "5449": {
      "op": "MSTORE"
    },
    "5450": {
      "op": "DUP1"
    },
    "5451": {
      "op": "DUP4"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "op": "DUP7"
    },
    "5454": {
      "op": "SWAP1"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8284,
        8288
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5459": {
      "op": "DUP3"
    },
    "5460": {
      "op": "ADD"
    },
    "5461": {
      "op": "MSTORE"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5464": {
      "op": "DUP1"
    },
    "5465": {
      "op": "DUP3"
    },
    "5466": {
      "op": "ADD"
    },
    "5467": {
      "op": "DUP4"
    },
    "5468": {
      "op": "SWAP1"
    },
    "5469": {
      "op": "MSTORE"
    },
    "5470": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5471": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5472": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5473": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5474": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "5"
    },
    "5475": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5476": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5477": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "5"
    },
    "5478": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5479": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5482": {
      "op": "SWAP1"
    },
    "5483": {
      "op": "SWAP2"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5486": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5487": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5488": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5489": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5490": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5491": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5492": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "5"
    },
    "5493": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5494": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5495": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5496": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5497": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 60
    },
    "5498": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5499": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5500": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5501": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5502": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5503": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5504": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5505": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1589"
    },
    "5508": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5509": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19A1"
    },
    "5512": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8738,
        8758
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5513": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5514": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5516": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5517": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5518": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5519": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5521": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5523": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5524": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5526": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5527": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5528": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8758
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5529": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8771,
        8803
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 61,
      "value": "0x15C9"
    },
    "5532": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8726,
        8734
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5533": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8795,
        8802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5534": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 62,
      "value": "0x40"
    },
    "5536": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5537": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5538": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5540": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5541": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5542": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "5"
    },
    "5543": {
      "op": "SWAP5"
    },
    "5544": {
      "op": "SWAP1"
    },
    "5545": {
      "op": "SWAP5"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "DUP1"
    },
    "5548": {
      "op": "DUP3"
    },
    "5549": {
      "op": "ADD"
    },
    "5550": {
      "op": "SWAP3"
    },
    "5551": {
      "op": "SWAP1"
    },
    "5552": {
      "op": "SWAP3"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5555": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5556": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5557": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5558": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "5"
    },
    "5559": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5560": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "5"
    },
    "5561": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5562": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5565": {
      "op": "SWAP1"
    },
    "5566": {
      "op": "SWAP3"
    },
    "5567": {
      "op": "ADD"
    },
    "5568": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5569": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5570": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5571": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5572": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5573": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "5"
    },
    "5574": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5575": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5576": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5577": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8771,
        8803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5578": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8764,
        8803
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5579": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7753,
        8808
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "POP"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "op": "POP"
    },
    "5584": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7753,
        8808
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "DUP3"
    },
    "5587": {
      "op": "DUP1"
    },
    "5588": {
      "op": "SLOAD"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15DD"
    },
    "5592": {
      "op": "SWAP1"
    },
    "5593": {
      "op": "PUSH2",
      "value": "0x1950"
    },
    "5596": {
      "jump": "i",
      "op": "JUMP"
    },
    "5597": {
      "op": "JUMPDEST"
    },
    "5598": {
      "op": "SWAP1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "MSTORE"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5606": {
      "op": "KECCAK256"
    },
    "5607": {
      "op": "SWAP1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5610": {
      "op": "ADD"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5613": {
      "op": "SWAP1"
    },
    "5614": {
      "op": "DIV"
    },
    "5615": {
      "op": "DUP2"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "SWAP3"
    },
    "5618": {
      "op": "DUP3"
    },
    "5619": {
      "op": "PUSH2",
      "value": "0x15FF"
    },
    "5622": {
      "op": "JUMPI"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5625": {
      "op": "DUP6"
    },
    "5626": {
      "op": "SSTORE"
    },
    "5627": {
      "op": "PUSH2",
      "value": "0x1645"
    },
    "5630": {
      "op": "JUMP"
    },
    "5631": {
      "op": "JUMPDEST"
    },
    "5632": {
      "op": "DUP3"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5635": {
      "op": "LT"
    },
    "5636": {
      "op": "PUSH2",
      "value": "0x1618"
    },
    "5639": {
      "op": "JUMPI"
    },
    "5640": {
      "op": "DUP1"
    },
    "5641": {
      "op": "MLOAD"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5644": {
      "op": "NOT"
    },
    "5645": {
      "op": "AND"
    },
    "5646": {
      "op": "DUP4"
    },
    "5647": {
      "op": "DUP1"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "op": "OR"
    },
    "5650": {
      "op": "DUP6"
    },
    "5651": {
      "op": "SSTORE"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x1645"
    },
    "5655": {
      "op": "JUMP"
    },
    "5656": {
      "op": "JUMPDEST"
    },
    "5657": {
      "op": "DUP3"
    },
    "5658": {
      "op": "DUP1"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5662": {
      "op": "ADD"
    },
    "5663": {
      "op": "DUP6"
    },
    "5664": {
      "op": "SSTORE"
    },
    "5665": {
      "op": "DUP3"
    },
    "5666": {
      "op": "ISZERO"
    },
    "5667": {
      "op": "PUSH2",
      "value": "0x1645"
    },
    "5670": {
      "op": "JUMPI"
    },
    "5671": {
      "op": "SWAP2"
    },
    "5672": {
      "op": "DUP3"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "JUMPDEST"
    },
    "5675": {
      "op": "DUP3"
    },
    "5676": {
      "op": "DUP2"
    },
    "5677": {
      "op": "GT"
    },
    "5678": {
      "op": "ISZERO"
    },
    "5679": {
      "op": "PUSH2",
      "value": "0x1645"
    },
    "5682": {
      "op": "JUMPI"
    },
    "5683": {
      "op": "DUP3"
    },
    "5684": {
      "op": "MLOAD"
    },
    "5685": {
      "op": "DUP3"
    },
    "5686": {
      "op": "SSTORE"
    },
    "5687": {
      "op": "SWAP2"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5690": {
      "op": "ADD"
    },
    "5691": {
      "op": "SWAP2"
    },
    "5692": {
      "op": "SWAP1"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5695": {
      "op": "ADD"
    },
    "5696": {
      "op": "SWAP1"
    },
    "5697": {
      "op": "PUSH2",
      "value": "0x162A"
    },
    "5700": {
      "op": "JUMP"
    },
    "5701": {
      "op": "JUMPDEST"
    },
    "5702": {
      "op": "POP"
    },
    "5703": {
      "op": "PUSH2",
      "value": "0x1651"
    },
    "5706": {
      "op": "SWAP3"
    },
    "5707": {
      "op": "SWAP2"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "op": "PUSH2",
      "value": "0x1655"
    },
    "5712": {
      "jump": "i",
      "op": "JUMP"
    },
    "5713": {
      "op": "JUMPDEST"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "op": "SWAP1"
    },
    "5716": {
      "jump": "o",
      "op": "JUMP"
    },
    "5717": {
      "op": "JUMPDEST"
    },
    "5718": {
      "op": "JUMPDEST"
    },
    "5719": {
      "op": "DUP1"
    },
    "5720": {
      "op": "DUP3"
    },
    "5721": {
      "op": "GT"
    },
    "5722": {
      "op": "ISZERO"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x1651"
    },
    "5726": {
      "op": "JUMPI"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5729": {
      "op": "DUP2"
    },
    "5730": {
      "op": "SSTORE"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5733": {
      "op": "ADD"
    },
    "5734": {
      "op": "PUSH2",
      "value": "0x1656"
    },
    "5737": {
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "DUP5"
    },
    "5745": {
      "op": "SUB"
    },
    "5746": {
      "op": "SLT"
    },
    "5747": {
      "op": "ISZERO"
    },
    "5748": {
      "op": "PUSH2",
      "value": "0x167C"
    },
    "5751": {
      "op": "JUMPI"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5754": {
      "op": "DUP1"
    },
    "5755": {
      "op": "REVERT"
    },
    "5756": {
      "op": "JUMPDEST"
    },
    "5757": {
      "op": "POP"
    },
    "5758": {
      "op": "CALLDATALOAD"
    },
    "5759": {
      "op": "SWAP2"
    },
    "5760": {
      "op": "SWAP1"
    },
    "5761": {
      "op": "POP"
    },
    "5762": {
      "jump": "o",
      "op": "JUMP"
    },
    "5763": {
      "op": "JUMPDEST"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5766": {
      "op": "DUP2"
    },
    "5767": {
      "op": "MLOAD"
    },
    "5768": {
      "op": "DUP1"
    },
    "5769": {
      "op": "DUP5"
    },
    "5770": {
      "op": "MSTORE"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5773": {
      "op": "JUMPDEST"
    },
    "5774": {
      "op": "DUP2"
    },
    "5775": {
      "op": "DUP2"
    },
    "5776": {
      "op": "LT"
    },
    "5777": {
      "op": "ISZERO"
    },
    "5778": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "5781": {
      "op": "JUMPI"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5784": {
      "op": "DUP2"
    },
    "5785": {
      "op": "DUP6"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "DUP2"
    },
    "5788": {
      "op": "ADD"
    },
    "5789": {
      "op": "MLOAD"
    },
    "5790": {
      "op": "DUP7"
    },
    "5791": {
      "op": "DUP4"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "op": "DUP3"
    },
    "5794": {
      "op": "ADD"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "PUSH2",
      "value": "0x168D"
    },
    "5800": {
      "op": "JUMP"
    },
    "5801": {
      "op": "JUMPDEST"
    },
    "5802": {
      "op": "DUP2"
    },
    "5803": {
      "op": "DUP2"
    },
    "5804": {
      "op": "GT"
    },
    "5805": {
      "op": "ISZERO"
    },
    "5806": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "5809": {
      "op": "JUMPI"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5814": {
      "op": "DUP4"
    },
    "5815": {
      "op": "DUP8"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "POP"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5823": {
      "op": "ADD"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5826": {
      "op": "NOT"
    },
    "5827": {
      "op": "AND"
    },
    "5828": {
      "op": "SWAP3"
    },
    "5829": {
      "op": "SWAP1"
    },
    "5830": {
      "op": "SWAP3"
    },
    "5831": {
      "op": "ADD"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5834": {
      "op": "ADD"
    },
    "5835": {
      "op": "SWAP3"
    },
    "5836": {
      "op": "SWAP2"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "op": "POP"
    },
    "5839": {
      "jump": "o",
      "op": "JUMP"
    },
    "5840": {
      "op": "JUMPDEST"
    },
    "5841": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5848": {
      "op": "SHL"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5851": {
      "op": "MSTORE"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5856": {
      "op": "MSTORE"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5861": {
      "op": "REVERT"
    },
    "5862": {
      "op": "JUMPDEST"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5865": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5868": {
      "op": "DUP13"
    },
    "5869": {
      "op": "DUP4"
    },
    "5870": {
      "op": "MSTORE"
    },
    "5871": {
      "op": "DUP1"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5874": {
      "op": "DUP5"
    },
    "5875": {
      "op": "ADD"
    },
    "5876": {
      "op": "MSTORE"
    },
    "5877": {
      "op": "PUSH2",
      "value": "0x1700"
    },
    "5880": {
      "op": "DUP2"
    },
    "5881": {
      "op": "DUP5"
    },
    "5882": {
      "op": "ADD"
    },
    "5883": {
      "op": "DUP14"
    },
    "5884": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "5887": {
      "jump": "i",
      "op": "JUMP"
    },
    "5888": {
      "op": "JUMPDEST"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5891": {
      "op": "DUP5"
    },
    "5892": {
      "op": "ADD"
    },
    "5893": {
      "op": "DUP13"
    },
    "5894": {
      "op": "SWAP1"
    },
    "5895": {
      "op": "MSTORE"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5898": {
      "op": "DUP5"
    },
    "5899": {
      "op": "ADD"
    },
    "5900": {
      "op": "DUP12"
    },
    "5901": {
      "op": "SWAP1"
    },
    "5902": {
      "op": "MSTORE"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5909": {
      "op": "SHL"
    },
    "5910": {
      "op": "SUB"
    },
    "5911": {
      "op": "DUP11"
    },
    "5912": {
      "op": "DUP2"
    },
    "5913": {
      "op": "AND"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5916": {
      "op": "DUP7"
    },
    "5917": {
      "op": "ADD"
    },
    "5918": {
      "op": "MSTORE"
    },
    "5919": {
      "op": "DUP10"
    },
    "5920": {
      "op": "AND"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5923": {
      "op": "DUP6"
    },
    "5924": {
      "op": "ADD"
    },
    "5925": {
      "op": "MSTORE"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5928": {
      "op": "DUP5"
    },
    "5929": {
      "op": "ADD"
    },
    "5930": {
      "op": "DUP9"
    },
    "5931": {
      "op": "SWAP1"
    },
    "5932": {
      "op": "MSTORE"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5935": {
      "op": "DUP5"
    },
    "5936": {
      "op": "ADD"
    },
    "5937": {
      "op": "DUP8"
    },
    "5938": {
      "op": "SWAP1"
    },
    "5939": {
      "op": "MSTORE"
    },
    "5940": {
      "op": "SWAP2"
    },
    "5941": {
      "op": "POP"
    },
    "5942": {
      "op": "POP"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5945": {
      "op": "DUP5"
    },
    "5946": {
      "op": "LT"
    },
    "5947": {
      "op": "PUSH2",
      "value": "0x1754"
    },
    "5950": {
      "op": "JUMPI"
    },
    "5951": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5958": {
      "op": "SHL"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5966": {
      "op": "MSTORE"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5971": {
      "op": "REVERT"
    },
    "5972": {
      "op": "JUMPDEST"
    },
    "5973": {
      "op": "DUP4"
    },
    "5974": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5977": {
      "op": "DUP4"
    },
    "5978": {
      "op": "ADD"
    },
    "5979": {
      "op": "MSTORE"
    },
    "5980": {
      "op": "DUP3"
    },
    "5981": {
      "op": "ISZERO"
    },
    "5982": {
      "op": "ISZERO"
    },
    "5983": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5986": {
      "op": "DUP4"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "MSTORE"
    },
    "5989": {
      "op": "SWAP12"
    },
    "5990": {
      "op": "SWAP11"
    },
    "5991": {
      "op": "POP"
    },
    "5992": {
      "op": "POP"
    },
    "5993": {
      "op": "POP"
    },
    "5994": {
      "op": "POP"
    },
    "5995": {
      "op": "POP"
    },
    "5996": {
      "op": "POP"
    },
    "5997": {
      "op": "POP"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "op": "POP"
    },
    "6001": {
      "op": "POP"
    },
    "6002": {
      "jump": "o",
      "op": "JUMP"
    },
    "6003": {
      "op": "JUMPDEST"
    },
    "6004": {
      "op": "DUP1"
    },
    "6005": {
      "op": "CALLDATALOAD"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6012": {
      "op": "SHL"
    },
    "6013": {
      "op": "SUB"
    },
    "6014": {
      "op": "DUP2"
    },
    "6015": {
      "op": "AND"
    },
    "6016": {
      "op": "DUP2"
    },
    "6017": {
      "op": "EQ"
    },
    "6018": {
      "op": "PUSH2",
      "value": "0x178A"
    },
    "6021": {
      "op": "JUMPI"
    },
    "6022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6024": {
      "op": "DUP1"
    },
    "6025": {
      "op": "REVERT"
    },
    "6026": {
      "op": "JUMPDEST"
    },
    "6027": {
      "op": "SWAP2"
    },
    "6028": {
      "op": "SWAP1"
    },
    "6029": {
      "op": "POP"
    },
    "6030": {
      "jump": "o",
      "op": "JUMP"
    },
    "6031": {
      "op": "JUMPDEST"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6034": {
      "op": "DUP1"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6037": {
      "op": "DUP4"
    },
    "6038": {
      "op": "DUP6"
    },
    "6039": {
      "op": "SUB"
    },
    "6040": {
      "op": "SLT"
    },
    "6041": {
      "op": "ISZERO"
    },
    "6042": {
      "op": "PUSH2",
      "value": "0x17A2"
    },
    "6045": {
      "op": "JUMPI"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6048": {
      "op": "DUP1"
    },
    "6049": {
      "op": "REVERT"
    },
    "6050": {
      "op": "JUMPDEST"
    },
    "6051": {
      "op": "DUP3"
    },
    "6052": {
      "op": "CALLDATALOAD"
    },
    "6053": {
      "op": "SWAP2"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "op": "PUSH2",
      "value": "0x17B2"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6060": {
      "op": "DUP5"
    },
    "6061": {
      "op": "ADD"
    },
    "6062": {
      "op": "PUSH2",
      "value": "0x1773"
    },
    "6065": {
      "jump": "i",
      "op": "JUMP"
    },
    "6066": {
      "op": "JUMPDEST"
    },
    "6067": {
      "op": "SWAP1"
    },
    "6068": {
      "op": "POP"
    },
    "6069": {
      "op": "SWAP3"
    },
    "6070": {
      "op": "POP"
    },
    "6071": {
      "op": "SWAP3"
    },
    "6072": {
      "op": "SWAP1"
    },
    "6073": {
      "op": "POP"
    },
    "6074": {
      "jump": "o",
      "op": "JUMP"
    },
    "6075": {
      "op": "JUMPDEST"
    },
    "6076": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6083": {
      "op": "SHL"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "MSTORE"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6091": {
      "op": "MSTORE"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6096": {
      "op": "REVERT"
    },
    "6097": {
      "op": "JUMPDEST"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6100": {
      "op": "DUP1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6105": {
      "op": "DUP5"
    },
    "6106": {
      "op": "DUP7"
    },
    "6107": {
      "op": "SUB"
    },
    "6108": {
      "op": "SLT"
    },
    "6109": {
      "op": "ISZERO"
    },
    "6110": {
      "op": "PUSH2",
      "value": "0x17E6"
    },
    "6113": {
      "op": "JUMPI"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6116": {
      "op": "DUP1"
    },
    "6117": {
      "op": "REVERT"
    },
    "6118": {
      "op": "JUMPDEST"
    },
    "6119": {
      "op": "DUP4"
    },
    "6120": {
      "op": "CALLDATALOAD"
    },
    "6121": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6130": {
      "op": "DUP1"
    },
    "6131": {
      "op": "DUP3"
    },
    "6132": {
      "op": "GT"
    },
    "6133": {
      "op": "ISZERO"
    },
    "6134": {
      "op": "PUSH2",
      "value": "0x17FE"
    },
    "6137": {
      "op": "JUMPI"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6140": {
      "op": "DUP1"
    },
    "6141": {
      "op": "REVERT"
    },
    "6142": {
      "op": "JUMPDEST"
    },
    "6143": {
      "op": "DUP2"
    },
    "6144": {
      "op": "DUP7"
    },
    "6145": {
      "op": "ADD"
    },
    "6146": {
      "op": "SWAP2"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "DUP7"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6151": {
      "op": "DUP4"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "SLT"
    },
    "6154": {
      "op": "PUSH2",
      "value": "0x1812"
    },
    "6157": {
      "op": "JUMPI"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6160": {
      "op": "DUP1"
    },
    "6161": {
      "op": "REVERT"
    },
    "6162": {
      "op": "JUMPDEST"
    },
    "6163": {
      "op": "DUP2"
    },
    "6164": {
      "op": "CALLDATALOAD"
    },
    "6165": {
      "op": "DUP2"
    },
    "6166": {
      "op": "DUP2"
    },
    "6167": {
      "op": "GT"
    },
    "6168": {
      "op": "ISZERO"
    },
    "6169": {
      "op": "PUSH2",
      "value": "0x1824"
    },
    "6172": {
      "op": "JUMPI"
    },
    "6173": {
      "op": "PUSH2",
      "value": "0x1824"
    },
    "6176": {
      "op": "PUSH2",
      "value": "0x17BB"
    },
    "6179": {
      "jump": "i",
      "op": "JUMP"
    },
    "6180": {
      "op": "JUMPDEST"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6183": {
      "op": "MLOAD"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6186": {
      "op": "DUP3"
    },
    "6187": {
      "op": "ADD"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6190": {
      "op": "NOT"
    },
    "6191": {
      "op": "SWAP1"
    },
    "6192": {
      "op": "DUP2"
    },
    "6193": {
      "op": "AND"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6196": {
      "op": "ADD"
    },
    "6197": {
      "op": "AND"
    },
    "6198": {
      "op": "DUP2"
    },
    "6199": {
      "op": "ADD"
    },
    "6200": {
      "op": "SWAP1"
    },
    "6201": {
      "op": "DUP4"
    },
    "6202": {
      "op": "DUP3"
    },
    "6203": {
      "op": "GT"
    },
    "6204": {
      "op": "DUP2"
    },
    "6205": {
      "op": "DUP4"
    },
    "6206": {
      "op": "LT"
    },
    "6207": {
      "op": "OR"
    },
    "6208": {
      "op": "ISZERO"
    },
    "6209": {
      "op": "PUSH2",
      "value": "0x184C"
    },
    "6212": {
      "op": "JUMPI"
    },
    "6213": {
      "op": "PUSH2",
      "value": "0x184C"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x17BB"
    },
    "6219": {
      "jump": "i",
      "op": "JUMP"
    },
    "6220": {
      "op": "JUMPDEST"
    },
    "6221": {
      "op": "DUP2"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6224": {
      "op": "MSTORE"
    },
    "6225": {
      "op": "DUP3"
    },
    "6226": {
      "op": "DUP2"
    },
    "6227": {
      "op": "MSTORE"
    },
    "6228": {
      "op": "DUP10"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6231": {
      "op": "DUP5"
    },
    "6232": {
      "op": "DUP8"
    },
    "6233": {
      "op": "ADD"
    },
    "6234": {
      "op": "ADD"
    },
    "6235": {
      "op": "GT"
    },
    "6236": {
      "op": "ISZERO"
    },
    "6237": {
      "op": "PUSH2",
      "value": "0x1865"
    },
    "6240": {
      "op": "JUMPI"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6243": {
      "op": "DUP1"
    },
    "6244": {
      "op": "REVERT"
    },
    "6245": {
      "op": "JUMPDEST"
    },
    "6246": {
      "op": "DUP3"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6249": {
      "op": "DUP7"
    },
    "6250": {
      "op": "ADD"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6253": {
      "op": "DUP4"
    },
    "6254": {
      "op": "ADD"
    },
    "6255": {
      "op": "CALLDATACOPY"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6260": {
      "op": "DUP5"
    },
    "6261": {
      "op": "DUP4"
    },
    "6262": {
      "op": "ADD"
    },
    "6263": {
      "op": "ADD"
    },
    "6264": {
      "op": "MSTORE"
    },
    "6265": {
      "op": "DUP1"
    },
    "6266": {
      "op": "SWAP8"
    },
    "6267": {
      "op": "POP"
    },
    "6268": {
      "op": "POP"
    },
    "6269": {
      "op": "POP"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "POP"
    },
    "6272": {
      "op": "POP"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6275": {
      "op": "DUP5"
    },
    "6276": {
      "op": "ADD"
    },
    "6277": {
      "op": "CALLDATALOAD"
    },
    "6278": {
      "op": "SWAP2"
    },
    "6279": {
      "op": "POP"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6282": {
      "op": "DUP5"
    },
    "6283": {
      "op": "ADD"
    },
    "6284": {
      "op": "CALLDATALOAD"
    },
    "6285": {
      "op": "SWAP1"
    },
    "6286": {
      "op": "POP"
    },
    "6287": {
      "op": "SWAP3"
    },
    "6288": {
      "op": "POP"
    },
    "6289": {
      "op": "SWAP3"
    },
    "6290": {
      "op": "POP"
    },
    "6291": {
      "op": "SWAP3"
    },
    "6292": {
      "jump": "o",
      "op": "JUMP"
    },
    "6293": {
      "op": "JUMPDEST"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6296": {
      "op": "DUP2"
    },
    "6297": {
      "op": "MSTORE"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6300": {
      "op": "PUSH2",
      "value": "0x18A8"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6305": {
      "op": "DUP4"
    },
    "6306": {
      "op": "ADD"
    },
    "6307": {
      "op": "DUP9"
    },
    "6308": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "6311": {
      "jump": "i",
      "op": "JUMP"
    },
    "6312": {
      "op": "JUMPDEST"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6319": {
      "op": "SHL"
    },
    "6320": {
      "op": "SUB"
    },
    "6321": {
      "op": "SWAP7"
    },
    "6322": {
      "op": "DUP8"
    },
    "6323": {
      "op": "AND"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6326": {
      "op": "DUP5"
    },
    "6327": {
      "op": "ADD"
    },
    "6328": {
      "op": "MSTORE"
    },
    "6329": {
      "op": "SWAP5"
    },
    "6330": {
      "op": "SWAP1"
    },
    "6331": {
      "op": "SWAP6"
    },
    "6332": {
      "op": "AND"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6335": {
      "op": "DUP3"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "MSTORE"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6340": {
      "op": "DUP2"
    },
    "6341": {
      "op": "ADD"
    },
    "6342": {
      "op": "SWAP3"
    },
    "6343": {
      "op": "SWAP1"
    },
    "6344": {
      "op": "SWAP3"
    },
    "6345": {
      "op": "MSTORE"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6348": {
      "op": "SWAP1"
    },
    "6349": {
      "op": "SWAP2"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "MSTORE"
    },
    "6352": {
      "op": "SWAP3"
    },
    "6353": {
      "op": "SWAP2"
    },
    "6354": {
      "op": "POP"
    },
    "6355": {
      "op": "POP"
    },
    "6356": {
      "jump": "o",
      "op": "JUMP"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6360": {
      "op": "DUP2"
    },
    "6361": {
      "op": "MSTORE"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6364": {
      "op": "PUSH2",
      "value": "0x18E8"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6369": {
      "op": "DUP4"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "DUP9"
    },
    "6372": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "6375": {
      "jump": "i",
      "op": "JUMP"
    },
    "6376": {
      "op": "JUMPDEST"
    },
    "6377": {
      "op": "SWAP1"
    },
    "6378": {
      "op": "POP"
    },
    "6379": {
      "op": "DUP6"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6382": {
      "op": "DUP4"
    },
    "6383": {
      "op": "ADD"
    },
    "6384": {
      "op": "MSTORE"
    },
    "6385": {
      "op": "DUP5"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6388": {
      "op": "DUP4"
    },
    "6389": {
      "op": "ADD"
    },
    "6390": {
      "op": "MSTORE"
    },
    "6391": {
      "op": "DUP4"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6394": {
      "op": "DUP4"
    },
    "6395": {
      "op": "ADD"
    },
    "6396": {
      "op": "MSTORE"
    },
    "6397": {
      "op": "DUP3"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6400": {
      "op": "DUP4"
    },
    "6401": {
      "op": "ADD"
    },
    "6402": {
      "op": "MSTORE"
    },
    "6403": {
      "op": "SWAP7"
    },
    "6404": {
      "op": "SWAP6"
    },
    "6405": {
      "op": "POP"
    },
    "6406": {
      "op": "POP"
    },
    "6407": {
      "op": "POP"
    },
    "6408": {
      "op": "POP"
    },
    "6409": {
      "op": "POP"
    },
    "6410": {
      "op": "POP"
    },
    "6411": {
      "jump": "o",
      "op": "JUMP"
    },
    "6412": {
      "op": "JUMPDEST"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6415": {
      "op": "DUP1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6418": {
      "op": "DUP4"
    },
    "6419": {
      "op": "DUP6"
    },
    "6420": {
      "op": "SUB"
    },
    "6421": {
      "op": "SLT"
    },
    "6422": {
      "op": "ISZERO"
    },
    "6423": {
      "op": "PUSH2",
      "value": "0x191F"
    },
    "6426": {
      "op": "JUMPI"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6429": {
      "op": "DUP1"
    },
    "6430": {
      "op": "REVERT"
    },
    "6431": {
      "op": "JUMPDEST"
    },
    "6432": {
      "op": "POP"
    },
    "6433": {
      "op": "POP"
    },
    "6434": {
      "op": "DUP1"
    },
    "6435": {
      "op": "CALLDATALOAD"
    },
    "6436": {
      "op": "SWAP3"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6439": {
      "op": "SWAP1"
    },
    "6440": {
      "op": "SWAP2"
    },
    "6441": {
      "op": "ADD"
    },
    "6442": {
      "op": "CALLDATALOAD"
    },
    "6443": {
      "op": "SWAP2"
    },
    "6444": {
      "op": "POP"
    },
    "6445": {
      "jump": "o",
      "op": "JUMP"
    },
    "6446": {
      "op": "JUMPDEST"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6451": {
      "op": "DUP3"
    },
    "6452": {
      "op": "DUP5"
    },
    "6453": {
      "op": "SUB"
    },
    "6454": {
      "op": "SLT"
    },
    "6455": {
      "op": "ISZERO"
    },
    "6456": {
      "op": "PUSH2",
      "value": "0x1940"
    },
    "6459": {
      "op": "JUMPI"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6462": {
      "op": "DUP1"
    },
    "6463": {
      "op": "REVERT"
    },
    "6464": {
      "op": "JUMPDEST"
    },
    "6465": {
      "op": "PUSH2",
      "value": "0x1949"
    },
    "6468": {
      "op": "DUP3"
    },
    "6469": {
      "op": "PUSH2",
      "value": "0x1773"
    },
    "6472": {
      "jump": "i",
      "op": "JUMP"
    },
    "6473": {
      "op": "JUMPDEST"
    },
    "6474": {
      "op": "SWAP4"
    },
    "6475": {
      "op": "SWAP3"
    },
    "6476": {
      "op": "POP"
    },
    "6477": {
      "op": "POP"
    },
    "6478": {
      "op": "POP"
    },
    "6479": {
      "jump": "o",
      "op": "JUMP"
    },
    "6480": {
      "op": "JUMPDEST"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6483": {
      "op": "DUP2"
    },
    "6484": {
      "op": "DUP2"
    },
    "6485": {
      "op": "SHR"
    },
    "6486": {
      "op": "SWAP1"
    },
    "6487": {
      "op": "DUP3"
    },
    "6488": {
      "op": "AND"
    },
    "6489": {
      "op": "DUP1"
    },
    "6490": {
      "op": "PUSH2",
      "value": "0x1964"
    },
    "6493": {
      "op": "JUMPI"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6496": {
      "op": "DUP3"
    },
    "6497": {
      "op": "AND"
    },
    "6498": {
      "op": "SWAP2"
    },
    "6499": {
      "op": "POP"
    },
    "6500": {
      "op": "JUMPDEST"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6503": {
      "op": "DUP3"
    },
    "6504": {
      "op": "LT"
    },
    "6505": {
      "op": "DUP2"
    },
    "6506": {
      "op": "EQ"
    },
    "6507": {
      "op": "ISZERO"
    },
    "6508": {
      "op": "PUSH2",
      "value": "0x1985"
    },
    "6511": {
      "op": "JUMPI"
    },
    "6512": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6519": {
      "op": "SHL"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6522": {
      "op": "MSTORE"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6527": {
      "op": "MSTORE"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6532": {
      "op": "REVERT"
    },
    "6533": {
      "op": "JUMPDEST"
    },
    "6534": {
      "op": "POP"
    },
    "6535": {
      "op": "SWAP2"
    },
    "6536": {
      "op": "SWAP1"
    },
    "6537": {
      "op": "POP"
    },
    "6538": {
      "jump": "o",
      "op": "JUMP"
    },
    "6539": {
      "op": "JUMPDEST"
    },
    "6540": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6547": {
      "op": "SHL"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6550": {
      "op": "MSTORE"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6555": {
      "op": "MSTORE"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6560": {
      "op": "REVERT"
    },
    "6561": {
      "op": "JUMPDEST"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6564": {
      "op": "DUP3"
    },
    "6565": {
      "op": "NOT"
    },
    "6566": {
      "op": "DUP3"
    },
    "6567": {
      "op": "GT"
    },
    "6568": {
      "op": "ISZERO"
    },
    "6569": {
      "op": "PUSH2",
      "value": "0x19B4"
    },
    "6572": {
      "op": "JUMPI"
    },
    "6573": {
      "op": "PUSH2",
      "value": "0x19B4"
    },
    "6576": {
      "op": "PUSH2",
      "value": "0x198B"
    },
    "6579": {
      "jump": "i",
      "op": "JUMP"
    },
    "6580": {
      "op": "JUMPDEST"
    },
    "6581": {
      "op": "POP"
    },
    "6582": {
      "op": "ADD"
    },
    "6583": {
      "op": "SWAP1"
    },
    "6584": {
      "jump": "o",
      "op": "JUMP"
    },
    "6585": {
      "op": "JUMPDEST"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6588": {
      "op": "DUP1"
    },
    "6589": {
      "op": "DUP3"
    },
    "6590": {
      "op": "MSTORE"
    },
    "6591": {
      "op": "DUP2"
    },
    "6592": {
      "op": "DUP2"
    },
    "6593": {
      "op": "ADD"
    },
    "6594": {
      "op": "MSTORE"
    },
    "6595": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6630": {
      "op": "DUP3"
    },
    "6631": {
      "op": "ADD"
    },
    "6632": {
      "op": "MSTORE"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6635": {
      "op": "ADD"
    },
    "6636": {
      "op": "SWAP1"
    },
    "6637": {
      "jump": "o",
      "op": "JUMP"
    },
    "6638": {
      "op": "JUMPDEST"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6641": {
      "op": "DUP2"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6644": {
      "op": "NOT"
    },
    "6645": {
      "op": "DIV"
    },
    "6646": {
      "op": "DUP4"
    },
    "6647": {
      "op": "GT"
    },
    "6648": {
      "op": "DUP3"
    },
    "6649": {
      "op": "ISZERO"
    },
    "6650": {
      "op": "ISZERO"
    },
    "6651": {
      "op": "AND"
    },
    "6652": {
      "op": "ISZERO"
    },
    "6653": {
      "op": "PUSH2",
      "value": "0x1A08"
    },
    "6656": {
      "op": "JUMPI"
    },
    "6657": {
      "op": "PUSH2",
      "value": "0x1A08"
    },
    "6660": {
      "op": "PUSH2",
      "value": "0x198B"
    },
    "6663": {
      "jump": "i",
      "op": "JUMP"
    },
    "6664": {
      "op": "JUMPDEST"
    },
    "6665": {
      "op": "POP"
    },
    "6666": {
      "op": "MUL"
    },
    "6667": {
      "op": "SWAP1"
    },
    "6668": {
      "jump": "o",
      "op": "JUMP"
    },
    "6669": {
      "op": "JUMPDEST"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6672": {
      "op": "DUP3"
    },
    "6673": {
      "op": "DUP3"
    },
    "6674": {
      "op": "LT"
    },
    "6675": {
      "op": "ISZERO"
    },
    "6676": {
      "op": "PUSH2",
      "value": "0x1A1F"
    },
    "6679": {
      "op": "JUMPI"
    },
    "6680": {
      "op": "PUSH2",
      "value": "0x1A1F"
    },
    "6683": {
      "op": "PUSH2",
      "value": "0x198B"
    },
    "6686": {
      "jump": "i",
      "op": "JUMP"
    },
    "6687": {
      "op": "JUMPDEST"
    },
    "6688": {
      "op": "POP"
    },
    "6689": {
      "op": "SUB"
    },
    "6690": {
      "op": "SWAP1"
    },
    "6691": {
      "jump": "o",
      "op": "JUMP"
    },
    "6692": {
      "op": "JUMPDEST"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6697": {
      "op": "DUP3"
    },
    "6698": {
      "op": "DUP5"
    },
    "6699": {
      "op": "SUB"
    },
    "6700": {
      "op": "SLT"
    },
    "6701": {
      "op": "ISZERO"
    },
    "6702": {
      "op": "PUSH2",
      "value": "0x1A36"
    },
    "6705": {
      "op": "JUMPI"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6708": {
      "op": "DUP1"
    },
    "6709": {
      "op": "REVERT"
    },
    "6710": {
      "op": "JUMPDEST"
    },
    "6711": {
      "op": "POP"
    },
    "6712": {
      "op": "MLOAD"
    },
    "6713": {
      "op": "SWAP2"
    },
    "6714": {
      "op": "SWAP1"
    },
    "6715": {
      "op": "POP"
    },
    "6716": {
      "jump": "o",
      "op": "JUMP"
    },
    "6717": {
      "op": "JUMPDEST"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6720": {
      "op": "DUP3"
    },
    "6721": {
      "op": "PUSH2",
      "value": "0x1A5A"
    },
    "6724": {
      "op": "JUMPI"
    },
    "6725": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6732": {
      "op": "SHL"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6735": {
      "op": "MSTORE"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6740": {
      "op": "MSTORE"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6745": {
      "op": "REVERT"
    },
    "6746": {
      "op": "JUMPDEST"
    },
    "6747": {
      "op": "POP"
    },
    "6748": {
      "op": "MOD"
    },
    "6749": {
      "op": "SWAP1"
    },
    "6750": {
      "jump": "o",
      "op": "JUMP"
    },
    "6751": {
      "op": "JUMPDEST"
    },
    "6752": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6759": {
      "op": "SHL"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6762": {
      "op": "MSTORE"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6767": {
      "op": "MSTORE"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6772": {
      "op": "REVERT"
    },
    "6773": {
      "op": "JUMPDEST"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6778": {
      "op": "NOT"
    },
    "6779": {
      "op": "DUP3"
    },
    "6780": {
      "op": "EQ"
    },
    "6781": {
      "op": "ISZERO"
    },
    "6782": {
      "op": "PUSH2",
      "value": "0x1A89"
    },
    "6785": {
      "op": "JUMPI"
    },
    "6786": {
      "op": "PUSH2",
      "value": "0x1A89"
    },
    "6789": {
      "op": "PUSH2",
      "value": "0x198B"
    },
    "6792": {
      "jump": "i",
      "op": "JUMP"
    },
    "6793": {
      "op": "JUMPDEST"
    },
    "6794": {
      "op": "POP"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6797": {
      "op": "ADD"
    },
    "6798": {
      "op": "SWAP1"
    },
    "6799": {
      "jump": "o",
      "op": "JUMP"
    },
    "6800": {
      "op": "JUMPDEST"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6803": {
      "op": "DUP1"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6806": {
      "op": "SHL"
    },
    "6807": {
      "op": "SUB"
    },
    "6808": {
      "op": "DUP5"
    },
    "6809": {
      "op": "AND"
    },
    "6810": {
      "op": "DUP2"
    },
    "6811": {
      "op": "MSTORE"
    },
    "6812": {
      "op": "DUP3"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6815": {
      "op": "DUP3"
    },
    "6816": {
      "op": "ADD"
    },
    "6817": {
      "op": "MSTORE"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6822": {
      "op": "DUP3"
    },
    "6823": {
      "op": "ADD"
    },
    "6824": {
      "op": "MSTORE"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6827": {
      "op": "PUSH2",
      "value": "0x1AB7"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6832": {
      "op": "DUP4"
    },
    "6833": {
      "op": "ADD"
    },
    "6834": {
      "op": "DUP5"
    },
    "6835": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "6838": {
      "jump": "i",
      "op": "JUMP"
    },
    "6839": {
      "op": "JUMPDEST"
    },
    "6840": {
      "op": "SWAP6"
    },
    "6841": {
      "op": "SWAP5"
    },
    "6842": {
      "op": "POP"
    },
    "6843": {
      "op": "POP"
    },
    "6844": {
      "op": "POP"
    },
    "6845": {
      "op": "POP"
    },
    "6846": {
      "op": "POP"
    },
    "6847": {
      "jump": "o",
      "op": "JUMP"
    },
    "6848": {
      "op": "JUMPDEST"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6853": {
      "op": "DUP3"
    },
    "6854": {
      "op": "DUP5"
    },
    "6855": {
      "op": "SUB"
    },
    "6856": {
      "op": "SLT"
    },
    "6857": {
      "op": "ISZERO"
    },
    "6858": {
      "op": "PUSH2",
      "value": "0x1AD2"
    },
    "6861": {
      "op": "JUMPI"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6864": {
      "op": "DUP1"
    },
    "6865": {
      "op": "REVERT"
    },
    "6866": {
      "op": "JUMPDEST"
    },
    "6867": {
      "op": "DUP2"
    },
    "6868": {
      "op": "MLOAD"
    },
    "6869": {
      "op": "DUP1"
    },
    "6870": {
      "op": "ISZERO"
    },
    "6871": {
      "op": "ISZERO"
    },
    "6872": {
      "op": "DUP2"
    },
    "6873": {
      "op": "EQ"
    },
    "6874": {
      "op": "PUSH2",
      "value": "0x1949"
    },
    "6877": {
      "op": "JUMPI"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6880": {
      "op": "DUP1"
    },
    "6881": {
      "op": "REVERT"
    }
  },
  "sha1": "1e10907b2d614e6b77bf04f58c665765bf60101f",
  "source": "// contracts/CharityRafflev0.1.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract CharityRaffle is Ownable, VRFConsumerBase {\n    using Counters for Counters.Counter;\n\n    address public linkTokenAddress;\n    uint256 public linkFee;\n    bytes32 public VRFKeyHash;\n    // A contstructor to deal with randomness\n    uint256 public expirationPeriod;\n    constructor(uint256 _expirationPeriod, address _vrfCoordinator, address _linkTokenAddress, uint256 _linkFee, bytes32 _VRFKeyHash) VRFConsumerBase(_vrfCoordinator,_linkTokenAddress){\n        linkFee = _linkFee;\n        VRFKeyHash = _VRFKeyHash;\n        linkTokenAddress = _linkTokenAddress;\n        expirationPeriod = _expirationPeriod;\n    }\n\n    event RequestRandomness(bytes32 requestId);\n    event WinnerChosen(uint256 raffleId, address payable winner, uint256 ticketIndex);\n    event RaffleCreated(address beneficiary, uint256 raffleId);\n\n    enum RaffleState {\n        Open,\n        SelectingWinner,\n        Finished,\n        Expired \n    }\n    // NotStarted: The raffle has not yet begun\n    // Open: The raffle is open for entry\n    // Closed: The raffle is closed for entry\n    // SelectingWinner: The raffle is closed and the winner is being selected\n    // Finished: The raffle is finished and the winner has been selected, beneficiary has been paid\n    // Expired: The raffle has expired since the benificiary has not ended it\n\n    struct Raffle {\n        uint256 id; // unique identifier for the raffle\n        string name; // name of the raffle\n        uint256 ticketCount; // number of tickets bought for this raffle\n        uint256 ticketPrice; // in wei\n        address payable beneficiary; // address of the beneficiary\n        address payable winner; // address of the winner of the raffle, by default it's 0x0\n        uint256 startTime; // unix timestamp of the start of the raffle\n        uint256 endTime; // unix timestamp of the end of the raffle\n        RaffleState state; // state of the raffle\n        mapping(address => uint256) ticketBalances; // mapping of address to ticket count\n        address[] ticketOwners; // array of addresses of the ticket owners (used for iteration through the ticket balances)\n        bool payedOut; // whether the raffle has been payed out\n    }\n\n    // Some rules of how raffles work\n    // 1. Anyone can make a new raffle\n    // 2. Anyone can buy tickets for any open raffle, and this can be for multiple raffles\n    // 3. Tickets are only refundable if the raffle expires, this means that the beneficiary has not claimed the raffle a week after it's end\n    // 4. The beneficiary can only end the raffle after the end time\n\n    Counters.Counter public RaffleCount;\n    mapping(uint256 => Raffle) public Raffles; // mapping of raffle id to raffle data\n    mapping(bytes32 => uint256) public VRFRequestIdTORaffleId; // mapping of VRF request id to raffle id\n\n    // A value that keeps track of all the change givent to the contract\n    uint256 public change = 0;\n\n    function CreateRaffle(string memory _raffleName, uint256 _ticketPrice, uint256 _raffleLength) public returns(uint256 raffleId){\n        RaffleCount.increment();\n        uint256 _id = RaffleCount.current();\n        Raffle storage raffle = Raffles[_id]; \n        raffle.id = _id;\n        raffle.name = _raffleName;\n        raffle.ticketCount = 0;\n        raffle.ticketPrice = _ticketPrice;\n        raffle.beneficiary = payable(msg.sender);\n        raffle.startTime = block.timestamp;\n        raffle.endTime = block.timestamp + _raffleLength;\n        raffle.state = RaffleState.Open;\n        raffle.winner = payable(0x0);\n        emit RaffleCreated(raffle.beneficiary, _id);\n    }\n\n    // Some reader functions for getting info about raffles\n    function GetRaffleInfo(uint256 _id) public view returns (string memory name, address payable beneficiary, address payable winner, uint256 startTime, uint256 endTime) {\n        return (Raffles[_id].name, Raffles[_id].beneficiary, Raffles[_id].winner, Raffles[_id].startTime, Raffles[_id].endTime);\n    }\n\n    function GetRaffleTicketInfo(uint256 _id) public view returns (string memory name, uint256 startTime, uint256 endTime, uint256 ticketCount, uint256 ticketPrice) {\n        return (Raffles[_id].name, Raffles[_id].startTime, Raffles[_id].endTime, Raffles[_id].ticketCount, Raffles[_id].ticketPrice);\n    }\n\n    function GetRaffleBalance(uint256 _id, address owner) public view returns (uint256 balance) {\n        return Raffles[_id].ticketBalances[owner];\n    }\n\n    function GetRaffleCount() public view returns (uint256) {\n        return RaffleCount.current();\n    }\n\n    function ClaimRaffle(uint256 _id) public{\n        require(msg.sender == Raffles[_id].beneficiary, \"Only the beneficiary can claim the raffle\");\n        require(block.timestamp >= Raffles[_id].endTime, \"The raffle has not closed yet\");\n        require(Raffles[_id].endTime + expirationPeriod > block.timestamp, \"The raffle has expired and cannot be claimed\");\n        require(Raffles[_id].state == RaffleState.Open, \"The raffle is not avaible for claiming\");\n        require(IERC20(linkTokenAddress).balanceOf(address(this)) >=  linkFee, \"The contract needs to be paid link token to claim the raffle\");\n        Raffles[_id].state = RaffleState.SelectingWinner;\n        // Fire off the VRF to select the winner\n        bytes32 requestId = requestRandomness(VRFKeyHash, linkFee); // Return a bytes 32 which is the request ID\n        VRFRequestIdTORaffleId[requestId] = _id; // Map the request ID to the raffle ID\n        emit RequestRandomness(requestId);\n    }\n\n    // This is run by the VRF coordinator to finalize the winner\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness) internal override {\n        uint256 raffleId = VRFRequestIdTORaffleId[_requestId];\n        require(Raffles[raffleId].state == RaffleState.SelectingWinner, \"The raffle is not in the SelectingWinner state\");\n        require(_randomness >= 0, \"No randomness found\");\n        Raffles[raffleId].state = RaffleState.Finished;\n        uint256 winningTicketIndex = _randomness % Raffles[raffleId].ticketCount;\n        // Todo: Convert the winning ticket index to an address\n        uint256 ticketCounter = 0;\n        uint256 l = Raffles[raffleId].ticketOwners.length;\n        for (uint256 i = 0; i < l; i++) {\n            uint256 balance = Raffles[raffleId].ticketBalances[Raffles[raffleId].ticketOwners[i]];\n            if (ticketCounter <= winningTicketIndex && winningTicketIndex < ticketCounter + balance) { // We have found the winning ticket\n                Raffles[raffleId].winner = payable(Raffles[raffleId].ticketOwners[i]);\n                break;\n            }\n            ticketCounter += balance;\n        }\n        // Send the raffle money to the beneficiary\n        (Raffles[raffleId].payedOut, ) = payable(Raffles[raffleId].beneficiary).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketCount}(\"\");\n        emit WinnerChosen(raffleId, Raffles[raffleId].winner, winningTicketIndex);\n    }\n\n    // A function to buy tickets for a raffle\n    function BuyTickets(uint256 raffleId, uint256 _ticketCount) public payable {\n        require(Raffles[raffleId].state == RaffleState.Open, \"Raffle not open\");\n        require(block.timestamp < Raffles[raffleId].endTime, \"Raffle is closed\");\n        require(_ticketCount > 0, \"Ticket count must be greater than 0\");\n        require(msg.value >= Raffles[raffleId].ticketPrice * _ticketCount, \"Ticket price is greater than the amount sent\");\n        Raffles[raffleId].ticketCount += _ticketCount;\n        if (Raffles[raffleId].ticketBalances[msg.sender] == 0) { // This will be a list of all of the unique ticket owners (in the order they buy them but that dosent matter dose it)\n            Raffles[raffleId].ticketOwners.push(msg.sender);\n        }\n        Raffles[raffleId].ticketBalances[msg.sender] += _ticketCount;\n        // If the buyer is not in the ticket owners array, add him\n        change += msg.value - Raffles[raffleId].ticketPrice * _ticketCount;\n    }\n\n    // A function for the owner of the contract to collect all the change in the contract\n    function CollectChange() public onlyOwner returns (uint256){\n        require(change > 0, \"There is no change to collect!\");\n        payable(msg.sender).call{value: change}(\"\");\n        uint256 _change = change;\n        change = 0;\n        return _change;\n    }\n\n    // A function for ticket buys to be refunded all the tickets they own\n    function TicketRefund(uint256 raffleId) public{\n        require(block.timestamp >= Raffles[raffleId].endTime + expirationPeriod, \"The refund period has not ended yet\");\n        require(Raffles[raffleId].state != RaffleState.Finished, \"The raffle is finished\");\n        require(Raffles[raffleId].state != RaffleState.SelectingWinner, \"The raffle is selecting a winner.\");\n        // Update the expiration of the raffle\n        Raffles[raffleId].state = RaffleState.Expired;\n        // Send the money back to the buyer\n        (bool transfered, ) = payable(msg.sender).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketBalances[msg.sender]}(\"\");\n        if (transfered) {\n            Raffles[raffleId].ticketBalances[msg.sender] = 0;\n        }\n    }\n}",
  "sourceMap": "320:9155:7:-:0;;;3216:1;3192:25;;598:341;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:15;760:17;921:32:0;719:10:2;921:18:0;:32::i;:::-;-1:-1:-1;;;;;9370:32:4;;;;;9408;;;;788:7:7::1;:18:::0;;;;816:10:::1;:24:::0;850:16:::1;:36:::0;;-1:-1:-1;;;;;;850:36:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;896:16:7::1;:36:::0;320:9155;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:478::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;433:9;427:16;417:26;;462:49;507:2;496:9;492:18;462:49;:::i;:::-;452:59;;530:49;575:2;564:9;560:18;530:49;:::i;:::-;619:2;604:18;;598:25;663:3;648:19;;;642:26;196:478;;;;-1:-1:-1;520:59:8;598:25;642:26;196:478;-1:-1:-1;;;196:478:8:o;:::-;320:9155:7;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CharityRaffle.sol",
  "type": "contract"
}