{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_expirationPeriod",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_linkFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_VRFKeyHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ticketIndex",
          "type": "uint256"
        }
      ],
      "name": "WinnerChosen",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketCount",
          "type": "uint256"
        }
      ],
      "name": "BuyTickets",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "ClaimRaffle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CollectChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_raffleName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_ticketPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_raffleLength",
          "type": "uint256"
        }
      ],
      "name": "CreateRaffle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "GetRaffleBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetRaffleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetRaffleInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetRaffleTicketInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RaffleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Raffles",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ticketCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ticketPrice",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "enum CharityRaffle.RaffleState",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "payedOut",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "raffleId",
          "type": "uint256"
        }
      ],
      "name": "TicketRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VRFKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "VRFRequestIdTORaffleId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "change",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol",
    "1": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
    "3": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol",
    "4": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol",
    "5": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFRequestIDBase.sol",
    "7": "contracts/CharityRaffle.sol"
  },
  "ast": {
    "absolutePath": "contracts/CharityRaffle.sol",
    "exportedSymbols": {
      "CharityRaffle": [
        786
      ],
      "Context": [
        1186
      ],
      "Counters": [
        1043
      ],
      "IERC20": [
        969
      ],
      "LinkTokenInterface": [
        1331
      ],
      "Ownable": [
        891
      ],
      "VRFConsumerBase": [
        1164
      ],
      "VRFRequestIDBase": [
        1236
      ]
    },
    "id": 787,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:23:7"
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 787,
        "sourceUnit": 892,
        "src": "92:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 787,
        "sourceUnit": 1044,
        "src": "145:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 787,
        "sourceUnit": 1165,
        "src": "198:63:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 787,
        "sourceUnit": 970,
        "src": "262:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 891,
              "src": "346:7:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "346:7:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1164,
              "src": "355:15:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "355:15:7"
          }
        ],
        "canonicalName": "CharityRaffle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 786,
        "linearizedBaseContracts": [
          786,
          1164,
          1236,
          891,
          1186
        ],
        "name": "CharityRaffle",
        "nameLocation": "329:13:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13,
            "libraryName": {
              "id": 10,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1043,
              "src": "383:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "377:36:7",
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 975,
                "src": "396:16:7"
              },
              "referencedDeclaration": 975,
              "src": "396:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$975_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ef124faf",
            "id": 15,
            "mutability": "mutable",
            "name": "linkTokenAddress",
            "nameLocation": "434:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "419:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01889611",
            "id": 17,
            "mutability": "mutable",
            "name": "linkFee",
            "nameLocation": "471:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "456:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "456:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1d3bde3",
            "id": 19,
            "mutability": "mutable",
            "name": "VRFKeyHash",
            "nameLocation": "499:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "484:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 18,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8897cad3",
            "id": 21,
            "mutability": "mutable",
            "name": "expirationPeriod",
            "nameLocation": "576:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "561:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "561:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "778:161:7",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "linkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "788:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_linkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "798:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "788:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "788:18:7"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "VRFKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "816:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_VRFKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "829:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "816:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "816:24:7"
                },
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "linkTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "850:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_linkTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "869:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "850:36:7"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "expirationPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "896:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51,
                      "name": "_expirationPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "915:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "896:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "896:36:7"
                }
              ]
            },
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "744:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 35,
                    "name": "_linkTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "760:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 36,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1164,
                  "src": "728:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "728:50:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_expirationPeriod",
                  "nameLocation": "618:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "610:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "645:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "637:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_linkTokenAddress",
                  "nameLocation": "670:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "662:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_linkFee",
                  "nameLocation": "697:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "689:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_VRFKeyHash",
                  "nameLocation": "715:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "707:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:118:7"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:0:7"
            },
            "scope": 786,
            "src": "598:341:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "RequestRandomness",
            "nameLocation": "951:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "977:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "969:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:19:7"
            },
            "src": "945:43:7"
          },
          {
            "anonymous": false,
            "id": 67,
            "name": "WinnerChosen",
            "nameLocation": "999:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "1020:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1012:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "1046:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1030:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ticketIndex",
                  "nameLocation": "1062:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1054:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:63:7"
            },
            "src": "993:82:7"
          },
          {
            "canonicalName": "CharityRaffle.RaffleState",
            "id": 72,
            "members": [
              {
                "id": 68,
                "name": "Open",
                "nameLocation": "1108:4:7",
                "nodeType": "EnumValue",
                "src": "1108:4:7"
              },
              {
                "id": 69,
                "name": "SelectingWinner",
                "nameLocation": "1122:15:7",
                "nodeType": "EnumValue",
                "src": "1122:15:7"
              },
              {
                "id": 70,
                "name": "Finished",
                "nameLocation": "1147:8:7",
                "nodeType": "EnumValue",
                "src": "1147:8:7"
              },
              {
                "id": 71,
                "name": "Expired",
                "nameLocation": "1165:7:7",
                "nodeType": "EnumValue",
                "src": "1165:7:7"
              }
            ],
            "name": "RaffleState",
            "nameLocation": "1086:11:7",
            "nodeType": "EnumDefinition",
            "src": "1081:98:7"
          },
          {
            "canonicalName": "CharityRaffle.Raffle",
            "id": 101,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1609:2:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1601:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1601:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1664:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1657:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 75,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1657:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "ticketCount",
                "nameLocation": "1708:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1700:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 77,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1700:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "ticketPrice",
                "nameLocation": "1781:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1773:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1773:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "beneficiary",
                "nameLocation": "1828:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1812:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1812:15:7",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "winner",
                "nameLocation": "1895:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1879:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 83,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1879:15:7",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "1979:9:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "1971:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1971:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "2051:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "2043:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2043:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2123:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "2111:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_RaffleState_$72",
                  "typeString": "enum CharityRaffle.RaffleState"
                },
                "typeName": {
                  "id": 90,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 89,
                    "name": "RaffleState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 72,
                    "src": "2111:11:7"
                  },
                  "referencedDeclaration": 72,
                  "src": "2111:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RaffleState_$72",
                    "typeString": "enum CharityRaffle.RaffleState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 95,
                "mutability": "mutable",
                "name": "ticketBalances",
                "nameLocation": "2189:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "2161:42:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 94,
                  "keyType": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2161:27:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "mutability": "mutable",
                "name": "ticketOwners",
                "nameLocation": "2261:12:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "2251:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 97,
                  "nodeType": "ArrayTypeName",
                  "src": "2251:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 100,
                "mutability": "mutable",
                "name": "payedOut",
                "nameLocation": "2380:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "2375:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 99,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2375:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Raffle",
            "nameLocation": "1584:6:7",
            "nodeType": "StructDefinition",
            "scope": 786,
            "src": "1577:859:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "57529e6c",
            "id": 104,
            "mutability": "mutable",
            "name": "RaffleCount",
            "nameLocation": "2846:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "2822:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$975_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 103,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 102,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 975,
                "src": "2822:16:7"
              },
              "referencedDeclaration": 975,
              "src": "2822:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$975_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d5ccd9b",
            "id": 109,
            "mutability": "mutable",
            "name": "Raffles",
            "nameLocation": "2897:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "2863:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"
            },
            "typeName": {
              "id": 108,
              "keyType": {
                "id": 105,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2871:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2863:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"
              },
              "valueType": {
                "id": 107,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 106,
                  "name": "Raffle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 101,
                  "src": "2882:6:7"
                },
                "referencedDeclaration": 101,
                "src": "2882:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                  "typeString": "struct CharityRaffle.Raffle"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27028a84",
            "id": 113,
            "mutability": "mutable",
            "name": "VRFRequestIdTORaffleId",
            "nameLocation": "2984:22:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "2949:57:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 112,
              "keyType": {
                "id": 110,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2957:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2949:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 111,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2968:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ee79ded",
            "id": 116,
            "mutability": "mutable",
            "name": "change",
            "nameLocation": "3143:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 786,
            "src": "3128:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3128:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3152:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "3286:518:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 127,
                        "name": "RaffleCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "3296:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$975_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1001,
                      "src": "3296:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$975_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$975_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:23:7"
                },
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "3337:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 213,
                      "src": "3329:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3329:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 134,
                        "name": "RaffleCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "3343:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$975_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 987,
                      "src": "3343:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$975_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$975_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3329:35:7"
                },
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "raffle",
                      "nameLocation": "3389:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 213,
                      "src": "3374:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                        "typeString": "struct CharityRaffle.Raffle"
                      },
                      "typeName": {
                        "id": 139,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 138,
                          "name": "Raffle",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 101,
                          "src": "3374:6:7"
                        },
                        "referencedDeclaration": 101,
                        "src": "3374:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "baseExpression": {
                      "id": 141,
                      "name": "Raffles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "3398:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                        "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                      }
                    },
                    "id": 143,
                    "indexExpression": {
                      "id": 142,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3406:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3398:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Raffle_$101_storage",
                      "typeString": "struct CharityRaffle.Raffle storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:36:7"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 145,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3421:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3421:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 148,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3433:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3421:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "3421:15:7"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 151,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3446:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "3446:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 154,
                      "name": "_raffleName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "3460:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3446:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:25:7"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3481:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "3481:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3502:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3481:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:22:7"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 163,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3513:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "3513:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 166,
                      "name": "_ticketPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "3534:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3513:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3513:33:7"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 169,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3556:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "3556:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 174,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3585:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3585:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3577:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3577:8:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3577:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3556:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:40:7"
                },
                {
                  "expression": {
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 179,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3606:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "3606:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 182,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3625:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3625:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3606:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:34:7"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 186,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3650:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "3650:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 189,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3667:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3667:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 191,
                        "name": "_raffleLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3685:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3667:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3650:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:48:7"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3708:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "3708:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3723:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Open",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "3723:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "3708:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$72",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3708:31:7"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 202,
                        "name": "raffle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3749:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage_ptr",
                          "typeString": "struct CharityRaffle.Raffle storage pointer"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "3749:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3773:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3765:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3765:8:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3765:12:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3749:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:28:7"
                },
                {
                  "expression": {
                    "id": 211,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 133,
                    "src": "3794:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 126,
                  "id": 212,
                  "nodeType": "Return",
                  "src": "3787:10:7"
                }
              ]
            },
            "functionSelector": "2fec9240",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateRaffle",
            "nameLocation": "3169:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_raffleName",
                  "nameLocation": "3196:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3182:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_ticketPrice",
                  "nameLocation": "3217:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3209:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_raffleLength",
                  "nameLocation": "3239:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3231:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3231:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:72:7"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "3277:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3269:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3268:18:7"
            },
            "scope": 786,
            "src": "3160:644:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "4036:136:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 229,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4054:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 231,
                          "indexExpression": {
                            "id": 230,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4062:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4054:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4054:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 233,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4073:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 235,
                          "indexExpression": {
                            "id": 234,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4081:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4073:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "beneficiary",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 82,
                        "src": "4073:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 237,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4099:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 239,
                          "indexExpression": {
                            "id": 238,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4107:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4099:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "4099:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4120:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "id": 242,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4128:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4120:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "4120:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 245,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4144:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 247,
                          "indexExpression": {
                            "id": 246,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4152:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4144:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88,
                        "src": "4144:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 249,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4053:112:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,address payable,address payable,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 228,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "4046:119:7"
                }
              ]
            },
            "functionSelector": "32dd45fb",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleInfo",
            "nameLocation": "3879:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3901:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "3893:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3892:13:7"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "3941:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "3927:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3927:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "3963:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "3947:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3947:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "3992:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "3976:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3976:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "4008:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "4000:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "4027:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "4019:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3926:109:7"
            },
            "scope": 786,
            "src": "3870:302:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "4339:141:7",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 267,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4357:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 269,
                          "indexExpression": {
                            "id": 268,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4365:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4357:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4357:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 271,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4376:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 273,
                          "indexExpression": {
                            "id": 272,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4384:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4376:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "4376:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 275,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4400:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 277,
                          "indexExpression": {
                            "id": 276,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4408:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4400:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88,
                        "src": "4400:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 279,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4422:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 281,
                          "indexExpression": {
                            "id": 280,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4430:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4422:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78,
                        "src": "4422:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 283,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "4448:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 285,
                          "indexExpression": {
                            "id": 284,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "4456:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4448:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "4448:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 287,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4356:117:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 288,
                  "nodeType": "Return",
                  "src": "4349:124:7"
                }
              ]
            },
            "functionSelector": "533b4c56",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleTicketInfo",
            "nameLocation": "4187:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4215:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4207:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4207:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4206:13:7"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "4255:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4241:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "4269:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4261:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "4288:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4280:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4280:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "ticketCount",
                  "nameLocation": "4305:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4297:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "ticketPrice",
                  "nameLocation": "4326:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4318:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4240:98:7"
            },
            "scope": 786,
            "src": "4178:302:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "4578:58:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 299,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "4595:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 301,
                        "indexExpression": {
                          "id": 300,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "4603:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4595:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketBalances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 95,
                      "src": "4595:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 304,
                    "indexExpression": {
                      "id": 303,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "4623:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4595:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 298,
                  "id": 305,
                  "nodeType": "Return",
                  "src": "4588:41:7"
                }
              ]
            },
            "functionSelector": "21d7112e",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleBalance",
            "nameLocation": "4495:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4520:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "4512:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4512:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4533:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "4525:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4525:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4511:28:7"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4569:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "4561:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4560:17:7"
            },
            "scope": 786,
            "src": "4486:150:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "4698:45:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 312,
                        "name": "RaffleCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "4715:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$975_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 987,
                      "src": "4715:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$975_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$975_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 311,
                  "id": 315,
                  "nodeType": "Return",
                  "src": "4708:28:7"
                }
              ]
            },
            "functionSelector": "b198333c",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRaffleCount",
            "nameLocation": "4651:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4665:2:7"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4689:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4689:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4688:9:7"
            },
            "scope": 786,
            "src": "4642:101:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "4789:918:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4807:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4807:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 325,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "4821:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 327,
                            "indexExpression": {
                              "id": 326,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "4829:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4821:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "beneficiary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "4821:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4807:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074686520726166666c65",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4847:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220",
                          "typeString": "literal_string \"Only the beneficiary can claim the raffle\""
                        },
                        "value": "Only the beneficiary can claim the raffle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220",
                          "typeString": "literal_string \"Only the beneficiary can claim the raffle\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4799:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4799:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "4799:92:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 334,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4909:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4909:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 336,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "4928:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 338,
                            "indexExpression": {
                              "id": 337,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "4936:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4928:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88,
                          "src": "4928:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4909:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c6520686173206e6f7420636c6f73656420796574",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4950:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45",
                          "typeString": "literal_string \"The raffle has not closed yet\""
                        },
                        "value": "The raffle has not closed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45",
                          "typeString": "literal_string \"The raffle has not closed yet\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4901:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:81:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:81:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 345,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "5000:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 347,
                              "indexExpression": {
                                "id": 346,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 319,
                                "src": "5008:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5000:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 88,
                            "src": "5000:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 349,
                            "name": "expirationPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "5023:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5000:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 351,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5042:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5042:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5000:57:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c6520686173206578706972656420616e642063616e6e6f7420626520636c61696d6564",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5059:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5",
                          "typeString": "literal_string \"The raffle has expired and cannot be claimed\""
                        },
                        "value": "The raffle has expired and cannot be claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5",
                          "typeString": "literal_string \"The raffle has expired and cannot be claimed\""
                        }
                      ],
                      "id": 344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4992:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4992:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "4992:114:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$72",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 358,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "5124:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 360,
                            "indexExpression": {
                              "id": 359,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "5132:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5124:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "5124:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 362,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "5146:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Open",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "5146:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "5124:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c65206973206e6f742061766169626c6520666f7220636c61696d696e67",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5164:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d37f02932720ba7e9bec07458f230400ebe868995db28e78f3971c456d9a26b4",
                          "typeString": "literal_string \"The raffle is not avaible for claiming\""
                        },
                        "value": "The raffle is not avaible for claiming"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d37f02932720ba7e9bec07458f230400ebe868995db28e78f3971c456d9a26b4",
                          "typeString": "literal_string \"The raffle is not avaible for claiming\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5116:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5116:89:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "5116:89:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 375,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5266:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CharityRaffle_$786",
                                    "typeString": "contract CharityRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CharityRaffle_$786",
                                    "typeString": "contract CharityRaffle"
                                  }
                                ],
                                "id": 374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5258:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 373,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5258:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5258:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 370,
                                  "name": "linkTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15,
                                  "src": "5230:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 369,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 969,
                                "src": "5223:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5223:24:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 908,
                            "src": "5223:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5223:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 378,
                          "name": "linkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "5277:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5223:61:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e7472616374206e6565647320746f2062652070616964206c696e6b20746f6b656e20746f20636c61696d2074686520726166666c65",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5286:62:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872",
                          "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""
                        },
                        "value": "The contract needs to be paid link token to claim the raffle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872",
                          "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""
                        }
                      ],
                      "id": 368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5215:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:134:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:134:7"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 383,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "5359:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 385,
                        "indexExpression": {
                          "id": 384,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "5367:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5359:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "5359:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 387,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "5380:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SelectingWinner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "5380:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "5359:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$72",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "5359:48:7"
                },
                {
                  "assignments": [
                    392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 392,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "5474:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "5466:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 391,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5466:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 394,
                        "name": "VRFKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "5504:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 395,
                        "name": "linkFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "5516:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 393,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1114,
                      "src": "5486:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5486:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5466:58:7"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 398,
                        "name": "VRFRequestIdTORaffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "5579:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "id": 399,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5602:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5579:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 401,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "5615:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5579:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5579:39:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5690:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 404,
                      "name": "RequestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "5672:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5672:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "EmitStatement",
                  "src": "5667:33:7"
                }
              ]
            },
            "functionSelector": "cda32773",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ClaimRaffle",
            "nameLocation": "4758:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4778:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "4770:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4770:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4769:13:7"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4789:0:7"
            },
            "scope": 786,
            "src": "4749:958:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1058
            ],
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "5864:1294:7",
              "statements": [
                {
                  "assignments": [
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "raffleId",
                      "nameLocation": "5882:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "5874:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5874:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 422,
                  "initialValue": {
                    "baseExpression": {
                      "id": 419,
                      "name": "VRFRequestIdTORaffleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "5893:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 421,
                    "indexExpression": {
                      "id": 420,
                      "name": "_requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "5916:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5893:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5874:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$72",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 424,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "5945:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 426,
                            "indexExpression": {
                              "id": 425,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "5953:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5945:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "5945:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 428,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "5972:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SelectingWinner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69,
                          "src": "5972:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "5945:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c65206973206e6f7420696e207468652053656c656374696e6757696e6e6572207374617465",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6001:48:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c",
                          "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""
                        },
                        "value": "The raffle is not in the SelectingWinner state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c",
                          "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""
                        }
                      ],
                      "id": 423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5937:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "5937:113:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 435,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "6068:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6083:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6068:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072616e646f6d6e65737320666f756e64",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6086:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        },
                        "value": "No randomness found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de",
                          "typeString": "literal_string \"No randomness found\""
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6060:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6060:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "6060:48:7"
                },
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 441,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "6118:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 443,
                        "indexExpression": {
                          "id": 442,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "6126:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6118:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "6118:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 445,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "6144:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Finished",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "6144:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "6118:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$72",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "6118:46:7"
                },
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "winningTicketIndex",
                      "nameLocation": "6182:18:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "6174:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6174:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 451,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "6203:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 452,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "6217:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 454,
                        "indexExpression": {
                          "id": 453,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "6225:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6217:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "6217:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6203:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6174:72:7"
                },
                {
                  "assignments": [
                    459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 459,
                      "mutability": "mutable",
                      "name": "ticketCounter",
                      "nameLocation": "6328:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "6320:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6320:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6344:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6320:25:7"
                },
                {
                  "assignments": [
                    463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 463,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "6363:1:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "6355:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6355:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 469,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 464,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "6367:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 466,
                        "indexExpression": {
                          "id": 465,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "6375:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6367:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketOwners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "6367:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6367:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6355:49:7"
                },
                {
                  "body": {
                    "id": 525,
                    "nodeType": "Block",
                    "src": "6446:411:7",
                    "statements": [
                      {
                        "assignments": [
                          481
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 481,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "6468:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 525,
                            "src": "6460:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 480,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6460:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 493,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 482,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "6478:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 484,
                              "indexExpression": {
                                "id": 483,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 418,
                                "src": "6486:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6478:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 485,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ticketBalances",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 95,
                            "src": "6478:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 492,
                          "indexExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 486,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "6511:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 488,
                                "indexExpression": {
                                  "id": 487,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 418,
                                  "src": "6519:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6511:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 489,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketOwners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 98,
                              "src": "6511:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 491,
                            "indexExpression": {
                              "id": 490,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "6542:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6511:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6478:67:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6460:85:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 494,
                              "name": "ticketCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "6563:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 495,
                              "name": "winningTicketIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "6580:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6563:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 497,
                              "name": "winningTicketIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "6602:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 498,
                                "name": "ticketCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "6623:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 499,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 481,
                                "src": "6639:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6623:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6602:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6563:83:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 520,
                        "nodeType": "IfStatement",
                        "src": "6559:250:7",
                        "trueBody": {
                          "id": 519,
                          "nodeType": "Block",
                          "src": "6648:161:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 503,
                                      "name": "Raffles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 109,
                                      "src": "6702:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                        "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                      }
                                    },
                                    "id": 505,
                                    "indexExpression": {
                                      "id": 504,
                                      "name": "raffleId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 418,
                                      "src": "6710:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6702:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                      "typeString": "struct CharityRaffle.Raffle storage ref"
                                    }
                                  },
                                  "id": 506,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 84,
                                  "src": "6702:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 509,
                                            "name": "Raffles",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 109,
                                            "src": "6737:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                            }
                                          },
                                          "id": 511,
                                          "indexExpression": {
                                            "id": 510,
                                            "name": "raffleId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 418,
                                            "src": "6745:8:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6737:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                            "typeString": "struct CharityRaffle.Raffle storage ref"
                                          }
                                        },
                                        "id": 512,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ticketOwners",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 98,
                                        "src": "6737:30:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 514,
                                      "indexExpression": {
                                        "id": 513,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 471,
                                        "src": "6768:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6737:33:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6729:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 507,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6729:8:7",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6729:42:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "6702:69:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 517,
                              "nodeType": "ExpressionStatement",
                              "src": "6702:69:7"
                            },
                            {
                              "id": 518,
                              "nodeType": "Break",
                              "src": "6789:5:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 521,
                            "name": "ticketCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "6822:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 522,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "6839:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6822:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "6822:24:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 474,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "6434:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 475,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "6438:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6434:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 526,
                  "initializationExpression": {
                    "assignments": [
                      471
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6427:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "6419:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6419:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 473,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6431:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6419:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6441:3:7",
                      "subExpression": {
                        "id": 477,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "6441:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 479,
                    "nodeType": "ExpressionStatement",
                    "src": "6441:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "6414:443:7"
                },
                {
                  "expression": {
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 527,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "6919:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 529,
                            "indexExpression": {
                              "id": 528,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "6927:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6919:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "payedOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100,
                          "src": "6919:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        null
                      ],
                      "id": 531,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6918:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$__$",
                        "typeString": "tuple(bool,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7065:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 534,
                                    "name": "Raffles",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 109,
                                    "src": "6959:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                      "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                    }
                                  },
                                  "id": 536,
                                  "indexExpression": {
                                    "id": 535,
                                    "name": "raffleId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 418,
                                    "src": "6967:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6959:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                    "typeString": "struct CharityRaffle.Raffle storage ref"
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "beneficiary",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 82,
                                "src": "6959:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6951:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 532,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6951:8:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6951:38:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "src": "6951:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 540,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "7002:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 542,
                                "indexExpression": {
                                  "id": 541,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 418,
                                  "src": "7010:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7002:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "7002:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 544,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "7034:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 546,
                                "indexExpression": {
                                  "id": 545,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 418,
                                  "src": "7042:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7034:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78,
                              "src": "7034:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7002:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "6951:113:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6951:117:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "6918:150:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "6918:150:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 555,
                        "name": "raffleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "7096:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 556,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "7106:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 558,
                          "indexExpression": {
                            "id": 557,
                            "name": "raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "7114:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7106:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "7106:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 560,
                        "name": "winningTicketIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "7132:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 554,
                      "name": "WinnerChosen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "7083:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address payable,uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7083:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "EmitStatement",
                  "src": "7078:73:7"
                }
              ]
            },
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "5787:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 415,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5855:8:7"
            },
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "5813:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "5805:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5805:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "5833:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "5825:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5825:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5804:41:7"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5864:0:7"
            },
            "scope": 786,
            "src": "5778:1380:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "7285:890:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$72",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 572,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "7303:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 574,
                            "indexExpression": {
                              "id": 573,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "7311:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7303:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "7303:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 576,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "7330:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Open",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "7330:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "7303:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c65206e6f74206f70656e",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7348:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea",
                          "typeString": "literal_string \"Raffle not open\""
                        },
                        "value": "Raffle not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea",
                          "typeString": "literal_string \"Raffle not open\""
                        }
                      ],
                      "id": 571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7295:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7295:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "7295:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 583,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7384:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7384:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 585,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "7402:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 587,
                            "indexExpression": {
                              "id": 586,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "7410:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7402:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88,
                          "src": "7402:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7384:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526166666c6520697320636c6f736564",
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7429:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a",
                          "typeString": "literal_string \"Raffle is closed\""
                        },
                        "value": "Raffle is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a",
                          "typeString": "literal_string \"Raffle is closed\""
                        }
                      ],
                      "id": 582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7376:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7376:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "7376:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 594,
                          "name": "_ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "7466:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7481:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7466:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b657420636f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7484:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3",
                          "typeString": "literal_string \"Ticket count must be greater than 0\""
                        },
                        "value": "Ticket count must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3",
                          "typeString": "literal_string \"Ticket count must be greater than 0\""
                        }
                      ],
                      "id": 593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7458:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7458:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "7458:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 601,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7540:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7540:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 603,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "7553:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 605,
                              "indexExpression": {
                                "id": 604,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 566,
                                "src": "7561:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7553:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ticketPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80,
                            "src": "7553:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 607,
                            "name": "_ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "7585:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7553:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7540:57:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5469636b65742070726963652069732067726561746572207468616e2074686520616d6f756e742073656e74",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7599:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8",
                          "typeString": "literal_string \"Ticket price is greater than the amount sent\""
                        },
                        "value": "Ticket price is greater than the amount sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8",
                          "typeString": "literal_string \"Ticket price is greater than the amount sent\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7532:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7532:114:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "7532:114:7"
                },
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 613,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "7656:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 615,
                        "indexExpression": {
                          "id": 614,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "7664:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7656:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ticketCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "7656:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 617,
                      "name": "_ticketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "7689:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7656:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "7656:45:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 620,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "7715:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 622,
                          "indexExpression": {
                            "id": 621,
                            "name": "raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "7723:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7715:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketBalances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 95,
                        "src": "7715:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 626,
                      "indexExpression": {
                        "expression": {
                          "id": 624,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7748:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7748:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7715:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7763:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7715:49:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 639,
                  "nodeType": "IfStatement",
                  "src": "7711:245:7",
                  "trueBody": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7766:190:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 634,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7934:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7934:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 629,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "7898:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 631,
                                "indexExpression": {
                                  "id": 630,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "7906:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7898:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 632,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketOwners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 98,
                              "src": "7898:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7898:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7898:47:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7898:47:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 640,
                            "name": "Raffles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "7965:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                              "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                            }
                          },
                          "id": 642,
                          "indexExpression": {
                            "id": 641,
                            "name": "raffleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "7973:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7965:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Raffle_$101_storage",
                            "typeString": "struct CharityRaffle.Raffle storage ref"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticketBalances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 95,
                        "src": "7965:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "expression": {
                          "id": 644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7998:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7998:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7965:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 647,
                      "name": "_ticketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "8013:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7965:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7965:60:7"
                },
                {
                  "expression": {
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 650,
                      "name": "change",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "8102:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 651,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8112:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8112:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 653,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "8124:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 655,
                            "indexExpression": {
                              "id": 654,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "8132:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8124:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ticketPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "8124:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 657,
                          "name": "_ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "8156:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8124:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8112:56:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8102:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "8102:66:7"
                }
              ]
            },
            "functionSelector": "b894ad33",
            "id": 663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "BuyTickets",
            "nameLocation": "7219:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "7238:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "7230:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7230:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "_ticketCount",
                  "nameLocation": "7256:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "7248:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7248:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7229:40:7"
            },
            "returnParameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7285:0:7"
            },
            "scope": 786,
            "src": "7210:965:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "8330:201:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 671,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "8348:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8357:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8348:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f206368616e676520746f20636f6c6c65637421",
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8360:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee",
                          "typeString": "literal_string \"There is no change to collect!\""
                        },
                        "value": "There is no change to collect!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee",
                          "typeString": "literal_string \"There is no change to collect!\""
                        }
                      ],
                      "id": 670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8340:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8340:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "8340:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8443:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 679,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8411:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8411:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8403:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 677,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8403:8:7",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8403:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8403:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 683,
                          "name": "change",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "8435:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8403:39:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8403:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "8403:43:7"
                },
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "_change",
                      "nameLocation": "8464:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 698,
                      "src": "8456:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8456:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "id": 690,
                    "name": "change",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116,
                    "src": "8474:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8456:24:7"
                },
                {
                  "expression": {
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 692,
                      "name": "change",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "8490:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8499:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8490:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "8490:10:7"
                },
                {
                  "expression": {
                    "id": 696,
                    "name": "_change",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 689,
                    "src": "8517:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 669,
                  "id": 697,
                  "nodeType": "Return",
                  "src": "8510:14:7"
                }
              ]
            },
            "functionSelector": "3803abef",
            "id": 699,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 666,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 665,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 833,
                  "src": "8303:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "8303:9:7"
              }
            ],
            "name": "CollectChange",
            "nameLocation": "8280:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8293:2:7"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "8322:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8322:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8321:9:7"
            },
            "scope": 786,
            "src": "8271:260:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "8657:719:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 705,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8675:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8675:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 707,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "8694:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 709,
                              "indexExpression": {
                                "id": 708,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "8702:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8694:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 710,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 88,
                            "src": "8694:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 711,
                            "name": "expirationPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8722:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8694:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8675:63:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726566756e6420706572696f6420686173206e6f7420656e64656420796574",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8740:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104fd6edc252450dbdbbf035e5ae245c2d019958a538db2d2358445af1bd495d",
                          "typeString": "literal_string \"The refund period has not ended yet\""
                        },
                        "value": "The refund period has not ended yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104fd6edc252450dbdbbf035e5ae245c2d019958a538db2d2358445af1bd495d",
                          "typeString": "literal_string \"The refund period has not ended yet\""
                        }
                      ],
                      "id": 704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8667:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8667:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "8667:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$72",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 718,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "8796:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 720,
                            "indexExpression": {
                              "id": 719,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "8804:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8796:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "8796:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 722,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "8823:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finished",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70,
                          "src": "8823:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "8796:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c652069732066696e6973686564",
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8845:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70e8571f93f096fdbd972b9f281289c7e97b56d57bf6df3a7362cacd0ebd8c9d",
                          "typeString": "literal_string \"The raffle is finished\""
                        },
                        "value": "The raffle is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70e8571f93f096fdbd972b9f281289c7e97b56d57bf6df3a7362cacd0ebd8c9d",
                          "typeString": "literal_string \"The raffle is finished\""
                        }
                      ],
                      "id": 717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8788:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8788:82:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "8788:82:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_RaffleState_$72",
                          "typeString": "enum CharityRaffle.RaffleState"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 729,
                              "name": "Raffles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "8888:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "id": 730,
                              "name": "raffleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "8896:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8888:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Raffle_$101_storage",
                              "typeString": "struct CharityRaffle.Raffle storage ref"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91,
                          "src": "8888:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 733,
                            "name": "RaffleState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "8915:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                              "typeString": "type(enum CharityRaffle.RaffleState)"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SelectingWinner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69,
                          "src": "8915:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RaffleState_$72",
                            "typeString": "enum CharityRaffle.RaffleState"
                          }
                        },
                        "src": "8888:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520726166666c652069732073656c656374696e6720612077696e6e65722e",
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8944:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5244b4c89bcdeb74c2906eea5cc8bb9fba7e5fbb42b20cbf704c9bd7ce0894d3",
                          "typeString": "literal_string \"The raffle is selecting a winner.\""
                        },
                        "value": "The raffle is selecting a winner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5244b4c89bcdeb74c2906eea5cc8bb9fba7e5fbb42b20cbf704c9bd7ce0894d3",
                          "typeString": "literal_string \"The raffle is selecting a winner.\""
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8880:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8880:100:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "8880:100:7"
                },
                {
                  "expression": {
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 739,
                          "name": "Raffles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "9037:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                            "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                          }
                        },
                        "id": 741,
                        "indexExpression": {
                          "id": 740,
                          "name": "raffleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "9045:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9037:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Raffle_$101_storage",
                          "typeString": "struct CharityRaffle.Raffle storage ref"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "9037:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 743,
                        "name": "RaffleState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "9063:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RaffleState_$72_$",
                          "typeString": "type(enum CharityRaffle.RaffleState)"
                        }
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Expired",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "9063:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RaffleState_$72",
                        "typeString": "enum CharityRaffle.RaffleState"
                      }
                    },
                    "src": "9037:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RaffleState_$72",
                      "typeString": "enum CharityRaffle.RaffleState"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "9037:45:7"
                },
                {
                  "assignments": [
                    748,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 748,
                      "mutability": "mutable",
                      "name": "transfered",
                      "nameLocation": "9142:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "9137:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9137:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 770,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9268:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9166:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9166:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9158:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9158:8:7",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9158:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9158:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 755,
                                "name": "Raffles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "9190:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                  "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                }
                              },
                              "id": 757,
                              "indexExpression": {
                                "id": 756,
                                "name": "raffleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "9198:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9190:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                "typeString": "struct CharityRaffle.Raffle storage ref"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ticketPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80,
                            "src": "9190:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 759,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "9222:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 761,
                                "indexExpression": {
                                  "id": 760,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "9230:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9222:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketBalances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 95,
                              "src": "9222:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 765,
                            "indexExpression": {
                              "expression": {
                                "id": 763,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9255:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9255:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9222:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9190:76:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "9158:109:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9158:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9136:135:7"
                },
                {
                  "condition": {
                    "id": 771,
                    "name": "transfered",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 748,
                    "src": "9285:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 783,
                  "nodeType": "IfStatement",
                  "src": "9281:89:7",
                  "trueBody": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "9297:73:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 772,
                                  "name": "Raffles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "9311:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$101_storage_$",
                                    "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"
                                  }
                                },
                                "id": 774,
                                "indexExpression": {
                                  "id": 773,
                                  "name": "raffleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "9319:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9311:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Raffle_$101_storage",
                                  "typeString": "struct CharityRaffle.Raffle storage ref"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ticketBalances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 95,
                              "src": "9311:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 778,
                            "indexExpression": {
                              "expression": {
                                "id": 776,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9344:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9344:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9311:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9358:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9311:48:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "9311:48:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e3aa85cb",
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "TicketRefund",
            "nameLocation": "8620:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "raffleId",
                  "nameLocation": "8641:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8633:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8633:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8632:18:7"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8657:0:7"
            },
            "scope": 786,
            "src": "8611:765:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 787,
        "src": "320:9058:7",
        "usedErrors": []
      }
    ],
    "src": "67:9311:7"
  },
  "bytecode": "60c060405260006009553480156200001657600080fd5b5060405162001c4038038062001c408339810160408190526200003991620000f1565b8383620000463362000084565b6001600160a01b0391821660a0528116608052600392909255600455600280546001600160a01b031916929091169190911790555060055562000145565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ec57600080fd5b919050565b600080600080600060a086880312156200010a57600080fd5b855194506200011c60208701620000d4565b93506200012c60408701620000d4565b6060870151608090970151959894975095949392505050565b60805160a051611ace62000172600039600081816107dd0152611437015260006114080152611ace6000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063b894ad331161006f578063b894ad331461035a578063cda327731461036d578063d1d3bde31461038d578063e3aa85cb146103a3578063ef124faf146103c3578063f2fde38b146103e357600080fd5b8063715018a6146102c65780638897cad3146102dd5780638da5cb5b146102f357806394985ddd14610325578063b198333c1461034557600080fd5b80632fec9240116100f25780632fec92401461021857806332dd45fb146102385780633803abef14610269578063533b4c561461027e57806357529e6c146102af57600080fd5b8063018896111461012f5780631d5ccd9b1461015857806321d7112e1461018e57806327028a84146101d55780632ee79ded14610202575b600080fd5b34801561013b57600080fd5b5061014560035481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b50610178610173366004611620565b610403565b60405161014f9a9998979695949392919061169c565b34801561019a57600080fd5b506101456101a9366004611745565b60008281526007602090815260408083206001600160a01b038516845260090190915290205492915050565b3480156101e157600080fd5b506101456101f0366004611620565b60086020526000908152604090205481565b34801561020e57600080fd5b5061014560095481565b34801561022457600080fd5b50610145610233366004611787565b6104ef565b34801561024457600080fd5b50610258610253366004611620565b610596565b60405161014f95949392919061184b565b34801561027557600080fd5b50610145610679565b34801561028a57600080fd5b5061029e610299366004611620565b610757565b60405161014f95949392919061188b565b3480156102bb57600080fd5b506006546101459081565b3480156102d257600080fd5b506102db61079c565b005b3480156102e957600080fd5b5061014560055481565b3480156102ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014f565b34801561033157600080fd5b506102db6103403660046118c2565b6107d2565b34801561035157600080fd5b50610145610858565b6102db6103683660046118c2565b610868565b34801561037957600080fd5b506102db610388366004611620565b610ae9565b34801561039957600080fd5b5061014560045481565b3480156103af57600080fd5b506102db6103be366004611620565b610e2c565b3480156103cf57600080fd5b5060025461030d906001600160a01b031681565b3480156103ef57600080fd5b506102db6103fe3660046118e4565b611049565b6007602052600090815260409020805460018201805491929161042590611906565b80601f016020809104026020016040519081016040528092919081815260200182805461045190611906565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546008890154600b90990154979895979496506001600160a01b03938416959390921693909260ff90811691168a565b60006104ff600680546001019055565b600061050a60065490565b600081815260076020908152604090912082815587519293509161053691600184019190890190611587565b5060006002820155600381018590556004810180546001600160a01b03191633179055426006820181905561056c908590611957565b600782015560088101805460ff1916905560050180546001600160a01b0319169055949350505050565b600081815260076020819052604082206004810154600582015460068301549383015460019093018054606096958695869586956001600160a01b0391821694911692919085906105e690611906565b80601f016020809104026020016040519081016040528092919081815260200182805461061290611906565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505094509450945094509450945091939590929450565b600080546001600160a01b031633146106ad5760405162461bcd60e51b81526004016106a49061196f565b60405180910390fd5b6000600954116106ff5760405162461bcd60e51b815260206004820152601e60248201527f5468657265206973206e6f206368616e676520746f20636f6c6c65637421000060448201526064016106a4565b600954604051339190600081818185875af1925050503d8060008114610741576040519150601f19603f3d011682016040523d82523d6000602084013e610746565b606091505b505060098054600090915591505090565b6000818152600760208190526040822060068101549181015460028201546003830154600190930180546060969586958695869592939092919085906105e690611906565b6000546001600160a01b031633146107c65760405162461bcd60e51b81526004016106a49061196f565b6107d060006110e4565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461084a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016106a4565b6108548282611134565b5050565b600061086360065490565b905090565b60008281526007602052604081206008015460ff16600381111561088e5761088e611686565b146108cd5760405162461bcd60e51b815260206004820152600f60248201526e2930b3333632903737ba1037b832b760891b60448201526064016106a4565b6000828152600760208190526040909120015442106109215760405162461bcd60e51b815260206004820152601060248201526f149859999b19481a5cc818db1bdcd95960821b60448201526064016106a4565b6000811161097d5760405162461bcd60e51b815260206004820152602360248201527f5469636b657420636f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b60648201526084016106a4565b60008281526007602052604090206003015461099a9082906119a4565b3410156109fe5760405162461bcd60e51b815260206004820152602c60248201527f5469636b65742070726963652069732067726561746572207468616e2074686560448201526b08185b5bdd5b9d081cd95b9d60a21b60648201526084016106a4565b60008281526007602052604081206002018054839290610a1f908490611957565b90915550506000828152600760209081526040808320338452600901909152902054610a775760008281526007602090815260408220600a01805460018101825590835291200180546001600160a01b031916331790555b600082815260076020908152604080832033845260090190915281208054839290610aa3908490611957565b9091555050600082815260076020526040902060030154610ac59082906119a4565b610acf90346119c3565b60096000828254610ae09190611957565b90915550505050565b6000818152600760205260409020600401546001600160a01b03163314610b645760405162461bcd60e51b815260206004820152602960248201527f4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074604482015268686520726166666c6560b81b60648201526084016106a4565b60008181526007602081905260409091200154421015610bc65760405162461bcd60e51b815260206004820152601d60248201527f54686520726166666c6520686173206e6f7420636c6f7365642079657400000060448201526064016106a4565b600554600082815260076020819052604090912001544291610be791611957565b11610c495760405162461bcd60e51b815260206004820152602c60248201527f54686520726166666c6520686173206578706972656420616e642063616e6e6f60448201526b1d0818994818db185a5b595960a21b60648201526084016106a4565b60008181526007602052604081206008015460ff166003811115610c6f57610c6f611686565b14610ccb5760405162461bcd60e51b815260206004820152602660248201527f54686520726166666c65206973206e6f742061766169626c6520666f7220636c60448201526561696d696e6760d01b60648201526084016106a4565b6003546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a91906119da565b1015610dae5760405162461bcd60e51b815260206004820152603c60248201527f54686520636f6e7472616374206e6565647320746f2062652070616964206c6960448201527f6e6b20746f6b656e20746f20636c61696d2074686520726166666c650000000060648201526084016106a4565b6000818152600760205260408120600801805460ff19166001179055600454600354610dda9190611404565b60008181526008602052604090819020849055519091507fe7e9d173875e49599c9dc06ea20fd1d8878525700b2711462f8379cccdc637eb90610e209083815260200190565b60405180910390a15050565b60055460008281526007602081905260409091200154610e4c9190611957565b421015610ea75760405162461bcd60e51b815260206004820152602360248201527f54686520726566756e6420706572696f6420686173206e6f7420656e646564206044820152621e595d60ea1b60648201526084016106a4565b600260008281526007602052604090206008015460ff166003811115610ecf57610ecf611686565b1415610f165760405162461bcd60e51b8152602060048201526016602482015275151a19481c9859999b19481a5cc8199a5b9a5cda195960521b60448201526064016106a4565b600160008281526007602052604090206008015460ff166003811115610f3e57610f3e611686565b1415610f965760405162461bcd60e51b815260206004820152602160248201527f54686520726166666c652069732073656c656374696e6720612077696e6e65726044820152601760f91b60648201526084016106a4565b600081815260076020818152604080842060088101805460ff1916600390811790915533808752600983018552928620548787529490935291909101549091610fde916119a4565b604051600081818185875af1925050503d806000811461101a576040519150601f19603f3d011682016040523d82523d6000602084013e61101f565b606091505b50509050801561085457506000908152600760209081526040808320338452600901909152812055565b6000546001600160a01b031633146110735760405162461bcd60e51b81526004016106a49061196f565b6001600160a01b0381166110d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a4565b6110e1816110e4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260086020526040902054600160008281526007602052604090206008015460ff16600381111561116b5761116b611686565b146111cf5760405162461bcd60e51b815260206004820152602e60248201527f54686520726166666c65206973206e6f7420696e207468652053656c6563746960448201526d6e6757696e6e657220737461746560901b60648201526084016106a4565b600081815260076020526040812060088101805460ff1916600290811790915501546111fb90846119f3565b6000838152600760205260408120600a015491925090815b81811015611310576000858152600760205260408120600a810180546009909201918391908590811061124857611248611a15565b60009182526020808320909101546001600160a01b03168352820192909252604001902054905084841180159061128757506112848185611957565b85105b156112f0576000868152600760205260409020600a018054839081106112af576112af611a15565b60009182526020808320909101548883526007909152604090912060050180546001600160a01b0319166001600160a01b0390921691909117905550611310565b6112fa8185611957565b935050808061130890611a2b565b915050611213565b506000848152600760205260409020600481015460028201546003909201546001600160a01b0390911691611344916119a4565b604051600081818185875af1925050503d8060008114611380576040519150601f19603f3d011682016040523d82523d6000602084013e611385565b606091505b5050600085815260076020908152604091829020600b8101805460ff19169415159490941790935560059092015481518781526001600160a01b039091169281019290925281018490527fb14375695e696ee7a5001ece25e2fcfb144242680d208452819016209ae26f679060600160405180910390a1505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611474929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016114a193929190611a46565b6020604051808303816000875af11580156114c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e49190611a76565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120938790529082905261153f91611957565b60008581526001602052604090205561157f8482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b82805461159390611906565b90600052602060002090601f0160209004810192826115b557600085556115fb565b82601f106115ce57805160ff19168380011785556115fb565b828001600101855582156115fb579182015b828111156115fb5782518255916020019190600101906115e0565b5061160792915061160b565b5090565b5b80821115611607576000815560010161160c565b60006020828403121561163257600080fd5b5035919050565b6000815180845260005b8181101561165f57602081850181015186830182015201611643565b81811115611671576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101408c83528060208401526116b68184018d611639565b604084018c9052606084018b90526001600160a01b038a81166080860152891660a085015260c0840188905260e084018790529150506004841061170a57634e487b7160e01b600052602160045260246000fd5b836101008301528215156101208301529b9a5050505050505050505050565b80356001600160a01b038116811461174057600080fd5b919050565b6000806040838503121561175857600080fd5b8235915061176860208401611729565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561179c57600080fd5b833567ffffffffffffffff808211156117b457600080fd5b818601915086601f8301126117c857600080fd5b8135818111156117da576117da611771565b604051601f8201601f19908116603f0116810190838211818310171561180257611802611771565b8160405282815289602084870101111561181b57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60a08152600061185e60a0830188611639565b6001600160a01b039687166020840152949095166040820152606081019290925260809091015292915050565b60a08152600061189e60a0830188611639565b90508560208301528460408301528360608301528260808301529695505050505050565b600080604083850312156118d557600080fd5b50508035926020909101359150565b6000602082840312156118f657600080fd5b6118ff82611729565b9392505050565b600181811c9082168061191a57607f821691505b6020821081141561193b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561196a5761196a611941565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156119be576119be611941565b500290565b6000828210156119d5576119d5611941565b500390565b6000602082840312156119ec57600080fd5b5051919050565b600082611a1057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611a3f57611a3f611941565b5060010190565b60018060a01b0384168152826020820152606060408201526000611a6d6060830184611639565b95945050505050565b600060208284031215611a8857600080fd5b815180151581146118ff57600080fdfea26469706673582212202f55d3d188ba450608633fa16204e81b29295236981cfe5570d469502aa756fa64736f6c634300080a0033",
  "bytecodeSha1": "6d9e4564f87e610d30c02d714fdd5f445a54ca1c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CharityRaffle",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "80": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "81": [
            9750,
            9778,
            true
          ]
        }
      },
      "5": {},
      "7": {
        "CharityRaffle.BuyTickets": {
          "64": [
            7303,
            7346,
            true
          ],
          "65": [
            7384,
            7427,
            true
          ],
          "66": [
            7466,
            7482,
            true
          ],
          "67": [
            7540,
            7597,
            true
          ]
        },
        "CharityRaffle.ClaimRaffle": {
          "68": [
            4807,
            4845,
            true
          ],
          "69": [
            4909,
            4948,
            true
          ],
          "70": [
            5000,
            5057,
            true
          ],
          "71": [
            5124,
            5162,
            true
          ],
          "72": [
            5223,
            5284,
            true
          ]
        },
        "CharityRaffle.CollectChange": {
          "63": [
            8348,
            8358,
            true
          ]
        },
        "CharityRaffle.TicketRefund": {
          "73": [
            8675,
            8738,
            true
          ],
          "74": [
            8796,
            8843,
            true
          ],
          "75": [
            8888,
            8942,
            true
          ],
          "76": [
            9285,
            9295,
            false
          ]
        },
        "CharityRaffle.fulfillRandomness": {
          "77": [
            5945,
            5999,
            true
          ],
          "78": [
            6563,
            6598,
            false
          ],
          "79": [
            6602,
            6646,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "48": [
            2378,
            2395
          ],
          "49": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "46": [
            1998,
            2071
          ],
          "47": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "16": [
            712,
            729
          ]
        }
      },
      "3": {
        "Counters.current": {
          "4": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "3": [
            1032,
            1051
          ]
        }
      },
      "4": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "22": [
            9742,
            9814
          ],
          "23": [
            9820,
            9860
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "58": [
            7889,
            7976
          ],
          "60": [
            8719,
            8758
          ],
          "61": [
            8764,
            8803
          ]
        }
      },
      "5": {
        "VRFRequestIDBase.makeRequestId": {
          "62": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "59": [
            980,
            1058
          ]
        }
      },
      "7": {
        "CharityRaffle.BuyTickets": {
          "25": [
            7295,
            7366
          ],
          "26": [
            7376,
            7448
          ],
          "27": [
            7458,
            7522
          ],
          "28": [
            7532,
            7646
          ],
          "29": [
            7656,
            7701
          ],
          "30": [
            7898,
            7945
          ],
          "31": [
            7965,
            8025
          ],
          "32": [
            8102,
            8168
          ]
        },
        "CharityRaffle.ClaimRaffle": {
          "33": [
            4799,
            4891
          ],
          "34": [
            4901,
            4982
          ],
          "35": [
            4992,
            5106
          ],
          "36": [
            5116,
            5205
          ],
          "37": [
            5215,
            5349
          ],
          "38": [
            5359,
            5407
          ],
          "39": [
            5579,
            5618
          ],
          "40": [
            5667,
            5700
          ]
        },
        "CharityRaffle.CollectChange": {
          "17": [
            8340,
            8393
          ],
          "18": [
            8403,
            8446
          ],
          "19": [
            8490,
            8500
          ]
        },
        "CharityRaffle.CreateRaffle": {
          "2": [
            3296,
            3319
          ],
          "5": [
            3421,
            3436
          ],
          "6": [
            3446,
            3471
          ],
          "7": [
            3481,
            3503
          ],
          "8": [
            3513,
            3546
          ],
          "9": [
            3556,
            3596
          ],
          "10": [
            3606,
            3640
          ],
          "11": [
            3650,
            3698
          ],
          "12": [
            3708,
            3739
          ],
          "13": [
            3749,
            3777
          ],
          "14": [
            3787,
            3797
          ]
        },
        "CharityRaffle.GetRaffleBalance": {
          "0": [
            4588,
            4629
          ]
        },
        "CharityRaffle.GetRaffleCount": {
          "24": [
            4708,
            4736
          ]
        },
        "CharityRaffle.GetRaffleInfo": {
          "15": [
            4046,
            4165
          ]
        },
        "CharityRaffle.GetRaffleTicketInfo": {
          "20": [
            4349,
            4473
          ]
        },
        "CharityRaffle.TicketRefund": {
          "41": [
            8667,
            8778
          ],
          "42": [
            8788,
            8870
          ],
          "43": [
            8880,
            8980
          ],
          "44": [
            9037,
            9082
          ],
          "45": [
            9311,
            9359
          ]
        },
        "CharityRaffle.fulfillRandomness": {
          "50": [
            5937,
            6050
          ],
          "51": [
            6118,
            6164
          ],
          "52": [
            6702,
            6771
          ],
          "53": [
            6789,
            6794
          ],
          "54": [
            6822,
            6846
          ],
          "55": [
            6441,
            6444
          ],
          "56": [
            6918,
            7068
          ],
          "57": [
            7078,
            7151
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "320:9058:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:22;;;;;;;;;;;;;;;;;;;160:25:8;;;148:2;133:18;456:22:7;;;;;;;;2863:41;;;;;;;;;;-1:-1:-1;2863:41:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;4486:150::-;;;;;;;;;;-1:-1:-1;4486:150:7;;;;;:::i;:::-;4561:15;4595:12;;;:7;:12;;;;;;;;-1:-1:-1;;;;;4595:34:7;;;;:27;;:34;;;;;;4486:150;;;;;2949:57;;;;;;;;;;-1:-1:-1;2949:57:7;;;;;:::i;:::-;;;;;;;;;;;;;;3128:25;;;;;;;;;;;;;;;;3160:644;;;;;;;;;;-1:-1:-1;3160:644:7;;;;;:::i;:::-;;:::i;3870:302::-;;;;;;;;;;-1:-1:-1;3870:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;8271:260::-;;;;;;;;;;;;;:::i;4178:302::-;;;;;;;;;;-1:-1:-1;4178:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2822:35::-;;;;;;;;;;-1:-1:-1;2822:35:7;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;561:31:7;;;;;;;;;;;;;;;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;5248:32:8;;;5230:51;;5218:2;5203:18;1036:85:0;5084:203:8;9640:225:4;;;;;;;;;;-1:-1:-1;9640:225:4;;;;;:::i;:::-;;:::i;4642:101:7:-;;;;;;;;;;;;;:::i;7210:965::-;;;;;;:::i;:::-;;:::i;4749:958::-;;;;;;;;;;-1:-1:-1;4749:958:7;;;;;:::i;:::-;;:::i;484:25::-;;;;;;;;;;;;;;;;8611:765;;;;;;;;;;-1:-1:-1;8611:765:7;;;;;:::i;:::-;;:::i;419:31::-;;;;;;;;;;-1:-1:-1;419:31:7;;;;-1:-1:-1;;;;;419:31:7;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2863:41:7:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2863:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2863:41:7;;;;;;;;;;;;;;;;;;:::o;3160:644::-;3269:16;3296:23;:11;1032:19:3;;1050:1;1032:19;;;945:123;3296:23:7;3329:11;3343:21;:11;918:14:3;;827:112;3343:21:7;3374;3398:12;;;:7;:12;;;;;;;;3421:15;;;3446:25;;3329:35;;-1:-1:-1;3398:12:7;3446:25;;:11;;;;:25;;;;;:::i;:::-;-1:-1:-1;3502:1:7;3481:18;;;:22;3513:18;;;:33;;;3556:18;;;:40;;-1:-1:-1;;;;;;3556:40:7;3585:10;3556:40;;;3625:15;3606:16;;;:34;;;3667:31;;3685:13;;3667:31;:::i;:::-;3650:14;;;:48;3708:12;;;:31;;-1:-1:-1;;3708:31:7;;;3749:13;;:28;;-1:-1:-1;;;;;;3749:28:7;;;3794:3;;-1:-1:-1;;;;3160:644:7:o;3870:302::-;3947:27;4054:12;;;:7;:12;;;;;;;4073:24;;;;4099:19;;;;4120:22;;;;4144:20;;;;4054:17;;;;4046:119;;3927:18;;3947:27;;;;;;;-1:-1:-1;;;;;4073:24:7;;;;4099:19;;;4120:22;4144:20;4054:17;;4046:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:302;;;;;;;:::o;8271:260::-;8322:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;8357:1:7::1;8348:6;;:10;8340:53;;;::::0;-1:-1:-1;;;8340:53:7;;7384:2:8;8340:53:7::1;::::0;::::1;7366:21:8::0;7423:2;7403:18;;;7396:30;7462:32;7442:18;;;7435:60;7512:18;;8340:53:7::1;7182:354:8::0;8340:53:7::1;8435:6;::::0;8403:43:::1;::::0;8411:10:::1;::::0;8435:6;8403:43:::1;::::0;;;8435:6;8411:10;8403:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;8474:6:7::1;::::0;;8456:15:::1;8490:10:::0;;;8474:6;-1:-1:-1;;8271:260:7;:::o;4178:302::-;4261:17;4357:12;;;:7;:12;;;;;;;4376:22;;;;4400:20;;;;4422:24;;;;4448;;;;4357:17;;;;4349:124;;4241:18;;4261:17;;;;;;;4376:22;;4400:20;;4422:24;4448;4357:17;;4349:124;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;9640:225:4:-;9750:10;-1:-1:-1;;;;;9764:14:4;9750:28;;9742:72;;;;-1:-1:-1;;;9742:72:4;;7953:2:8;9742:72:4;;;7935:21:8;7992:2;7972:18;;;7965:30;8031:33;8011:18;;;8004:61;8082:18;;9742:72:4;7751:355:8;9742:72:4;9820:40;9838:9;9849:10;9820:17;:40::i;:::-;9640:225;;:::o;4642:101:7:-;4689:7;4715:21;:11;918:14:3;;827:112;4715:21:7;4708:28;;4642:101;:::o;7210:965::-;7330:16;7303:17;;;:7;:17;;;;;:23;;;;;:43;;;;;;;;:::i;:::-;;7295:71;;;;-1:-1:-1;;;7295:71:7;;8313:2:8;7295:71:7;;;8295:21:8;8352:2;8332:18;;;8325:30;-1:-1:-1;;;8371:18:8;;;8364:45;8426:18;;7295:71:7;8111:339:8;7295:71:7;7402:17;;;;:7;:17;;;;;;;;:25;;7384:15;:43;7376:72;;;;-1:-1:-1;;;7376:72:7;;8657:2:8;7376:72:7;;;8639:21:8;8696:2;8676:18;;;8669:30;-1:-1:-1;;;8715:18:8;;;8708:46;8771:18;;7376:72:7;8455:340:8;7376:72:7;7481:1;7466:12;:16;7458:64;;;;-1:-1:-1;;;7458:64:7;;9002:2:8;7458:64:7;;;8984:21:8;9041:2;9021:18;;;9014:30;9080:34;9060:18;;;9053:62;-1:-1:-1;;;9131:18:8;;;9124:33;9174:19;;7458:64:7;8800:399:8;7458:64:7;7553:17;;;;:7;:17;;;;;:29;;;:44;;7585:12;;7553:44;:::i;:::-;7540:9;:57;;7532:114;;;;-1:-1:-1;;;7532:114:7;;9579:2:8;7532:114:7;;;9561:21:8;9618:2;9598:18;;;9591:30;9657:34;9637:18;;;9630:62;-1:-1:-1;;;9708:18:8;;;9701:42;9760:19;;7532:114:7;9377:408:8;7532:114:7;7656:17;;;;:7;:17;;;;;:29;;:45;;7689:12;;7656:17;:45;;7689:12;;7656:45;:::i;:::-;;;;-1:-1:-1;;7715:17:7;;;;:7;:17;;;;;;;;7748:10;7715:44;;:32;;:44;;;;;;7711:245;;7898:17;;;;:7;:17;;;;;;;:30;;:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7898:47:7;7934:10;7898:47;;;7711:245;7965:17;;;;:7;:17;;;;;;;;7998:10;7965:44;;:32;;:44;;;;;:60;;8013:12;;7965:17;:60;;8013:12;;7965:60;:::i;:::-;;;;-1:-1:-1;;8124:17:7;;;;:7;:17;;;;;:29;;;:44;;8156:12;;8124:44;:::i;:::-;8112:56;;:9;:56;:::i;:::-;8102:6;;:66;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;7210:965:7:o;4749:958::-;4821:12;;;;:7;:12;;;;;:24;;;-1:-1:-1;;;;;4821:24:7;4807:10;:38;4799:92;;;;-1:-1:-1;;;4799:92:7;;10122:2:8;4799:92:7;;;10104:21:8;10161:2;10141:18;;;10134:30;10200:34;10180:18;;;10173:62;-1:-1:-1;;;10251:18:8;;;10244:39;10300:19;;4799:92:7;9920:405:8;4799:92:7;4928:12;;;;:7;:12;;;;;;;;:20;;4909:15;:39;;4901:81;;;;-1:-1:-1;;;4901:81:7;;10532:2:8;4901:81:7;;;10514:21:8;10571:2;10551:18;;;10544:30;10610:31;10590:18;;;10583:59;10659:18;;4901:81:7;10330:353:8;4901:81:7;5023:16;;5000:12;;;;:7;:12;;;;;;;;:20;;5042:15;;5000:39;;;:::i;:::-;:57;4992:114;;;;-1:-1:-1;;;4992:114:7;;10890:2:8;4992:114:7;;;10872:21:8;10929:2;10909:18;;;10902:30;10968:34;10948:18;;;10941:62;-1:-1:-1;;;11019:18:8;;;11012:42;11071:19;;4992:114:7;10688:408:8;4992:114:7;5146:16;5124:12;;;:7;:12;;;;;:18;;;;;:38;;;;;;;;:::i;:::-;;5116:89;;;;-1:-1:-1;;;5116:89:7;;11303:2:8;5116:89:7;;;11285:21:8;11342:2;11322:18;;;11315:30;11381:34;11361:18;;;11354:62;-1:-1:-1;;;11432:18:8;;;11425:36;11478:19;;5116:89:7;11101:402:8;5116:89:7;5277:7;;5230:16;;5223:49;;-1:-1:-1;;;5223:49:7;;5266:4;5223:49;;;5230:51:8;-1:-1:-1;;;;;5230:16:7;;;;5223:34;;5203:18:8;;5223:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;5215:134;;;;-1:-1:-1;;;5215:134:7;;11899:2:8;5215:134:7;;;11881:21:8;11938:2;11918:18;;;11911:30;11977:34;11957:18;;;11950:62;12048:30;12028:18;;;12021:58;12096:19;;5215:134:7;11697:424:8;5215:134:7;5359:12;;;;:7;:12;;;;;:18;;:48;;-1:-1:-1;;5359:48:7;5380:27;5359:48;;;5504:10;;5516:7;;5486:38;;5504:10;5486:17;:38::i;:::-;5579:33;;;;:22;:33;;;;;;;:39;;;5672:28;5466:58;;-1:-1:-1;5672:28:7;;;;5466:58;160:25:8;;148:2;133:18;;14:177;5672:28:7;;;;;;;;4789:918;4749:958;:::o;8611:765::-;8722:16;;8694:17;;;;:7;:17;;;;;;;;:25;;:44;;8722:16;8694:44;:::i;:::-;8675:15;:63;;8667:111;;;;-1:-1:-1;;;8667:111:7;;12328:2:8;8667:111:7;;;12310:21:8;12367:2;12347:18;;;12340:30;12406:34;12386:18;;;12379:62;-1:-1:-1;;;12457:18:8;;;12450:33;12500:19;;8667:111:7;12126:399:8;8667:111:7;8823:20;8796:17;;;;:7;:17;;;;;:23;;;;;:47;;;;;;;;:::i;:::-;;;8788:82;;;;-1:-1:-1;;;8788:82:7;;12732:2:8;8788:82:7;;;12714:21:8;12771:2;12751:18;;;12744:30;-1:-1:-1;;;12790:18:8;;;12783:52;12852:18;;8788:82:7;12530:346:8;8788:82:7;8915:27;8888:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;;8880:100;;;;-1:-1:-1;;;8880:100:7;;13083:2:8;8880:100:7;;;13065:21:8;13122:2;13102:18;;;13095:30;13161:34;13141:18;;;13134:62;-1:-1:-1;;;13212:18:8;;;13205:31;13253:19;;8880:100:7;12881:397:8;8880:100:7;9037:17;;;;:7;:17;;;;;;;;:23;;;:45;;-1:-1:-1;;9037:45:7;9063:19;9037:45;;;;;;9166:10;9222:44;;;:32;;;:44;;;;;;9190:17;;;;;;;:29;;;;;9166:10;;9190:76;;;:::i;:::-;9158:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9136:135;;;9285:10;9281:89;;;-1:-1:-1;9358:1:7;9311:17;;;:7;:17;;;;;;;;9344:10;9311:44;;:32;;:44;;;;;:48;8611:765::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;13485:2:8;1998:73:0::1;::::0;::::1;13467:21:8::0;13524:2;13504:18;;;13497:30;13563:34;13543:18;;;13536:62;-1:-1:-1;;;13614:18:8;;;13607:36;13660:19;;1998:73:0::1;13283:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5778:1380:7:-;5874:16;5893:34;;;:22;:34;;;;;;5972:27;5945:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;5937:113;;;;-1:-1:-1;;;5937:113:7;;13892:2:8;5937:113:7;;;13874:21:8;13931:2;13911:18;;;13904:30;13970:34;13950:18;;;13943:62;-1:-1:-1;;;14021:18:8;;;14014:44;14075:19;;5937:113:7;13690:410:8;5937:113:7;6118:17;;;;:7;:17;;;;;:23;;;:46;;-1:-1:-1;;6118:46:7;6144:20;6118:46;;;;;;6217:29;;6203:43;;:11;:43;:::i;:::-;6320:21;6367:17;;;:7;:17;;;;;:30;;:37;6174:72;;-1:-1:-1;6320:21:7;;6414:443;6438:1;6434;:5;6414:443;;;6460:15;6478:17;;;:7;:17;;;;;6511:30;;;:33;;6478:32;;;;;6460:15;;6511:30;6542:1;;6511:33;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6511:33:7;6478:67;;;;;;;;;;;;;;-1:-1:-1;6563:35:7;;;;;;:83;;-1:-1:-1;6623:23:7;6639:7;6623:13;:23;:::i;:::-;6602:18;:44;6563:83;6559:250;;;6737:17;;;;:7;:17;;;;;:30;;:33;;6768:1;;6737:33;;;;;;:::i;:::-;;;;;;;;;;;;;6702:17;;;:7;:17;;;;;;;:24;;:69;;-1:-1:-1;;;;;;6702:69:7;-1:-1:-1;;;;;6737:33:7;;;6702:69;;;;;;-1:-1:-1;6789:5:7;;6559:250;6822:24;6839:7;6822:24;;:::i;:::-;;;6446:411;6441:3;;;;;:::i;:::-;;;;6414:443;;;-1:-1:-1;6959:17:7;;;;:7;:17;;;;;:29;;;;7034;;;;7002;;;;;-1:-1:-1;;;;;6959:29:7;;;;7002:61;;;:::i;:::-;6951:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6919:17:7;;;;:7;:17;;;;;;;;;:26;;;6918:150;;-1:-1:-1;;6918:150:7;;;;;;;;;;;7106:24;;;;;7083:68;;15157:25:8;;;-1:-1:-1;;;;;7106:24:7;;;15198:18:8;;;15191:60;;;;15267:18;;15260:34;;;7083:68:7;;15145:2:8;15130:18;7083:68:7;;;;;;;5864:1294;;;;5778:1380;;:::o;7753:1055:4:-;7857:17;7889:4;-1:-1:-1;;;;;7889:20:4;;7910:14;7926:4;7943:8;6610:1;7932:43;;;;;;;;15479:25:8;;;15535:2;15520:18;;15513:34;15467:2;15452:18;;15305:248;7932:43:4;;;;;;;;;;;;;7889:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8207:15:4;8291:16;;;:6;:16;;;;;;;;;1005:51:5;;;;;16462:25:8;;;16503:18;;;16496:34;;;8284:4:4;16546:18:8;;;16539:60;16615:18;;;;16608:34;;;1005:51:5;;;;;;;;;;16434:19:8;;;;1005:51:5;;;995:62;;;;;;;;;8738:16:4;;;;;;;;:20;;;:::i;:::-;8719:16;;;;:6;:16;;;;;:39;8771:32;8726:8;8795:7;1600:41:5;;;;;;;16810:19:8;;;;16845:12;;;16838:28;;;;1600:41:5;;;;;;;;;16882:12:8;;;;1600:41:5;;1590:52;;;;;;1443:204;8771:32:4;8764:39;7753:1055;-1:-1:-1;;;;7753:1055:4:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:8;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:8;;196:180;-1:-1:-1;196:180:8:o;381:472::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;703:6;700:1;697:13;694:87;;;769:1;762:4;753:6;748:3;744:16;740:27;733:38;694:87;-1:-1:-1;835:2:8;814:15;-1:-1:-1;;810:29:8;801:39;;;;842:4;797:50;;381:472;-1:-1:-1;;381:472:8:o;858:127::-;919:10;914:3;910:20;907:1;900:31;950:4;947:1;940:15;974:4;971:1;964:15;990:1150;1392:4;1421:3;1451:6;1440:9;1433:25;1494:2;1489;1478:9;1474:18;1467:30;1514:45;1555:2;1544:9;1540:18;1532:6;1514:45;:::i;:::-;1590:2;1575:18;;1568:34;;;1633:2;1618:18;;1611:34;;;-1:-1:-1;;;;;1720:15:8;;;1714:3;1699:19;;1692:44;1773:15;;1672:3;1752:19;;1745:44;1820:3;1805:19;;1798:35;;;1864:3;1849:19;;1842:35;;;1506:53;-1:-1:-1;;1907:1:8;1896:13;;1886:144;;1952:10;1947:3;1943:20;1940:1;1933:31;1987:4;1984:1;1977:15;2015:4;2012:1;2005:15;1886:144;2067:6;2061:3;2050:9;2046:19;2039:35;2125:6;2118:14;2111:22;2105:3;2094:9;2090:19;2083:51;990:1150;;;;;;;;;;;;;:::o;2145:173::-;2213:20;;-1:-1:-1;;;;;2262:31:8;;2252:42;;2242:70;;2308:1;2305;2298:12;2242:70;2145:173;;;:::o;2323:254::-;2391:6;2399;2452:2;2440:9;2431:7;2427:23;2423:32;2420:52;;;2468:1;2465;2458:12;2420:52;2504:9;2491:23;2481:33;;2533:38;2567:2;2556:9;2552:18;2533:38;:::i;:::-;2523:48;;2323:254;;;;;:::o;2767:127::-;2828:10;2823:3;2819:20;2816:1;2809:31;2859:4;2856:1;2849:15;2883:4;2880:1;2873:15;2899:1068;2986:6;2994;3002;3055:2;3043:9;3034:7;3030:23;3026:32;3023:52;;;3071:1;3068;3061:12;3023:52;3111:9;3098:23;3140:18;3181:2;3173:6;3170:14;3167:34;;;3197:1;3194;3187:12;3167:34;3235:6;3224:9;3220:22;3210:32;;3280:7;3273:4;3269:2;3265:13;3261:27;3251:55;;3302:1;3299;3292:12;3251:55;3338:2;3325:16;3360:2;3356;3353:10;3350:36;;;3366:18;;:::i;:::-;3441:2;3435:9;3409:2;3495:13;;-1:-1:-1;;3491:22:8;;;3515:2;3487:31;3483:40;3471:53;;;3539:18;;;3559:22;;;3536:46;3533:72;;;3585:18;;:::i;:::-;3625:10;3621:2;3614:22;3660:2;3652:6;3645:18;3702:7;3695:4;3690:2;3686;3682:11;3678:22;3675:35;3672:55;;;3723:1;3720;3713:12;3672:55;3783:2;3776:4;3772:2;3768:13;3761:4;3753:6;3749:17;3736:50;3830:1;3823:4;3818:2;3810:6;3806:15;3802:26;3795:37;3851:6;3841:16;;;;;;;3904:4;3893:9;3889:20;3876:34;3866:44;;3957:2;3946:9;3942:18;3929:32;3919:42;;2899:1068;;;;;:::o;3972:595::-;4265:3;4254:9;4247:22;4228:4;4286:46;4327:3;4316:9;4312:19;4304:6;4286:46;:::i;:::-;-1:-1:-1;;;;;4406:15:8;;;4401:2;4386:18;;4379:43;4458:15;;;;4453:2;4438:18;;4431:43;4505:2;4490:18;;4483:34;;;;4548:3;4533:19;;;4526:35;4278:54;3972:595;-1:-1:-1;;3972:595:8:o;4572:507::-;4833:3;4822:9;4815:22;4796:4;4854:46;4895:3;4884:9;4880:19;4872:6;4854:46;:::i;:::-;4846:54;;4936:6;4931:2;4920:9;4916:18;4909:34;4979:6;4974:2;4963:9;4959:18;4952:34;5022:6;5017:2;5006:9;5002:18;4995:34;5066:6;5060:3;5049:9;5045:19;5038:35;4572:507;;;;;;;;:::o;5292:248::-;5360:6;5368;5421:2;5409:9;5400:7;5396:23;5392:32;5389:52;;;5437:1;5434;5427:12;5389:52;-1:-1:-1;;5460:23:8;;;5530:2;5515:18;;;5502:32;;-1:-1:-1;5292:248:8:o;5980:186::-;6039:6;6092:2;6080:9;6071:7;6067:23;6063:32;6060:52;;;6108:1;6105;6098:12;6060:52;6131:29;6150:9;6131:29;:::i;:::-;6121:39;5980:186;-1:-1:-1;;;5980:186:8:o;6171:380::-;6250:1;6246:12;;;;6293;;;6314:61;;6368:4;6360:6;6356:17;6346:27;;6314:61;6421:2;6413:6;6410:14;6390:18;6387:38;6384:161;;;6467:10;6462:3;6458:20;6455:1;6448:31;6502:4;6499:1;6492:15;6530:4;6527:1;6520:15;6384:161;;6171:380;;;:::o;6556:127::-;6617:10;6612:3;6608:20;6605:1;6598:31;6648:4;6645:1;6638:15;6672:4;6669:1;6662:15;6688:128;6728:3;6759:1;6755:6;6752:1;6749:13;6746:39;;;6765:18;;:::i;:::-;-1:-1:-1;6801:9:8;;6688:128::o;6821:356::-;7023:2;7005:21;;;7042:18;;;7035:30;7101:34;7096:2;7081:18;;7074:62;7168:2;7153:18;;6821:356::o;9204:168::-;9244:7;9310:1;9306;9302:6;9298:14;9295:1;9292:21;9287:1;9280:9;9273:17;9269:45;9266:71;;;9317:18;;:::i;:::-;-1:-1:-1;9357:9:8;;9204:168::o;9790:125::-;9830:4;9858:1;9855;9852:8;9849:34;;;9863:18;;:::i;:::-;-1:-1:-1;9900:9:8;;9790:125::o;11508:184::-;11578:6;11631:2;11619:9;11610:7;11606:23;11602:32;11599:52;;;11647:1;11644;11637:12;11599:52;-1:-1:-1;11670:16:8;;11508:184;-1:-1:-1;11508:184:8:o;14453:209::-;14485:1;14511;14501:132;;14555:10;14550:3;14546:20;14543:1;14536:31;14590:4;14587:1;14580:15;14618:4;14615:1;14608:15;14501:132;-1:-1:-1;14647:9:8;;14453:209::o;14667:127::-;14728:10;14723:3;14719:20;14716:1;14709:31;14759:4;14756:1;14749:15;14783:4;14780:1;14773:15;14799:135;14838:3;-1:-1:-1;;14859:17:8;;14856:43;;;14879:18;;:::i;:::-;-1:-1:-1;14926:1:8;14915:13;;14799:135::o;15558:386::-;15790:1;15786;15781:3;15777:11;15773:19;15765:6;15761:32;15750:9;15743:51;15830:6;15825:2;15814:9;15810:18;15803:34;15873:2;15868;15857:9;15853:18;15846:30;15724:4;15893:45;15934:2;15923:9;15919:18;15911:6;15893:45;:::i;:::-;15885:53;15558:386;-1:-1:-1;;;;;15558:386:8:o;15949:277::-;16016:6;16069:2;16057:9;16048:7;16044:23;16040:32;16037:52;;;16085:1;16082;16075:12;16037:52;16117:9;16111:16;16170:5;16163:13;16156:21;16149:5;16146:32;16136:60;;16192:1;16189;16182:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    320,
    9378
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB894AD33 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB894AD33 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xCDA32773 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD1D3BDE3 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xE3AA85CB EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xEF124FAF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x8897CAD3 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xB198333C EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FEC9240 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2FEC9240 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x32DD45FB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x3803ABEF EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x533B4C56 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x57529E6C EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1889611 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1D5CCD9B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x21D7112E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x27028A84 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x2EE79DED EQ PUSH2 0x202 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x679 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x145 SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0xE2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x30D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x425 SWAP1 PUSH2 0x1906 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x1906 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x473 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x481 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0xB SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND DUP11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50A PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 DUP2 SSTORE DUP8 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x536 SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1587 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0x56C SWAP1 DUP6 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP2 AND SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x5E6 SWAP1 PUSH2 0x1906 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x612 SWAP1 PUSH2 0x1906 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x634 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x642 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD GT PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x746 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x5E6 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x7D0 PUSH1 0x0 PUSH2 0x10E4 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x854 DUP3 DUP3 PUSH2 0x1134 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88E PUSH2 0x1686 JUMP JUMPDEST EQ PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2930B3333632903737BA1037B832B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149859999B19481A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420636F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x99A SWAP1 DUP3 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65742070726963652069732067726561746572207468616E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x8185B5BDD5B9D081CD95B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA1F SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xA77 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xAC5 SWAP1 DUP3 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH2 0xACF SWAP1 CALLVALUE PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x686520726166666C65 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0xBE7 SWAP2 PUSH2 0x1957 JUMP JUMPDEST GT PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206578706972656420616E642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D0818994818DB185A5B5959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC6F JUMPI PUSH2 0xC6F PUSH2 0x1686 JUMP JUMPDEST EQ PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F742061766169626C6520666F7220636C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x61696D696E67 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST LT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xDDA SWAP2 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB SWAP1 PUSH2 0xE20 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726566756E6420706572696F6420686173206E6F7420656E64656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECF PUSH2 0x1686 JUMP JUMPDEST EQ ISZERO PUSH2 0xF16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A19481C9859999B19481A5CC8199A5B9A5CDA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF3E JUMPI PUSH2 0xF3E PUSH2 0x1686 JUMP JUMPDEST EQ ISZERO PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C652069732073656C656374696E6720612077696E6E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE CALLER DUP1 DUP8 MSTORE PUSH1 0x9 DUP4 ADD DUP6 MSTORE SWAP3 DUP7 KECCAK256 SLOAD DUP8 DUP8 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0xFDE SWAP2 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x101F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x854 JUMPI POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1073 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A4 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x10E1 DUP2 PUSH2 0x10E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x116B JUMPI PUSH2 0x116B PUSH2 0x1686 JUMP JUMPDEST EQ PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F7420696E207468652053656C65637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6757696E6E6572207374617465 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADD SLOAD PUSH2 0x11FB SWAP1 DUP5 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0x9 SWAP1 SWAP3 ADD SWAP2 DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1248 JUMPI PUSH2 0x1248 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP DUP5 DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1287 JUMPI POP PUSH2 0x1284 DUP2 DUP6 PUSH2 0x1957 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12AF JUMPI PUSH2 0x12AF PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP9 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x12FA DUP2 DUP6 PUSH2 0x1957 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x1308 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1213 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x1344 SWAP2 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xB DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD DUP2 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB14375695E696EE7A5001ECE25E2FCFB144242680D208452819016209AE26F67 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1474 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E4 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x153F SWAP2 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x157F DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x1906 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x15FB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x15CE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x15FB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x15FB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15FB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x15E0 JUMP JUMPDEST POP PUSH2 0x1607 SWAP3 SWAP2 POP PUSH2 0x160B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1607 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x165F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1643 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1671 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16B6 DUP2 DUP5 ADD DUP14 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE DUP10 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 POP POP PUSH1 0x4 DUP5 LT PUSH2 0x170A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1768 PUSH1 0x20 DUP5 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x17DA JUMPI PUSH2 0x17DA PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1802 PUSH2 0x1771 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x185E PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x189E PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1639 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18FF DUP3 PUSH2 0x1729 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x191A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x193B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x196A JUMPI PUSH2 0x196A PUSH2 0x1941 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x19BE JUMPI PUSH2 0x19BE PUSH2 0x1941 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19D5 JUMPI PUSH2 0x19D5 PUSH2 0x1941 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1A3F JUMPI PUSH2 0x1A3F PUSH2 0x1941 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A6D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1639 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SSTORE 0xD3 0xD1 DUP9 0xBA GASLIMIT MOD ADDMOD PUSH4 0x3FA16204 0xE8 SHL 0x29 0x29 MSTORE CALLDATASIZE SWAP9 SHR INVALID SSTORE PUSH17 0xD469502AA756FA64736F6C634300080A00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12A"
    },
    "12": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "GT",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB894AD33"
    },
    "36": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "GT",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB894AD33"
    },
    "47": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35A"
    },
    "51": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xCDA32773"
    },
    "58": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36D"
    },
    "62": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD1D3BDE3"
    },
    "69": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38D"
    },
    "73": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE3AA85CB"
    },
    "80": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A3"
    },
    "84": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "86": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xEF124FAF"
    },
    "91": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "92": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C3"
    },
    "95": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "96": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "97": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E3"
    },
    "106": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "107": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "REVERT",
      "path": "7"
    },
    "111": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "118": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "122": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8897CAD3"
    },
    "129": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DD"
    },
    "133": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "134": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "135": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "140": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F3"
    },
    "144": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "145": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "146": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "151": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x325"
    },
    "155": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "156": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "157": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB198333C"
    },
    "162": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x345"
    },
    "166": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "167": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "REVERT",
      "path": "7"
    },
    "171": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FEC9240"
    },
    "178": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "GT",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FEC9240"
    },
    "189": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "190": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x218"
    },
    "193": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "194": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "195": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x32DD45FB"
    },
    "200": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "201": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "204": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "205": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "206": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3803ABEF"
    },
    "211": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x269"
    },
    "215": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "216": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "217": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x533B4C56"
    },
    "222": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27E"
    },
    "226": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "227": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "228": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x57529E6C"
    },
    "233": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AF"
    },
    "237": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "238": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "REVERT",
      "path": "7"
    },
    "242": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "243": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "244": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1889611"
    },
    "249": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "250": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F"
    },
    "253": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "254": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "255": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1D5CCD9B"
    },
    "260": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "261": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x158"
    },
    "264": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "265": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "266": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x21D7112E"
    },
    "271": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18E"
    },
    "275": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "276": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "277": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x27028A84"
    },
    "282": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D5"
    },
    "286": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "287": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "288": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2EE79DED"
    },
    "293": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "EQ",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x202"
    },
    "297": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "298": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "299": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "301": {
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "DUP1",
      "path": "7"
    },
    "302": {
      "first_revert": true,
      "fn": null,
      "offset": [
        320,
        9378
      ],
      "op": "REVERT",
      "path": "7"
    },
    "303": {
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "304": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "306": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "307": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13B"
    },
    "310": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "311": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "314": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "REVERT",
      "path": "7"
    },
    "315": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "POP",
      "path": "7"
    },
    "317": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "320": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "322": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "323": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP2",
      "path": "7"
    },
    "324": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMP",
      "path": "7"
    },
    "325": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "326": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "328": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "DUP2"
    },
    "331": {
      "op": "MSTORE"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "334": {
      "op": "ADD"
    },
    "335": {
      "offset": [
        456,
        478
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "336": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "338": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "339": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "340": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "341": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SUB",
      "path": "7"
    },
    "342": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "343": {
      "fn": null,
      "offset": [
        456,
        478
      ],
      "op": "RETURN",
      "path": "7"
    },
    "344": {
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "345": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "346": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "347": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "348": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x164"
    },
    "351": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "352": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "355": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "REVERT",
      "path": "7"
    },
    "356": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178"
    },
    "361": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x173"
    },
    "364": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "365": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "367": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1620"
    },
    "370": {
      "fn": null,
      "jump": "i",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "371": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "372": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x403"
    },
    "375": {
      "fn": null,
      "jump": "i",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "376": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "377": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "379": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "380": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "383": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP11",
      "path": "7"
    },
    "384": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "385": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "386": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "387": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "388": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "389": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "390": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "391": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "392": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "393": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "394": {
      "fn": null,
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x169C"
    },
    "397": {
      "fn": null,
      "jump": "i",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "398": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "399": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "400": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "DUP1",
      "path": "7"
    },
    "401": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "402": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A"
    },
    "405": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "406": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "408": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "DUP1",
      "path": "7"
    },
    "409": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "REVERT",
      "path": "7"
    },
    "410": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "415": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A9"
    },
    "418": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "419": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "421": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1745"
    },
    "424": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "jump": "i",
      "offset": [
        4486,
        4636
      ],
      "op": "JUMP",
      "path": "7"
    },
    "425": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "426": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4561,
        4576
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "428": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 0
    },
    "429": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP2",
      "path": "7"
    },
    "430": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "431": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "433": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "435": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "436": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP2",
      "path": "7"
    },
    "437": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "438": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "440": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP1",
      "path": "7"
    },
    "441": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP4",
      "path": "7"
    },
    "442": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4607
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "DUP6",
      "path": "7"
    },
    "452": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "AND",
      "path": "7"
    },
    "453": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "DUP5",
      "path": "7"
    },
    "454": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "455": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4622
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "457": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4622
      ],
      "op": "ADD",
      "path": "7"
    },
    "458": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "459": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "460": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "461": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "462": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "463": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4595,
        4629
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "464": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "465": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "466": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "POP",
      "path": "7"
    },
    "467": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "POP",
      "path": "7"
    },
    "468": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        4486,
        4636
      ],
      "op": "JUMP",
      "path": "7"
    },
    "469": {
      "offset": [
        2949,
        3006
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "470": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "471": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "DUP1",
      "path": "7"
    },
    "472": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "473": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E1"
    },
    "476": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "477": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "479": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "DUP1",
      "path": "7"
    },
    "480": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "REVERT",
      "path": "7"
    },
    "481": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "486": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F0"
    },
    "489": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "490": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "492": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1620"
    },
    "495": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "jump": "i",
      "offset": [
        2949,
        3006
      ],
      "op": "JUMP",
      "path": "7"
    },
    "496": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "497": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "499": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "501": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "502": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "504": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "505": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "DUP2",
      "path": "7"
    },
    "506": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "507": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "509": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "510": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "511": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "512": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "DUP2",
      "path": "7"
    },
    "513": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        2949,
        3006
      ],
      "op": "JUMP",
      "path": "7"
    },
    "514": {
      "offset": [
        3128,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "515": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "516": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "517": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "518": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20E"
    },
    "521": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "522": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "524": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "DUP1",
      "path": "7"
    },
    "525": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "REVERT",
      "path": "7"
    },
    "526": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "527": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "POP",
      "path": "7"
    },
    "528": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "531": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "533": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "534": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "DUP2",
      "path": "7"
    },
    "535": {
      "fn": "CharityRaffle.GetRaffleBalance",
      "offset": [
        3128,
        3153
      ],
      "op": "JUMP",
      "path": "7"
    },
    "536": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "537": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "538": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "DUP1",
      "path": "7"
    },
    "539": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "540": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x224"
    },
    "543": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "544": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "546": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "DUP1",
      "path": "7"
    },
    "547": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "REVERT",
      "path": "7"
    },
    "548": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "553": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x233"
    },
    "556": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "557": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "559": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1787"
    },
    "562": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMP",
      "path": "7"
    },
    "563": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "564": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4EF"
    },
    "567": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMP",
      "path": "7"
    },
    "568": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "569": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "570": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "DUP1",
      "path": "7"
    },
    "571": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "572": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "575": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "576": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "578": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "DUP1",
      "path": "7"
    },
    "579": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "REVERT",
      "path": "7"
    },
    "580": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x258"
    },
    "585": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x253"
    },
    "588": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "589": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "591": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1620"
    },
    "594": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "595": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "596": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x596"
    },
    "599": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "600": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "601": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "603": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "604": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "607": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "608": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "609": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "610": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "611": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "612": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "613": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x184B"
    },
    "616": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "617": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "618": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "619": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "DUP1",
      "path": "7"
    },
    "620": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "621": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x275"
    },
    "624": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "625": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "627": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "DUP1",
      "path": "7"
    },
    "628": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "REVERT",
      "path": "7"
    },
    "629": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "630": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "POP",
      "path": "7"
    },
    "631": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "634": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x679"
    },
    "637": {
      "fn": "CharityRaffle.CollectChange",
      "jump": "i",
      "offset": [
        8271,
        8531
      ],
      "op": "JUMP",
      "path": "7"
    },
    "638": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "639": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "640": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "DUP1",
      "path": "7"
    },
    "641": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "642": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28A"
    },
    "645": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "646": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "648": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "DUP1",
      "path": "7"
    },
    "649": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "REVERT",
      "path": "7"
    },
    "650": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29E"
    },
    "655": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x299"
    },
    "658": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "659": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "661": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1620"
    },
    "664": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMP",
      "path": "7"
    },
    "665": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "666": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x757"
    },
    "669": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMP",
      "path": "7"
    },
    "670": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "671": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "673": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "674": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "677": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "678": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "679": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "680": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "681": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "682": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "683": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x188B"
    },
    "686": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMP",
      "path": "7"
    },
    "687": {
      "offset": [
        2822,
        2857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "688": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "689": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "DUP1",
      "path": "7"
    },
    "690": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "691": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BB"
    },
    "694": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "695": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "697": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "DUP1",
      "path": "7"
    },
    "698": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "REVERT",
      "path": "7"
    },
    "699": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "700": {
      "op": "POP"
    },
    "701": {
      "offset": [
        2822,
        2857
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "703": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "704": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "707": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "708": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "DUP2",
      "path": "7"
    },
    "709": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        2822,
        2857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2"
    },
    "717": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "723": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB"
    },
    "727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79C"
    },
    "730": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "732": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "733": {
      "offset": [
        561,
        592
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "DUP1",
      "path": "7"
    },
    "736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E9"
    },
    "740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "DUP1",
      "path": "7"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "REVERT",
      "path": "7"
    },
    "745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "POP",
      "path": "7"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "750": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "DUP2",
      "path": "7"
    },
    "754": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        561,
        592
      ],
      "op": "JUMP",
      "path": "7"
    },
    "755": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "756": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "757": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "758": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "759": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "762": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "763": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "765": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "766": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "767": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "771": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "781": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "782": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "784": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "791": {
      "op": "SHL"
    },
    "792": {
      "op": "SUB"
    },
    "793": {
      "op": "SWAP1"
    },
    "794": {
      "op": "SWAP2"
    },
    "795": {
      "op": "AND"
    },
    "796": {
      "op": "DUP2"
    },
    "797": {
      "op": "MSTORE"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "804": {
      "op": "JUMP"
    },
    "805": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "806": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "807": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "808": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "809": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x331"
    },
    "812": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "813": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "815": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "816": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "REVERT",
      "path": "4"
    },
    "817": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "818": {
      "op": "POP"
    },
    "819": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DB"
    },
    "822": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x340"
    },
    "825": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "826": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "828": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C2"
    },
    "831": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "832": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "833": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D2"
    },
    "836": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "837": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "838": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "839": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "DUP1",
      "path": "7"
    },
    "840": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "841": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x351"
    },
    "844": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "845": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "847": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "DUP1",
      "path": "7"
    },
    "848": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "REVERT",
      "path": "7"
    },
    "849": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "850": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "POP",
      "path": "7"
    },
    "851": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "854": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x858"
    },
    "857": {
      "fn": "CharityRaffle.GetRaffleCount",
      "jump": "i",
      "offset": [
        4642,
        4743
      ],
      "op": "JUMP",
      "path": "7"
    },
    "858": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "859": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DB"
    },
    "862": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x368"
    },
    "865": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "866": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "868": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18C2"
    },
    "871": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7210,
        8175
      ],
      "op": "JUMP",
      "path": "7"
    },
    "872": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "873": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x868"
    },
    "876": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7210,
        8175
      ],
      "op": "JUMP",
      "path": "7"
    },
    "877": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "878": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "879": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "DUP1",
      "path": "7"
    },
    "880": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "881": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x379"
    },
    "884": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "885": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "887": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "DUP1",
      "path": "7"
    },
    "888": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "REVERT",
      "path": "7"
    },
    "889": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DB"
    },
    "894": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x388"
    },
    "897": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "898": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "900": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1620"
    },
    "903": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMP",
      "path": "7"
    },
    "904": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "905": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE9"
    },
    "908": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMP",
      "path": "7"
    },
    "909": {
      "offset": [
        484,
        509
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "910": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "911": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "DUP1",
      "path": "7"
    },
    "912": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "913": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x399"
    },
    "916": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "917": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "919": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "DUP1",
      "path": "7"
    },
    "920": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "REVERT",
      "path": "7"
    },
    "921": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "922": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "POP",
      "path": "7"
    },
    "923": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x145"
    },
    "926": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "928": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "929": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "DUP2",
      "path": "7"
    },
    "930": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        484,
        509
      ],
      "op": "JUMP",
      "path": "7"
    },
    "931": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "932": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "933": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "DUP1",
      "path": "7"
    },
    "934": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "935": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AF"
    },
    "938": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "939": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "941": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "DUP1",
      "path": "7"
    },
    "942": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "REVERT",
      "path": "7"
    },
    "943": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DB"
    },
    "948": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3BE"
    },
    "951": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "952": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "954": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1620"
    },
    "957": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMP",
      "path": "7"
    },
    "958": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "959": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE2C"
    },
    "962": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMP",
      "path": "7"
    },
    "963": {
      "offset": [
        419,
        450
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "964": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "965": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "DUP1",
      "path": "7"
    },
    "966": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "967": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CF"
    },
    "970": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "971": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "973": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "DUP1",
      "path": "7"
    },
    "974": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "REVERT",
      "path": "7"
    },
    "975": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "offset": [
        419,
        450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "979": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "980": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30D"
    },
    "983": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "offset": [
        419,
        450
      ],
      "op": "AND",
      "path": "7"
    },
    "993": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "994": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        419,
        450
      ],
      "op": "JUMP",
      "path": "7"
    },
    "995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EF"
    },
    "1002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB"
    },
    "1012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "1015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1016": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E4"
    },
    "1021": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1049"
    },
    "1026": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1027": {
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1043": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1047": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x425"
    },
    "1056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1906"
    },
    "1060": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1062": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1066": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DIV",
      "path": "7"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MUL",
      "path": "7"
    },
    "1072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1083": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1088": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x451"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1906"
    },
    "1104": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49E"
    },
    "1111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "LT",
      "path": "7"
    },
    "1116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x473"
    },
    "1119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DIV",
      "path": "7"
    },
    "1127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MUL",
      "path": "7"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49E"
    },
    "1138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "GT",
      "path": "7"
    },
    "1169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x481"
    },
    "1172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SUB",
      "path": "7"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "AND",
      "path": "7"
    },
    "1179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP10",
      "path": "7"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "ADD",
      "path": "7"
    },
    "1227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "1232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "AND",
      "path": "7"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1249": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "AND",
      "path": "7"
    },
    "1251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "AND",
      "path": "7"
    },
    "1259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "AND",
      "path": "7"
    },
    "1261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2863,
        2904
      ],
      "op": "DUP11",
      "path": "7"
    },
    "1262": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2863,
        2904
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1263": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1264": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3269,
        3285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1266": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3296,
        3319
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 2,
      "value": "0x4FF"
    },
    "1269": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3296,
        3307
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1271": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 3
    },
    "1272": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1273": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1275": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "3"
    },
    "1276": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1277": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1278": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1279": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3296,
        3319
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1280": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3329,
        3340
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1282": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3343,
        3364
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x50A"
    },
    "1285": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3343,
        3354
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1287": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 4
    },
    "1288": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1289": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1290": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3343,
        3364
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1291": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3374,
        3395
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1293": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1294": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1295": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1296": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1298": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1300": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1301": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1302": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1303": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1305": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1306": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1307": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1308": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3421,
        3436
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 5
    },
    "1309": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3421,
        3436
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1310": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3421,
        3436
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1311": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "DUP8",
      "path": "7",
      "statement": 6
    },
    "1312": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1313": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3329,
        3364
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1314": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3329,
        3364
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3398,
        3410
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1317": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x536"
    },
    "1320": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1321": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3457
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1323": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3457
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1324": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3457
      ],
      "op": "ADD",
      "path": "7"
    },
    "1325": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3457
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1326": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1327": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "DUP10",
      "path": "7"
    },
    "1328": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "ADD",
      "path": "7"
    },
    "1329": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1330": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1587"
    },
    "1333": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3446,
        3471
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1334": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3446,
        3471
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3502,
        3503
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x0"
    },
    "1338": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3481,
        3499
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1340": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3481,
        3499
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1341": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3481,
        3499
      ],
      "op": "ADD",
      "path": "7"
    },
    "1342": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3481,
        3503
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1343": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3513,
        3531
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x3"
    },
    "1345": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3513,
        3531
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1346": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3513,
        3531
      ],
      "op": "ADD",
      "path": "7"
    },
    "1347": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3513,
        3546
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1348": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3513,
        3546
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1349": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3513,
        3546
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1350": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3574
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x4"
    },
    "1352": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3574
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1353": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3574
      ],
      "op": "ADD",
      "path": "7"
    },
    "1354": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3596
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1355": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3596
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "op": "NOT"
    },
    "1365": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3596
      ],
      "op": "AND",
      "path": "7"
    },
    "1366": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3585,
        3595
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1367": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3596
      ],
      "op": "OR",
      "path": "7"
    },
    "1368": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3596
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1369": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3556,
        3596
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1370": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3625,
        3640
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 10
    },
    "1371": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3606,
        3622
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1373": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3606,
        3622
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1374": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3606,
        3622
      ],
      "op": "ADD",
      "path": "7"
    },
    "1375": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3606,
        3640
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1376": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3606,
        3640
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1377": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3606,
        3640
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1378": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3667,
        3698
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0x56C"
    },
    "1381": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3667,
        3698
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1382": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3685,
        3698
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1383": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3685,
        3698
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1384": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3667,
        3698
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "1387": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "i",
      "offset": [
        3667,
        3698
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1388": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3667,
        3698
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1389": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3650,
        3664
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1391": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3650,
        3664
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1392": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3650,
        3664
      ],
      "op": "ADD",
      "path": "7"
    },
    "1393": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3650,
        3698
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1394": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3720
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x8"
    },
    "1396": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3720
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1397": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3720
      ],
      "op": "ADD",
      "path": "7"
    },
    "1398": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3739
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1399": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3739
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1402": {
      "op": "NOT"
    },
    "1403": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3739
      ],
      "op": "AND",
      "path": "7"
    },
    "1404": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3739
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1405": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3708,
        3739
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1406": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3762
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x5"
    },
    "1408": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3762
      ],
      "op": "ADD",
      "path": "7"
    },
    "1409": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3777
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1410": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3777
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "SUB"
    },
    "1419": {
      "op": "NOT"
    },
    "1420": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3777
      ],
      "op": "AND",
      "path": "7"
    },
    "1421": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3777
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1422": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3749,
        3777
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1423": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3794,
        3797
      ],
      "op": "SWAP5",
      "path": "7",
      "statement": 14
    },
    "1424": {
      "fn": "CharityRaffle.CreateRaffle",
      "offset": [
        3794,
        3797
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "fn": "CharityRaffle.CreateRaffle",
      "jump": "o",
      "offset": [
        3160,
        3804
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1430": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1431": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1433": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 15
    },
    "1434": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1435": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1436": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4061
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1438": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1440": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1441": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1442": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1443": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1445": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1446": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4066
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1447": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1449": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1450": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "ADD",
      "path": "7"
    },
    "1451": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1452": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1454": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1455": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "ADD",
      "path": "7"
    },
    "1456": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1457": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4120,
        4142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1459": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4120,
        4142
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1460": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4120,
        4142
      ],
      "op": "ADD",
      "path": "7"
    },
    "1461": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4120,
        4142
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1462": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4144,
        4164
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1463": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4144,
        4164
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1464": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4144,
        4164
      ],
      "op": "ADD",
      "path": "7"
    },
    "1465": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4144,
        4164
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1466": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4071
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1468": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4071
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1469": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4071
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1470": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4071
      ],
      "op": "ADD",
      "path": "7"
    },
    "1471": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1472": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1473": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3927,
        3945
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1475": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3927,
        3945
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1476": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1477": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1478": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1479": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1480": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1481": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1482": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3947,
        3974
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1492": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1493": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "AND",
      "path": "7"
    },
    "1494": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4073,
        4097
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1495": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1496": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "AND",
      "path": "7"
    },
    "1497": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4099,
        4118
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1498": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4120,
        4142
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1499": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4144,
        4164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1500": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4071
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1501": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4054,
        4071
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1502": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5E6"
    },
    "1505": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1506": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1906"
    },
    "1509": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1510": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1511": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1512": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1514": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1515": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1517": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1518": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1519": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DIV",
      "path": "7"
    },
    "1520": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MUL",
      "path": "7"
    },
    "1521": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1523": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1524": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1526": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1527": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1528": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1529": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1530": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1532": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1533": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1534": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1535": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1536": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1537": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1538": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1539": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1540": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1542": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1543": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1544": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1545": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1546": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x612"
    },
    "1549": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1550": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1906"
    },
    "1553": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "i",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1554": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1555": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1556": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1557": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x65F"
    },
    "1560": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1561": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1562": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1564": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "LT",
      "path": "7"
    },
    "1565": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x634"
    },
    "1568": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1569": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1572": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1573": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1574": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1575": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DIV",
      "path": "7"
    },
    "1576": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MUL",
      "path": "7"
    },
    "1577": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1578": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1579": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1580": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1582": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1583": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1584": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x65F"
    },
    "1587": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1588": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1589": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1590": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1591": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1592": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1593": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1595": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1596": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1598": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1600": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1601": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1602": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1603": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1604": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1605": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1606": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1607": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1608": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1610": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1611": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1612": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1614": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1615": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1616": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1617": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "GT",
      "path": "7"
    },
    "1618": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x642"
    },
    "1621": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1622": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1623": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1624": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SUB",
      "path": "7"
    },
    "1625": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1627": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "AND",
      "path": "7"
    },
    "1628": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1629": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "ADD",
      "path": "7"
    },
    "1630": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1631": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1632": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1633": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1634": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1635": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1636": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1637": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1638": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1639": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1640": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1641": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1642": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1643": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1644": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1645": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1646": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1647": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1648": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        4046,
        4165
      ],
      "op": "POP",
      "path": "7"
    },
    "1649": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1650": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1651": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1652": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1653": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1654": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1655": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "offset": [
        3870,
        4172
      ],
      "op": "POP",
      "path": "7"
    },
    "1656": {
      "fn": "CharityRaffle.GetRaffleInfo",
      "jump": "o",
      "offset": [
        3870,
        4172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1657": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1658": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8322,
        8329
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1661": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1671": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 16
    },
    "1672": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1673": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AD"
    },
    "1676": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1679": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "1695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196F"
    },
    "1699": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1710": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8357,
        8358
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x0"
    },
    "1712": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8348,
        8354
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1714": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8348,
        8354
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1715": {
      "branch": 63,
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8348,
        8358
      ],
      "op": "GT",
      "path": "7"
    },
    "1716": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6FF"
    },
    "1719": {
      "branch": 63,
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1720": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1722": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1731": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1734": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1736": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1737": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "ADD",
      "path": "7"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1781": {
      "op": "DUP3"
    },
    "1782": {
      "op": "ADD"
    },
    "1783": {
      "op": "MSTORE"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1786": {
      "op": "ADD"
    },
    "1787": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "1790": {
      "op": "JUMP"
    },
    "1791": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8340,
        8393
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1792": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8435,
        8441
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x9"
    },
    "1794": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8435,
        8441
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1795": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1797": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1798": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8411,
        8421
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1799": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8411,
        8421
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1800": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8435,
        8441
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1801": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1803": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1804": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1805": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1806": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8435,
        8441
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1807": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8411,
        8421
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1808": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "GAS",
      "path": "7"
    },
    "1809": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "CALL",
      "path": "7"
    },
    "1810": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1811": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "POP",
      "path": "7"
    },
    "1812": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "POP",
      "path": "7"
    },
    "1813": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "POP",
      "path": "7"
    },
    "1814": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1815": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1816": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1818": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1819": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "EQ",
      "path": "7"
    },
    "1820": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x741"
    },
    "1823": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1824": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1826": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1827": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1828": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "POP",
      "path": "7"
    },
    "1829": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1831": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "NOT",
      "path": "7"
    },
    "1832": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "1834": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1835": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "ADD",
      "path": "7"
    },
    "1836": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "AND",
      "path": "7"
    },
    "1837": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1838": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "ADD",
      "path": "7"
    },
    "1839": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1841": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1842": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1843": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1844": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1845": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1846": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1848": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1850": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1851": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "ADD",
      "path": "7"
    },
    "1852": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1853": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x746"
    },
    "1856": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1857": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1858": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1860": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1861": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "POP",
      "path": "7"
    },
    "1862": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8403,
        8446
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8474,
        8480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "1867": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8474,
        8480
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1868": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8474,
        8480
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1869": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8456,
        8471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1871": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8490,
        8500
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 19
    },
    "1872": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8490,
        8500
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1873": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8490,
        8500
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1874": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8474,
        8480
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "fn": "CharityRaffle.CollectChange",
      "offset": [
        8271,
        8531
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1878": {
      "fn": "CharityRaffle.CollectChange",
      "jump": "o",
      "offset": [
        8271,
        8531
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1879": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4178,
        4480
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1880": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1882": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 20
    },
    "1883": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1884": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1885": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4364
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1887": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1889": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1890": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1891": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1892": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1894": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1895": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4369
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1896": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4376,
        4398
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1898": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4376,
        4398
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1899": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4376,
        4398
      ],
      "op": "ADD",
      "path": "7"
    },
    "1900": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4376,
        4398
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1901": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4400,
        4420
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1902": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4400,
        4420
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1903": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4400,
        4420
      ],
      "op": "ADD",
      "path": "7"
    },
    "1904": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4400,
        4420
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1905": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4422,
        4446
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1907": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4422,
        4446
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1908": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4422,
        4446
      ],
      "op": "ADD",
      "path": "7"
    },
    "1909": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4422,
        4446
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1910": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4448,
        4472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1912": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4448,
        4472
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1913": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4448,
        4472
      ],
      "op": "ADD",
      "path": "7"
    },
    "1914": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4448,
        4472
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1915": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1917": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4374
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1918": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4374
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1919": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4374
      ],
      "op": "ADD",
      "path": "7"
    },
    "1920": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4349,
        4473
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1921": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4349,
        4473
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1922": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4241,
        4259
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1924": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4241,
        4259
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1925": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1926": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1927": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1928": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1929": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1930": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1931": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4261,
        4278
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1932": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4376,
        4398
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1933": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4376,
        4398
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1934": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4400,
        4420
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1935": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4400,
        4420
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1936": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4422,
        4446
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1937": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4448,
        4472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1938": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4374
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1939": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4357,
        4374
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1940": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4349,
        4473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5E6"
    },
    "1943": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4349,
        4473
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1944": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "offset": [
        4349,
        4473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1906"
    },
    "1947": {
      "fn": "CharityRaffle.GetRaffleTicketInfo",
      "jump": "i",
      "offset": [
        4349,
        4473
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1948": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1949": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1951": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "SUB"
    },
    "1960": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1961": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1962": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1963": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C6"
    },
    "1966": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1967": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1969": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1970": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1978": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1979": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1981": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1982": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "1985": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1986": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196F"
    },
    "1989": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1990": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1991": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x7D0"
    },
    "1994": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1996": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "1999": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2000": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2001": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2002": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2003": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9750,
        9760
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 22
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9764,
        9778
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "2045": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9750,
        9778
      ],
      "op": "AND",
      "path": "4"
    },
    "2046": {
      "branch": 81,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9750,
        9778
      ],
      "op": "EQ",
      "path": "4"
    },
    "2047": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x84A"
    },
    "2050": {
      "branch": 81,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2051": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2053": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2062": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2065": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2067": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2068": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "ADD",
      "path": "4"
    },
    "2069": {
      "op": "MSTORE"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2074": {
      "op": "DUP3"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "op": "MSTORE"
    },
    "2077": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2112": {
      "op": "DUP3"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A4"
    },
    "2121": {
      "op": "JUMP"
    },
    "2122": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2123": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9820,
        9860
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 23,
      "value": "0x854"
    },
    "2126": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9838,
        9847
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2127": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9849,
        9859
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2128": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9820,
        9837
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1134"
    },
    "2131": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9820,
        9860
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2132": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9820,
        9860
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2133": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "POP",
      "path": "4"
    },
    "2134": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9640,
        9865
      ],
      "op": "POP",
      "path": "4"
    },
    "2135": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9640,
        9865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2136": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2137": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4689,
        4696
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2139": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4715,
        4736
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 24,
      "value": "0x863"
    },
    "2142": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4715,
        4726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2144": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2145": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2146": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2147": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4715,
        4736
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2148": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4708,
        4736
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2149": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4708,
        4736
      ],
      "op": "POP",
      "path": "7"
    },
    "2150": {
      "fn": "CharityRaffle.GetRaffleCount",
      "offset": [
        4642,
        4743
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2151": {
      "fn": "CharityRaffle.GetRaffleCount",
      "jump": "o",
      "offset": [
        4642,
        4743
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2152": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7210,
        8175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2153": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7330,
        7346
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 25,
      "value": "0x0"
    },
    "2155": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2156": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2157": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2158": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7310
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2160": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2162": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2163": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2165": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2166": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7320
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2167": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2169": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7326
      ],
      "op": "ADD",
      "path": "7"
    },
    "2170": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7326
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2171": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7326
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2173": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7326
      ],
      "op": "AND",
      "path": "7"
    },
    "2174": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2176": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2177": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "GT",
      "path": "7"
    },
    "2178": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2179": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x88E"
    },
    "2182": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2183": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x88E"
    },
    "2186": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1686"
    },
    "2189": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7303,
        7346
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2190": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2191": {
      "branch": 64,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7303,
        7346
      ],
      "op": "EQ",
      "path": "7"
    },
    "2192": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8CD"
    },
    "2195": {
      "branch": 64,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2196": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2198": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2207": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2210": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2212": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2213": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "ADD",
      "path": "7"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2219": {
      "op": "DUP3"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH15",
      "value": "0x2930B3333632903737BA1037B832B7"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2240": {
      "op": "SHL"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2243": {
      "op": "DUP3"
    },
    "2244": {
      "op": "ADD"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "2252": {
      "op": "JUMP"
    },
    "2253": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7295,
        7366
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2254": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x0"
    },
    "2256": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2257": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2258": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2259": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7409
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2261": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2263": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2264": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2265": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2266": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2268": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2269": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2270": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7419
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2271": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7427
      ],
      "op": "ADD",
      "path": "7"
    },
    "2272": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7402,
        7427
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2273": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7384,
        7399
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "2274": {
      "branch": 65,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7384,
        7427
      ],
      "op": "LT",
      "path": "7"
    },
    "2275": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x921"
    },
    "2278": {
      "branch": 65,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2279": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2281": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2290": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2293": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2295": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2296": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "ADD",
      "path": "7"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2302": {
      "op": "DUP3"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "op": "MSTORE"
    },
    "2305": {
      "op": "PUSH16",
      "value": "0x149859999B19481A5CC818DB1BDCD959"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2327": {
      "op": "DUP3"
    },
    "2328": {
      "op": "ADD"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2332": {
      "op": "ADD"
    },
    "2333": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "2336": {
      "op": "JUMP"
    },
    "2337": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7376,
        7448
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2338": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7481,
        7482
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x0"
    },
    "2340": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7466,
        7478
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2341": {
      "branch": 66,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7466,
        7482
      ],
      "op": "GT",
      "path": "7"
    },
    "2342": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x97D"
    },
    "2345": {
      "branch": 66,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2346": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2348": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2357": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2360": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2362": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2363": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "ADD",
      "path": "7"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2369": {
      "op": "DUP3"
    },
    "2370": {
      "op": "ADD"
    },
    "2371": {
      "op": "MSTORE"
    },
    "2372": {
      "op": "PUSH32",
      "value": "0x5469636B657420636F756E74206D757374206265206772656174657220746861"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2407": {
      "op": "DUP3"
    },
    "2408": {
      "op": "ADD"
    },
    "2409": {
      "op": "MSTORE"
    },
    "2410": {
      "op": "PUSH3",
      "value": "0x6E203"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2419": {
      "op": "DUP3"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "MSTORE"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "2428": {
      "op": "JUMP"
    },
    "2429": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7458,
        7522
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2430": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 28,
      "value": "0x0"
    },
    "2432": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2433": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2434": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2435": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7560
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2437": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2439": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2440": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2442": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2443": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7570
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2444": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2446": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7582
      ],
      "op": "ADD",
      "path": "7"
    },
    "2447": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7582
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2448": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7597
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x99A"
    },
    "2451": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7597
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2452": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7585,
        7597
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2453": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7585,
        7597
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2454": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7597
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A4"
    },
    "2457": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7553,
        7597
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2458": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7553,
        7597
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2459": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7540,
        7549
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2460": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7540,
        7597
      ],
      "op": "LT",
      "path": "7"
    },
    "2461": {
      "branch": 67,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7540,
        7597
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2462": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9FE"
    },
    "2465": {
      "branch": 67,
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2466": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2468": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2477": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2480": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2482": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2483": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "ADD",
      "path": "7"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2489": {
      "op": "DUP3"
    },
    "2490": {
      "op": "ADD"
    },
    "2491": {
      "op": "MSTORE"
    },
    "2492": {
      "op": "PUSH32",
      "value": "0x5469636B65742070726963652069732067726561746572207468616E20746865"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "op": "PUSH12",
      "value": "0x8185B5BDD5B9D081CD95B9D"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2553": {
      "op": "ADD"
    },
    "2554": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "2557": {
      "op": "JUMP"
    },
    "2558": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7532,
        7646
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2559": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x0"
    },
    "2561": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2562": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2563": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2564": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2566": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2568": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2569": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2571": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2572": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2573": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7685
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2575": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7685
      ],
      "op": "ADD",
      "path": "7"
    },
    "2576": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2577": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2578": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7689,
        7701
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2579": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7689,
        7701
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2580": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7673
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2581": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA1F"
    },
    "2584": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2585": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7689,
        7701
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2586": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7689,
        7701
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2587": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "2590": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7656,
        7701
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2591": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2592": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2593": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2594": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7656,
        7701
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2599": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2600": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2601": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2602": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7722
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2604": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2606": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2607": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2608": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2609": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2611": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2612": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2613": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7732
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2614": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7748,
        7758
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2615": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2616": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2617": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7747
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2619": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7747
      ],
      "op": "ADD",
      "path": "7"
    },
    "2620": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2621": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2622": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2623": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2624": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2625": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7715,
        7759
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2626": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7711,
        7956
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA77"
    },
    "2629": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7711,
        7956
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2630": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x0"
    },
    "2632": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2633": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2634": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2635": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2637": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2639": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2640": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2641": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2642": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2644": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2645": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7915
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2646": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "2648": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7928
      ],
      "op": "ADD",
      "path": "7"
    },
    "2649": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2650": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2651": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2653": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2654": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "ADD",
      "path": "7"
    },
    "2655": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2656": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2657": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2658": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2659": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2660": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2661": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2662": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "ADD",
      "path": "7"
    },
    "2663": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2664": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "op": "SUB"
    },
    "2673": {
      "op": "NOT"
    },
    "2674": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "AND",
      "path": "7"
    },
    "2675": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7934,
        7944
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2676": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "OR",
      "path": "7"
    },
    "2677": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2678": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7898,
        7945
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2679": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7711,
        7956
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2680": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x0"
    },
    "2682": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2683": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2684": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2685": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7972
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2687": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2689": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2690": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2691": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2692": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2694": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2695": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2696": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2697": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7998,
        8008
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2698": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2699": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2700": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7997
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2702": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7997
      ],
      "op": "ADD",
      "path": "7"
    },
    "2703": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2704": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2705": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2706": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2707": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8009
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2708": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2709": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2710": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8013,
        8025
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2711": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8013,
        8025
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2712": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        7982
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2713": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA3"
    },
    "2716": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2717": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8013,
        8025
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2718": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8013,
        8025
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2719": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "2722": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        7965,
        8025
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2723": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2724": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2725": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2726": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        7965,
        8025
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2727": {
      "op": "POP"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x0"
    },
    "2731": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2732": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2733": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2734": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8131
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2736": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2738": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2739": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2741": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2742": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8141
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2743": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2745": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8153
      ],
      "op": "ADD",
      "path": "7"
    },
    "2746": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8153
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2747": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8168
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAC5"
    },
    "2750": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2751": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8156,
        8168
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2752": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8156,
        8168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2753": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8168
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A4"
    },
    "2756": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8124,
        8168
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2757": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8124,
        8168
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2758": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8112,
        8168
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xACF"
    },
    "2761": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8112,
        8168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2762": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8112,
        8121
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "2763": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8112,
        8168
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C3"
    },
    "2766": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8112,
        8168
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2767": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8112,
        8168
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2768": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "2770": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2772": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2773": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2774": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2775": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE0"
    },
    "2778": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2779": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2780": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "2783": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "i",
      "offset": [
        8102,
        8168
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2784": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2785": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2786": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2787": {
      "fn": "CharityRaffle.BuyTickets",
      "offset": [
        8102,
        8168
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "fn": "CharityRaffle.BuyTickets",
      "jump": "o",
      "offset": [
        7210,
        8175
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2793": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2794": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x0"
    },
    "2796": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2797": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2798": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2799": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2801": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2803": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2804": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2806": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2807": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4833
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2808": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4845
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2810": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4845
      ],
      "op": "ADD",
      "path": "7"
    },
    "2811": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4845
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "SUB"
    },
    "2820": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4821,
        4845
      ],
      "op": "AND",
      "path": "7"
    },
    "2821": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4807,
        4817
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2822": {
      "branch": 68,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4807,
        4845
      ],
      "op": "EQ",
      "path": "7"
    },
    "2823": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB64"
    },
    "2826": {
      "branch": 68,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2827": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2829": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2836": {
      "op": "SHL"
    },
    "2837": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2838": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2841": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2843": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2844": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "ADD",
      "path": "7"
    },
    "2845": {
      "op": "MSTORE"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2850": {
      "op": "DUP3"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "op": "MSTORE"
    },
    "2853": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2888": {
      "op": "DUP3"
    },
    "2889": {
      "op": "ADD"
    },
    "2890": {
      "op": "MSTORE"
    },
    "2891": {
      "op": "PUSH9",
      "value": "0x686520726166666C65"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2903": {
      "op": "SHL"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2906": {
      "op": "DUP3"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "op": "MSTORE"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2911": {
      "op": "ADD"
    },
    "2912": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "2915": {
      "op": "JUMP"
    },
    "2916": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4799,
        4891
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2917": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 34,
      "value": "0x0"
    },
    "2919": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2920": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2921": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2922": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4935
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2924": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2926": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2927": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2928": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2929": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2931": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2932": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2933": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4940
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2934": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4948
      ],
      "op": "ADD",
      "path": "7"
    },
    "2935": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4928,
        4948
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2936": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4909,
        4924
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "2937": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4909,
        4948
      ],
      "op": "LT",
      "path": "7"
    },
    "2938": {
      "branch": 69,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4909,
        4948
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2939": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBC6"
    },
    "2942": {
      "branch": 69,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2943": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2945": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2954": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2957": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2959": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2960": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "ADD",
      "path": "7"
    },
    "2961": {
      "op": "MSTORE"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2966": {
      "op": "DUP3"
    },
    "2967": {
      "op": "ADD"
    },
    "2968": {
      "op": "MSTORE"
    },
    "2969": {
      "op": "PUSH32",
      "value": "0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3004": {
      "op": "DUP3"
    },
    "3005": {
      "op": "ADD"
    },
    "3006": {
      "op": "MSTORE"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3009": {
      "op": "ADD"
    },
    "3010": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3013": {
      "op": "JUMP"
    },
    "3014": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4901,
        4982
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3015": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5023,
        5039
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 35,
      "value": "0x5"
    },
    "3017": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5023,
        5039
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3018": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3020": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3021": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3022": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3023": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5007
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3025": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3027": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3028": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3029": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3030": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3032": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3033": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3034": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5012
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3035": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5020
      ],
      "op": "ADD",
      "path": "7"
    },
    "3036": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5020
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3037": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5042,
        5057
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3038": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5042,
        5057
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3039": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBE7"
    },
    "3042": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5039
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3043": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "3046": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5000,
        5039
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3047": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5039
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3048": {
      "branch": 70,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5000,
        5057
      ],
      "op": "GT",
      "path": "7"
    },
    "3049": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC49"
    },
    "3052": {
      "branch": 70,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3053": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3055": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3062": {
      "op": "SHL"
    },
    "3063": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3064": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3067": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3069": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3070": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "ADD",
      "path": "7"
    },
    "3071": {
      "op": "MSTORE"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3076": {
      "op": "DUP3"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "op": "MSTORE"
    },
    "3079": {
      "op": "PUSH32",
      "value": "0x54686520726166666C6520686173206578706972656420616E642063616E6E6F"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3114": {
      "op": "DUP3"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "op": "MSTORE"
    },
    "3117": {
      "op": "PUSH12",
      "value": "0x1D0818994818DB185A5B5959"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "3132": {
      "op": "SHL"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3135": {
      "op": "DUP3"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "op": "MSTORE"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3144": {
      "op": "JUMP"
    },
    "3145": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4992,
        5106
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3146": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5146,
        5162
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x0"
    },
    "3148": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3149": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3150": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3151": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5131
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3153": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3155": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3156": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3158": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3159": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5136
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3160": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3162": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5142
      ],
      "op": "ADD",
      "path": "7"
    },
    "3163": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5142
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3164": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3166": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5142
      ],
      "op": "AND",
      "path": "7"
    },
    "3167": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3169": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3170": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "GT",
      "path": "7"
    },
    "3171": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3172": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC6F"
    },
    "3175": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3176": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC6F"
    },
    "3179": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1686"
    },
    "3182": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5124,
        5162
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3183": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3184": {
      "branch": 71,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5124,
        5162
      ],
      "op": "EQ",
      "path": "7"
    },
    "3185": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCCB"
    },
    "3188": {
      "branch": 71,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3189": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3191": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3198": {
      "op": "SHL"
    },
    "3199": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3200": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3203": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3205": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3206": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "ADD",
      "path": "7"
    },
    "3207": {
      "op": "MSTORE"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3212": {
      "op": "DUP3"
    },
    "3213": {
      "op": "ADD"
    },
    "3214": {
      "op": "MSTORE"
    },
    "3215": {
      "op": "PUSH32",
      "value": "0x54686520726166666C65206973206E6F742061766169626C6520666F7220636C"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3250": {
      "op": "DUP3"
    },
    "3251": {
      "op": "ADD"
    },
    "3252": {
      "op": "MSTORE"
    },
    "3253": {
      "op": "PUSH6",
      "value": "0x61696D696E67"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3262": {
      "op": "SHL"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3265": {
      "op": "DUP3"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "op": "MSTORE"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3274": {
      "op": "JUMP"
    },
    "3275": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5116,
        5205
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3276": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5277,
        5284
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 37,
      "value": "0x3"
    },
    "3278": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5277,
        5284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3279": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5230,
        5246
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3281": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5230,
        5246
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3282": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3284": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3285": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3292": {
      "op": "SHL"
    },
    "3293": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3294": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3295": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5266,
        5270
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "3296": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3298": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3299": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "ADD",
      "path": "7"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "SUB"
    },
    "3309": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5230,
        5246
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3310": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5230,
        5246
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3311": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5230,
        5246
      ],
      "op": "AND",
      "path": "7"
    },
    "3312": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5230,
        5246
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3313": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5257
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "3318": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5257
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3321": {
      "op": "ADD"
    },
    "3322": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3324": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3326": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3327": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3328": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3329": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "SUB",
      "path": "7"
    },
    "3330": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3331": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3332": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "GAS",
      "path": "7"
    },
    "3333": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "3334": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3335": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3336": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3337": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD16"
    },
    "3340": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3341": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3342": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3344": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3345": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3346": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3347": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3349": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3350": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3351": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "POP",
      "path": "7"
    },
    "3352": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "POP",
      "path": "7"
    },
    "3353": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "POP",
      "path": "7"
    },
    "3354": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "POP",
      "path": "7"
    },
    "3355": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3357": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3358": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3359": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3361": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "NOT",
      "path": "7"
    },
    "3362": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3364": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3365": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "ADD",
      "path": "7"
    },
    "3366": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "AND",
      "path": "7"
    },
    "3367": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3368": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "ADD",
      "path": "7"
    },
    "3369": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3370": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3372": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3373": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "POP",
      "path": "7"
    },
    "3374": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3375": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "ADD",
      "path": "7"
    },
    "3376": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3377": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3A"
    },
    "3380": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3381": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3382": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19DA"
    },
    "3385": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5223,
        5272
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3386": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5272
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3387": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5284
      ],
      "op": "LT",
      "path": "7"
    },
    "3388": {
      "branch": 72,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5223,
        5284
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3389": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDAE"
    },
    "3392": {
      "branch": 72,
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3393": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3395": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3404": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3407": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3409": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3410": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "ADD",
      "path": "7"
    },
    "3411": {
      "op": "MSTORE"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3416": {
      "op": "DUP3"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "MSTORE"
    },
    "3419": {
      "op": "PUSH32",
      "value": "0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3454": {
      "op": "DUP3"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "MSTORE"
    },
    "3457": {
      "op": "PUSH32",
      "value": "0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3492": {
      "op": "DUP3"
    },
    "3493": {
      "op": "ADD"
    },
    "3494": {
      "op": "MSTORE"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3497": {
      "op": "ADD"
    },
    "3498": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3501": {
      "op": "JUMP"
    },
    "3502": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5215,
        5349
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3503": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 38,
      "value": "0x0"
    },
    "3505": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3506": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3507": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3508": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5366
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3510": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3512": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3513": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3515": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3516": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5371
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3517": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3519": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5377
      ],
      "op": "ADD",
      "path": "7"
    },
    "3520": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5407
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3521": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5407
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3524": {
      "op": "NOT"
    },
    "3525": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5407
      ],
      "op": "AND",
      "path": "7"
    },
    "3526": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5380,
        5407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3528": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5407
      ],
      "op": "OR",
      "path": "7"
    },
    "3529": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5407
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3530": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5359,
        5407
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3531": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5504,
        5514
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3533": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5504,
        5514
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3534": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5516,
        5523
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3536": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5516,
        5523
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3537": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5486,
        5524
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDDA"
    },
    "3540": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5486,
        5524
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3541": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5504,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3542": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5486,
        5503
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1404"
    },
    "3545": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "i",
      "offset": [
        5486,
        5524
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3546": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5486,
        5524
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3547": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 39,
      "value": "0x0"
    },
    "3549": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3550": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3551": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3552": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5601
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3554": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3556": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3557": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3559": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3560": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3561": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3562": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5612
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3563": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5618
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3564": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5618
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3565": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5579,
        5618
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3566": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "MLOAD",
      "path": "7",
      "statement": 40
    },
    "3567": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5466,
        5524
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3568": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5466,
        5524
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB"
    },
    "3603": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3604": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE20"
    },
    "3607": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3608": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5466,
        5524
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3609": {
      "op": "DUP2"
    },
    "3610": {
      "op": "MSTORE"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "SWAP1"
    },
    "3615": {
      "op": "JUMP"
    },
    "3616": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3617": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3619": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3620": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3621": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3622": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "SUB",
      "path": "7"
    },
    "3623": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3624": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        5672,
        5700
      ],
      "op": "LOG1",
      "path": "7"
    },
    "3625": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4789,
        5707
      ],
      "op": "POP",
      "path": "7"
    },
    "3626": {
      "fn": "CharityRaffle.ClaimRaffle",
      "offset": [
        4749,
        5707
      ],
      "op": "POP",
      "path": "7"
    },
    "3627": {
      "fn": "CharityRaffle.ClaimRaffle",
      "jump": "o",
      "offset": [
        4749,
        5707
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3628": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3629": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8722,
        8738
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 41,
      "value": "0x5"
    },
    "3631": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8722,
        8738
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3632": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3634": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3635": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3636": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3637": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3639": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3641": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3642": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3643": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3644": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3646": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3647": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3648": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8711
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3649": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8719
      ],
      "op": "ADD",
      "path": "7"
    },
    "3650": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8719
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3651": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE4C"
    },
    "3654": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8738
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3655": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8722,
        8738
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3656": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8738
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "3659": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8694,
        8738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3660": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8694,
        8738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3661": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8675,
        8690
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3662": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8675,
        8738
      ],
      "op": "LT",
      "path": "7"
    },
    "3663": {
      "branch": 73,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8675,
        8738
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3664": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA7"
    },
    "3667": {
      "branch": 73,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3668": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3670": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3677": {
      "op": "SHL"
    },
    "3678": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3679": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3682": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3684": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3685": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "ADD",
      "path": "7"
    },
    "3686": {
      "op": "MSTORE"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3691": {
      "op": "DUP3"
    },
    "3692": {
      "op": "ADD"
    },
    "3693": {
      "op": "MSTORE"
    },
    "3694": {
      "op": "PUSH32",
      "value": "0x54686520726566756E6420706572696F6420686173206E6F7420656E64656420"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3729": {
      "op": "DUP3"
    },
    "3730": {
      "op": "ADD"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "PUSH3",
      "value": "0x1E595D"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3741": {
      "op": "DUP3"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3750": {
      "op": "JUMP"
    },
    "3751": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8667,
        8778
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3752": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8823,
        8843
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0x2"
    },
    "3754": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3756": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3757": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3758": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3759": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8803
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3761": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3763": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3764": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3766": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3767": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8813
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3768": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3770": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8819
      ],
      "op": "ADD",
      "path": "7"
    },
    "3771": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8819
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3772": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3774": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8819
      ],
      "op": "AND",
      "path": "7"
    },
    "3775": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3777": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3778": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "GT",
      "path": "7"
    },
    "3779": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3780": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xECF"
    },
    "3783": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3784": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xECF"
    },
    "3787": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1686"
    },
    "3790": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8796,
        8843
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3791": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3792": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "EQ",
      "path": "7"
    },
    "3793": {
      "branch": 74,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8796,
        8843
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3794": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF16"
    },
    "3797": {
      "branch": 74,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3798": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3800": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3809": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3812": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3814": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3815": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "ADD",
      "path": "7"
    },
    "3816": {
      "op": "MSTORE"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3821": {
      "op": "DUP3"
    },
    "3822": {
      "op": "ADD"
    },
    "3823": {
      "op": "MSTORE"
    },
    "3824": {
      "op": "PUSH22",
      "value": "0x151A19481C9859999B19481A5CC8199A5B9A5CDA1959"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3849": {
      "op": "SHL"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3852": {
      "op": "DUP3"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "MSTORE"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3857": {
      "op": "ADD"
    },
    "3858": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3861": {
      "op": "JUMP"
    },
    "3862": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8788,
        8870
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3863": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8915,
        8942
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x1"
    },
    "3865": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3867": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3868": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3869": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3870": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8895
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3872": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3874": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3875": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3877": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3878": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8905
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3879": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8911
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3881": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8911
      ],
      "op": "ADD",
      "path": "7"
    },
    "3882": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8911
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3883": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8911
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3885": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8911
      ],
      "op": "AND",
      "path": "7"
    },
    "3886": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3888": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3889": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "GT",
      "path": "7"
    },
    "3890": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3891": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3E"
    },
    "3894": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3895": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3E"
    },
    "3898": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1686"
    },
    "3901": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        8888,
        8942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3902": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3903": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "EQ",
      "path": "7"
    },
    "3904": {
      "branch": 75,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8888,
        8942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3905": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF96"
    },
    "3908": {
      "branch": 75,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3909": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3911": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3918": {
      "op": "SHL"
    },
    "3919": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3920": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3923": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3925": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3926": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "ADD",
      "path": "7"
    },
    "3927": {
      "op": "MSTORE"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3932": {
      "op": "DUP3"
    },
    "3933": {
      "op": "ADD"
    },
    "3934": {
      "op": "MSTORE"
    },
    "3935": {
      "op": "PUSH32",
      "value": "0x54686520726166666C652069732073656C656374696E6720612077696E6E6572"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3970": {
      "op": "DUP3"
    },
    "3971": {
      "op": "ADD"
    },
    "3972": {
      "op": "MSTORE"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3980": {
      "op": "DUP3"
    },
    "3981": {
      "op": "ADD"
    },
    "3982": {
      "op": "MSTORE"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3985": {
      "op": "ADD"
    },
    "3986": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "3989": {
      "op": "JUMP"
    },
    "3990": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        8880,
        8980
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3991": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x0"
    },
    "3993": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3994": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3995": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3996": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3998": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4000": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4001": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4002": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4003": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4005": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4006": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4007": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9054
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4008": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4010": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9060
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4011": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9060
      ],
      "op": "ADD",
      "path": "7"
    },
    "4012": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4013": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4016": {
      "op": "NOT"
    },
    "4017": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "AND",
      "path": "7"
    },
    "4018": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9063,
        9082
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4020": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4021": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4022": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "OR",
      "path": "7"
    },
    "4023": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4024": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4025": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9037,
        9082
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4026": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9166,
        9176
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4027": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4028": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4029": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4030": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9254
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4032": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9254
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4033": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9254
      ],
      "op": "ADD",
      "path": "7"
    },
    "4034": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4035": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4036": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4037": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4038": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4039": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9222,
        9266
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4040": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4041": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4042": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4043": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4044": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4045": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4046": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9207
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4047": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9219
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4048": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9219
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4049": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9219
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4050": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9219
      ],
      "op": "ADD",
      "path": "7"
    },
    "4051": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9219
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4052": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9166,
        9176
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4053": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9166,
        9176
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4054": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9266
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFDE"
    },
    "4057": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9266
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4058": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9266
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A4"
    },
    "4061": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "i",
      "offset": [
        9190,
        9266
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4062": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9190,
        9266
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4063": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4065": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4066": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4068": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4069": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4070": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4071": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4072": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4073": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "GAS",
      "path": "7"
    },
    "4074": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "CALL",
      "path": "7"
    },
    "4075": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4076": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4077": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4078": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4079": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4080": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4081": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4083": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4084": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "EQ",
      "path": "7"
    },
    "4085": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x101A"
    },
    "4088": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4089": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4091": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4092": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4093": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4094": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4096": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "NOT",
      "path": "7"
    },
    "4097": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "4099": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4100": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "ADD",
      "path": "7"
    },
    "4101": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "AND",
      "path": "7"
    },
    "4102": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4103": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "ADD",
      "path": "7"
    },
    "4104": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4106": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4107": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4108": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4109": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4110": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4111": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4113": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4115": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4116": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "ADD",
      "path": "7"
    },
    "4117": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "4118": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x101F"
    },
    "4121": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4122": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4123": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "4125": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4126": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4127": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4128": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9158,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4129": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9136,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4130": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9136,
        9271
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4131": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9136,
        9271
      ],
      "op": "POP",
      "path": "7"
    },
    "4132": {
      "branch": 76,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9285,
        9295
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4133": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9281,
        9370
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4134": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9281,
        9370
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x854"
    },
    "4137": {
      "branch": 76,
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9281,
        9370
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4138": {
      "op": "POP"
    },
    "4139": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9358,
        9359
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 45,
      "value": "0x0"
    },
    "4141": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4142": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4143": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4144": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9318
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4146": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4148": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4149": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4150": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4151": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4153": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4154": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4155": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9328
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4156": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9344,
        9354
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4157": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4158": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4159": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4161": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9343
      ],
      "op": "ADD",
      "path": "7"
    },
    "4162": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4163": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4164": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4165": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4166": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9355
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4167": {
      "fn": "CharityRaffle.TicketRefund",
      "offset": [
        9311,
        9359
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4168": {
      "fn": "CharityRaffle.TicketRefund",
      "jump": "o",
      "offset": [
        8611,
        9376
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4170": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4172": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4179": {
      "op": "SHL"
    },
    "4180": {
      "op": "SUB"
    },
    "4181": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4182": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4183": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4184": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1073"
    },
    "4187": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4188": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4190": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4191": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4197": {
      "op": "SHL"
    },
    "4198": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4199": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4200": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4202": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4203": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "4206": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4207": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196F"
    },
    "4210": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4211": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4218": {
      "op": "SHL"
    },
    "4219": {
      "op": "SUB"
    },
    "4220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 46
    },
    "4221": {
      "branch": 80,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "4222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D8"
    },
    "4225": {
      "branch": 80,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4235": {
      "op": "SHL"
    },
    "4236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "4244": {
      "op": "MSTORE"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4249": {
      "op": "DUP3"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4287": {
      "op": "DUP3"
    },
    "4288": {
      "op": "ADD"
    },
    "4289": {
      "op": "MSTORE"
    },
    "4290": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4299": {
      "op": "SHL"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4302": {
      "op": "DUP3"
    },
    "4303": {
      "op": "ADD"
    },
    "4304": {
      "op": "MSTORE"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4307": {
      "op": "ADD"
    },
    "4308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "4311": {
      "op": "JUMP"
    },
    "4312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x10E1"
    },
    "4316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "4320": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "4323": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4324": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4327": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4335": {
      "op": "SHL"
    },
    "4336": {
      "op": "SUB"
    },
    "4337": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 48
    },
    "4338": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4339": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4346": {
      "op": "SHL"
    },
    "4347": {
      "op": "SUB"
    },
    "4348": {
      "op": "NOT"
    },
    "4349": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4350": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4351": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4352": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "4353": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4354": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4355": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x40"
    },
    "4357": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4358": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4359": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4360": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "4362": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4363": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4398": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4401": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4403": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4404": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5778,
        7158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4405": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5874,
        5890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4407": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4408": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4409": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4410": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5915
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4412": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4414": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4415": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4417": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4418": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4419": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5893,
        5927
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4420": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5972,
        5999
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 50,
      "value": "0x1"
    },
    "4422": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4424": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4425": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4426": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4427": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5952
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4429": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4431": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4432": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4434": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4435": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5962
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4436": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4438": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5968
      ],
      "op": "ADD",
      "path": "7"
    },
    "4439": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5968
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4440": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "4442": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5968
      ],
      "op": "AND",
      "path": "7"
    },
    "4443": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4445": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4446": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "GT",
      "path": "7"
    },
    "4447": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4448": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116B"
    },
    "4451": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4452": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116B"
    },
    "4455": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1686"
    },
    "4458": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        5945,
        5999
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4459": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4460": {
      "branch": 77,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5945,
        5999
      ],
      "op": "EQ",
      "path": "7"
    },
    "4461": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11CF"
    },
    "4464": {
      "branch": 77,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4465": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4467": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4476": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4479": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4481": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4482": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "ADD",
      "path": "7"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4488": {
      "op": "DUP3"
    },
    "4489": {
      "op": "ADD"
    },
    "4490": {
      "op": "MSTORE"
    },
    "4491": {
      "op": "PUSH32",
      "value": "0x54686520726166666C65206973206E6F7420696E207468652053656C65637469"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4526": {
      "op": "DUP3"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "MSTORE"
    },
    "4529": {
      "op": "PUSH14",
      "value": "0x6E6757696E6E6572207374617465"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4546": {
      "op": "SHL"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4549": {
      "op": "DUP3"
    },
    "4550": {
      "op": "ADD"
    },
    "4551": {
      "op": "MSTORE"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A4"
    },
    "4558": {
      "op": "JUMP"
    },
    "4559": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5937,
        6050
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4560": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 51,
      "value": "0x0"
    },
    "4562": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4563": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4564": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4565": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4567": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4569": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4570": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4572": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4573": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6135
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4574": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6141
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4576": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6141
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4577": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6141
      ],
      "op": "ADD",
      "path": "7"
    },
    "4578": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4579": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4582": {
      "op": "NOT"
    },
    "4583": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "AND",
      "path": "7"
    },
    "4584": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6144,
        6164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4586": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4587": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4588": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "OR",
      "path": "7"
    },
    "4589": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4590": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4591": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6118,
        6164
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4592": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6217,
        6246
      ],
      "op": "ADD",
      "path": "7"
    },
    "4593": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6217,
        6246
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4594": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6203,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11FB"
    },
    "4597": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6203,
        6246
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4598": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6203,
        6214
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4599": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6203,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19F3"
    },
    "4602": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6203,
        6246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4603": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6203,
        6246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4604": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6320,
        6341
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4606": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4607": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4608": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4609": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4611": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4613": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4614": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4616": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4617": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6384
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4618": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4620": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6397
      ],
      "op": "ADD",
      "path": "7"
    },
    "4621": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6367,
        6404
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4622": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6174,
        6246
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4623": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6174,
        6246
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6320,
        6341
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4626": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6320,
        6341
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4627": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4628": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6438,
        6439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4629": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6434,
        6435
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4630": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6434,
        6439
      ],
      "op": "LT",
      "path": "7"
    },
    "4631": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4632": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1310"
    },
    "4635": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4636": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6460,
        6475
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4638": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4639": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4640": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4641": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6485
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4643": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4645": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4646": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4648": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4649": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6495
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4650": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6541
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4652": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6541
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4653": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6541
      ],
      "op": "ADD",
      "path": "7"
    },
    "4654": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4655": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4656": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6510
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "4658": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6510
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4659": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6510
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4660": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6510
      ],
      "op": "ADD",
      "path": "7"
    },
    "4661": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6510
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4662": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6460,
        6475
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4663": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6460,
        6475
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4664": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6541
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4665": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6542,
        6543
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4666": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6542,
        6543
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4667": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4668": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "LT",
      "path": "7"
    },
    "4669": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1248"
    },
    "4672": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4673": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1248"
    },
    "4676": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A15"
    },
    "4679": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6511,
        6544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4680": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4681": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4683": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4684": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4685": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4686": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4688": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4689": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4690": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4691": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4692": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4693": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "ADD",
      "path": "7"
    },
    "4694": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "op": "SUB"
    },
    "4703": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6511,
        6544
      ],
      "op": "AND",
      "path": "7"
    },
    "4704": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4705": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4706": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4707": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "ADD",
      "path": "7"
    },
    "4708": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4709": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4710": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4711": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4712": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4714": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "ADD",
      "path": "7"
    },
    "4715": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4716": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4717": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4718": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6478,
        6545
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6598
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4721": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6598
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4722": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6598
      ],
      "op": "GT",
      "path": "7"
    },
    "4723": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6598
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4724": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6598
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4725": {
      "branch": 78,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6598
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4726": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6646
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1287"
    },
    "4729": {
      "branch": 78,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6646
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6623,
        6646
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1284"
    },
    "4734": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6639,
        6646
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4735": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6623,
        6636
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4736": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6623,
        6646
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "4739": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6623,
        6646
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4740": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6623,
        6646
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4741": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6602,
        6620
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4742": {
      "branch": 79,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6602,
        6646
      ],
      "op": "LT",
      "path": "7"
    },
    "4743": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6563,
        6646
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4744": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6559,
        6809
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4745": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6559,
        6809
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F0"
    },
    "4748": {
      "branch": 79,
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6559,
        6809
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4749": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 52,
      "value": "0x0"
    },
    "4751": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "DUP7",
      "path": "7"
    },
    "4752": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4753": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4754": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4756": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4758": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4759": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4761": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4762": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6754
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4763": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6767
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4765": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6767
      ],
      "op": "ADD",
      "path": "7"
    },
    "4766": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4767": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4768": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6768,
        6769
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4769": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6768,
        6769
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4770": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4771": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "LT",
      "path": "7"
    },
    "4772": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12AF"
    },
    "4775": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4776": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12AF"
    },
    "4779": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A15"
    },
    "4782": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6737,
        6770
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4783": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4784": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4786": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4787": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4788": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4789": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4791": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4792": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4793": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4794": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4795": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4796": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "ADD",
      "path": "7"
    },
    "4797": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4798": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4799": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4800": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4801": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6709
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4803": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4804": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4805": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4806": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4808": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4809": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4810": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6719
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4811": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "4813": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6726
      ],
      "op": "ADD",
      "path": "7"
    },
    "4814": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4815": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4822": {
      "op": "SHL"
    },
    "4823": {
      "op": "SUB"
    },
    "4824": {
      "op": "NOT"
    },
    "4825": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "AND",
      "path": "7"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4832": {
      "op": "SHL"
    },
    "4833": {
      "op": "SUB"
    },
    "4834": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4835": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4836": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6737,
        6770
      ],
      "op": "AND",
      "path": "7"
    },
    "4837": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4838": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4839": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4840": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "OR",
      "path": "7"
    },
    "4841": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4842": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6702,
        6771
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4843": {
      "op": "POP"
    },
    "4844": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6789,
        6794
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 53,
      "value": "0x1310"
    },
    "4847": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6789,
        6794
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4848": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6559,
        6809
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4849": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6822,
        6846
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 54,
      "value": "0x12FA"
    },
    "4852": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6839,
        6846
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4853": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6822,
        6846
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4854": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6822,
        6846
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1957"
    },
    "4857": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6822,
        6846
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4858": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6822,
        6846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4859": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6822,
        6846
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4860": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6822,
        6846
      ],
      "op": "POP",
      "path": "7"
    },
    "4861": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6446,
        6857
      ],
      "op": "POP",
      "path": "7"
    },
    "4862": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 55
    },
    "4863": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4864": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1308"
    },
    "4867": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4868": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A2B"
    },
    "4871": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        6441,
        6444
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4872": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4873": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4874": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "POP",
      "path": "7"
    },
    "4875": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6441,
        6444
      ],
      "op": "POP",
      "path": "7"
    },
    "4876": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1213"
    },
    "4879": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4880": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6414,
        6857
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4881": {
      "op": "POP"
    },
    "4882": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 56,
      "value": "0x0"
    },
    "4884": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4885": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4886": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4887": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6966
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "4889": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4891": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4892": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4894": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4895": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6976
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4896": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4898": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4899": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "ADD",
      "path": "7"
    },
    "4900": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4901": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7034,
        7063
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4903": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7034,
        7063
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4904": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7034,
        7063
      ],
      "op": "ADD",
      "path": "7"
    },
    "4905": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7034,
        7063
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4906": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7031
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4908": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7031
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4909": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7031
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4910": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7031
      ],
      "op": "ADD",
      "path": "7"
    },
    "4911": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7031
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4918": {
      "op": "SHL"
    },
    "4919": {
      "op": "SUB"
    },
    "4920": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4921": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4922": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "AND",
      "path": "7"
    },
    "4923": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6959,
        6988
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4924": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7063
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1344"
    },
    "4927": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7063
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4928": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7063
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A4"
    },
    "4931": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "i",
      "offset": [
        7002,
        7063
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4932": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7002,
        7063
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4933": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4935": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4936": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4938": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4939": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4940": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4941": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4942": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4943": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "GAS",
      "path": "7"
    },
    "4944": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "CALL",
      "path": "7"
    },
    "4945": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4946": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "POP",
      "path": "7"
    },
    "4947": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "POP",
      "path": "7"
    },
    "4948": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "POP",
      "path": "7"
    },
    "4949": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4950": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4951": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4953": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4954": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "EQ",
      "path": "7"
    },
    "4955": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1380"
    },
    "4958": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4959": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4961": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4962": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4963": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "POP",
      "path": "7"
    },
    "4964": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4966": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "NOT",
      "path": "7"
    },
    "4967": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "4969": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4970": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "ADD",
      "path": "7"
    },
    "4971": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "AND",
      "path": "7"
    },
    "4972": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4973": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "ADD",
      "path": "7"
    },
    "4974": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4976": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4977": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4978": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4979": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4980": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4981": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4983": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4985": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4986": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "ADD",
      "path": "7"
    },
    "4987": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "4988": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1385"
    },
    "4991": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4992": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4993": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "4995": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4996": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "POP",
      "path": "7"
    },
    "4997": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6951,
        7068
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "POP"
    },
    "5000": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5002": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "DUP6",
      "path": "7"
    },
    "5003": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5004": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5005": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "5007": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5009": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5010": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5011": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5012": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5014": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5015": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5016": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5017": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6936
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5018": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6945
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "5020": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6945
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5021": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6919,
        6945
      ],
      "op": "ADD",
      "path": "7"
    },
    "5022": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5023": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5026": {
      "op": "NOT"
    },
    "5027": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "AND",
      "path": "7"
    },
    "5028": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5029": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5030": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5031": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5032": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5033": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5034": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "OR",
      "path": "7"
    },
    "5035": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5036": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5037": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        6918,
        7068
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5038": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 57,
      "value": "0x5"
    },
    "5040": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5041": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5042": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "ADD",
      "path": "7"
    },
    "5043": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5044": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5045": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5046": {
      "op": "DUP8"
    },
    "5047": {
      "op": "DUP2"
    },
    "5048": {
      "op": "MSTORE"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "op": "SUB"
    },
    "5057": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5058": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5059": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7106,
        7130
      ],
      "op": "AND",
      "path": "7"
    },
    "5060": {
      "op": "SWAP3"
    },
    "5061": {
      "op": "DUP2"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "SWAP3"
    },
    "5064": {
      "op": "SWAP1"
    },
    "5065": {
      "op": "SWAP3"
    },
    "5066": {
      "op": "MSTORE"
    },
    "5067": {
      "op": "DUP2"
    },
    "5068": {
      "op": "ADD"
    },
    "5069": {
      "op": "DUP5"
    },
    "5070": {
      "op": "SWAP1"
    },
    "5071": {
      "op": "MSTORE"
    },
    "5072": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xB14375695E696EE7A5001ECE25E2FCFB144242680D208452819016209AE26F67"
    },
    "5105": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5108": {
      "op": "ADD"
    },
    "5109": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5111": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5112": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5113": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5114": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "SUB",
      "path": "7"
    },
    "5115": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5116": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        7083,
        7151
      ],
      "op": "LOG1",
      "path": "7"
    },
    "5117": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5864,
        7158
      ],
      "op": "POP",
      "path": "7"
    },
    "5118": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5864,
        7158
      ],
      "op": "POP",
      "path": "7"
    },
    "5119": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5864,
        7158
      ],
      "op": "POP",
      "path": "7"
    },
    "5120": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5864,
        7158
      ],
      "op": "POP",
      "path": "7"
    },
    "5121": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5778,
        7158
      ],
      "op": "POP",
      "path": "7"
    },
    "5122": {
      "fn": "CharityRaffle.fulfillRandomness",
      "offset": [
        5778,
        7158
      ],
      "op": "POP",
      "path": "7"
    },
    "5123": {
      "fn": "CharityRaffle.fulfillRandomness",
      "jump": "o",
      "offset": [
        5778,
        7158
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7753,
        8808
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7857,
        7874
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7893
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 58,
      "value": "0x0"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5166": {
      "op": "SHL"
    },
    "5167": {
      "op": "SUB"
    },
    "5168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7909
      ],
      "op": "AND",
      "path": "4"
    },
    "5169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7909
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4000AEA0"
    },
    "5174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7910,
        7924
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "5207": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        7930
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5208": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7943,
        7951
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5209": {
      "offset": [
        6610,
        6611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5213": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5214": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "ADD",
      "path": "4"
    },
    "5217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1474"
    },
    "5220": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5221": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5222": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5223": {
      "op": "SWAP2"
    },
    "5224": {
      "op": "DUP3"
    },
    "5225": {
      "op": "MSTORE"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5228": {
      "op": "DUP3"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "MSTORE"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "SWAP1"
    },
    "5235": {
      "op": "JUMP"
    },
    "5236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5239": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5240": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SUB",
      "path": "4"
    },
    "5245": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SUB",
      "path": "4"
    },
    "5246": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5247": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5248": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5249": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5251": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7932,
        7975
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5252": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5254": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5255": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5256": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "5261": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "AND",
      "path": "4"
    },
    "5262": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "5264": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SHL",
      "path": "4"
    },
    "5265": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5266": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5267": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5269": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5270": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14A1"
    },
    "5273": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5274": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5275": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5276": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5277": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A46"
    },
    "5280": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5281": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5282": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5284": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5286": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5287": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5288": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5289": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SUB",
      "path": "4"
    },
    "5290": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5291": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5293": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5294": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "GAS",
      "path": "4"
    },
    "5295": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "CALL",
      "path": "4"
    },
    "5296": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5297": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5298": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5299": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14C0"
    },
    "5302": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5303": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5304": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5306": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5307": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5308": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5309": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5311": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5312": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5314": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5315": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5316": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5317": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5319": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5320": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5321": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5323": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "NOT",
      "path": "4"
    },
    "5324": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "5326": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5327": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "AND",
      "path": "4"
    },
    "5329": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5330": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5331": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5332": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5334": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5335": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "POP",
      "path": "4"
    },
    "5336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5337": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "ADD",
      "path": "4"
    },
    "5338": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5339": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E4"
    },
    "5342": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5343": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5344": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A76"
    },
    "5347": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5348": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7889,
        7976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5349": {
      "op": "POP"
    },
    "5350": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8207,
        8222
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5352": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5353": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5354": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5355": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5359": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5360": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5361": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5362": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5364": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5365": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5366": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5367": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8291,
        8307
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5368": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 59
    },
    "5369": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5370": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5371": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5372": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "5"
    },
    "5373": {
      "op": "DUP10"
    },
    "5374": {
      "op": "SWAP1"
    },
    "5375": {
      "op": "MSTORE"
    },
    "5376": {
      "op": "DUP1"
    },
    "5377": {
      "op": "DUP4"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "DUP7"
    },
    "5380": {
      "op": "SWAP1"
    },
    "5381": {
      "op": "MSTORE"
    },
    "5382": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8284,
        8288
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5385": {
      "op": "DUP3"
    },
    "5386": {
      "op": "ADD"
    },
    "5387": {
      "op": "MSTORE"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5390": {
      "op": "DUP1"
    },
    "5391": {
      "op": "DUP3"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "DUP4"
    },
    "5394": {
      "op": "SWAP1"
    },
    "5395": {
      "op": "MSTORE"
    },
    "5396": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5397": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5398": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5399": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5400": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "5"
    },
    "5401": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5402": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5403": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "5"
    },
    "5404": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5405": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5408": {
      "op": "SWAP1"
    },
    "5409": {
      "op": "SWAP2"
    },
    "5410": {
      "op": "ADD"
    },
    "5411": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5412": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5413": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5414": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5415": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5416": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5417": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5418": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "5"
    },
    "5419": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5420": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5421": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5422": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 60
    },
    "5424": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "DUP8",
      "path": "4"
    },
    "5425": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5427": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5429": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5430": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8754
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5431": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x153F"
    },
    "5434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1957"
    },
    "5438": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8738,
        8758
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8738,
        8758
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5440": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5442": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5443": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5444": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5445": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8725
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5447": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5449": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5450": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5452": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5453": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8735
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5454": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8719,
        8758
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5455": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8771,
        8803
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 61,
      "value": "0x157F"
    },
    "5458": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8726,
        8734
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5459": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8795,
        8802
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5460": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 62,
      "value": "0x40"
    },
    "5462": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5463": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5464": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5466": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5467": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5468": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "5"
    },
    "5469": {
      "op": "SWAP5"
    },
    "5470": {
      "op": "SWAP1"
    },
    "5471": {
      "op": "SWAP5"
    },
    "5472": {
      "op": "MSTORE"
    },
    "5473": {
      "op": "DUP1"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "SWAP3"
    },
    "5477": {
      "op": "SWAP1"
    },
    "5478": {
      "op": "SWAP3"
    },
    "5479": {
      "op": "MSTORE"
    },
    "5480": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5481": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5482": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5483": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5484": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "5"
    },
    "5485": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5486": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "5"
    },
    "5487": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5488": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5491": {
      "op": "SWAP1"
    },
    "5492": {
      "op": "SWAP3"
    },
    "5493": {
      "op": "ADD"
    },
    "5494": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5495": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5496": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5497": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5498": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5499": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "5"
    },
    "5500": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5501": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5502": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5503": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8771,
        8803
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5504": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8764,
        8803
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "5505": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7753,
        8808
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5506": {
      "op": "POP"
    },
    "5507": {
      "op": "POP"
    },
    "5508": {
      "op": "POP"
    },
    "5509": {
      "op": "POP"
    },
    "5510": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7753,
        8808
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5511": {
      "op": "JUMPDEST"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "DUP1"
    },
    "5514": {
      "op": "SLOAD"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1593"
    },
    "5518": {
      "op": "SWAP1"
    },
    "5519": {
      "op": "PUSH2",
      "value": "0x1906"
    },
    "5522": {
      "jump": "i",
      "op": "JUMP"
    },
    "5523": {
      "op": "JUMPDEST"
    },
    "5524": {
      "op": "SWAP1"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5527": {
      "op": "MSTORE"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5532": {
      "op": "KECCAK256"
    },
    "5533": {
      "op": "SWAP1"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5536": {
      "op": "ADD"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5539": {
      "op": "SWAP1"
    },
    "5540": {
      "op": "DIV"
    },
    "5541": {
      "op": "DUP2"
    },
    "5542": {
      "op": "ADD"
    },
    "5543": {
      "op": "SWAP3"
    },
    "5544": {
      "op": "DUP3"
    },
    "5545": {
      "op": "PUSH2",
      "value": "0x15B5"
    },
    "5548": {
      "op": "JUMPI"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5551": {
      "op": "DUP6"
    },
    "5552": {
      "op": "SSTORE"
    },
    "5553": {
      "op": "PUSH2",
      "value": "0x15FB"
    },
    "5556": {
      "op": "JUMP"
    },
    "5557": {
      "op": "JUMPDEST"
    },
    "5558": {
      "op": "DUP3"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5561": {
      "op": "LT"
    },
    "5562": {
      "op": "PUSH2",
      "value": "0x15CE"
    },
    "5565": {
      "op": "JUMPI"
    },
    "5566": {
      "op": "DUP1"
    },
    "5567": {
      "op": "MLOAD"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5570": {
      "op": "NOT"
    },
    "5571": {
      "op": "AND"
    },
    "5572": {
      "op": "DUP4"
    },
    "5573": {
      "op": "DUP1"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "op": "OR"
    },
    "5576": {
      "op": "DUP6"
    },
    "5577": {
      "op": "SSTORE"
    },
    "5578": {
      "op": "PUSH2",
      "value": "0x15FB"
    },
    "5581": {
      "op": "JUMP"
    },
    "5582": {
      "op": "JUMPDEST"
    },
    "5583": {
      "op": "DUP3"
    },
    "5584": {
      "op": "DUP1"
    },
    "5585": {
      "op": "ADD"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5588": {
      "op": "ADD"
    },
    "5589": {
      "op": "DUP6"
    },
    "5590": {
      "op": "SSTORE"
    },
    "5591": {
      "op": "DUP3"
    },
    "5592": {
      "op": "ISZERO"
    },
    "5593": {
      "op": "PUSH2",
      "value": "0x15FB"
    },
    "5596": {
      "op": "JUMPI"
    },
    "5597": {
      "op": "SWAP2"
    },
    "5598": {
      "op": "DUP3"
    },
    "5599": {
      "op": "ADD"
    },
    "5600": {
      "op": "JUMPDEST"
    },
    "5601": {
      "op": "DUP3"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "GT"
    },
    "5604": {
      "op": "ISZERO"
    },
    "5605": {
      "op": "PUSH2",
      "value": "0x15FB"
    },
    "5608": {
      "op": "JUMPI"
    },
    "5609": {
      "op": "DUP3"
    },
    "5610": {
      "op": "MLOAD"
    },
    "5611": {
      "op": "DUP3"
    },
    "5612": {
      "op": "SSTORE"
    },
    "5613": {
      "op": "SWAP2"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "SWAP2"
    },
    "5618": {
      "op": "SWAP1"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "SWAP1"
    },
    "5623": {
      "op": "PUSH2",
      "value": "0x15E0"
    },
    "5626": {
      "op": "JUMP"
    },
    "5627": {
      "op": "JUMPDEST"
    },
    "5628": {
      "op": "POP"
    },
    "5629": {
      "op": "PUSH2",
      "value": "0x1607"
    },
    "5632": {
      "op": "SWAP3"
    },
    "5633": {
      "op": "SWAP2"
    },
    "5634": {
      "op": "POP"
    },
    "5635": {
      "op": "PUSH2",
      "value": "0x160B"
    },
    "5638": {
      "jump": "i",
      "op": "JUMP"
    },
    "5639": {
      "op": "JUMPDEST"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "SWAP1"
    },
    "5642": {
      "jump": "o",
      "op": "JUMP"
    },
    "5643": {
      "op": "JUMPDEST"
    },
    "5644": {
      "op": "JUMPDEST"
    },
    "5645": {
      "op": "DUP1"
    },
    "5646": {
      "op": "DUP3"
    },
    "5647": {
      "op": "GT"
    },
    "5648": {
      "op": "ISZERO"
    },
    "5649": {
      "op": "PUSH2",
      "value": "0x1607"
    },
    "5652": {
      "op": "JUMPI"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "op": "DUP2"
    },
    "5656": {
      "op": "SSTORE"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "PUSH2",
      "value": "0x160C"
    },
    "5663": {
      "op": "JUMP"
    },
    "5664": {
      "op": "JUMPDEST"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5669": {
      "op": "DUP3"
    },
    "5670": {
      "op": "DUP5"
    },
    "5671": {
      "op": "SUB"
    },
    "5672": {
      "op": "SLT"
    },
    "5673": {
      "op": "ISZERO"
    },
    "5674": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "5677": {
      "op": "JUMPI"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5680": {
      "op": "DUP1"
    },
    "5681": {
      "op": "REVERT"
    },
    "5682": {
      "op": "JUMPDEST"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "op": "CALLDATALOAD"
    },
    "5685": {
      "op": "SWAP2"
    },
    "5686": {
      "op": "SWAP1"
    },
    "5687": {
      "op": "POP"
    },
    "5688": {
      "jump": "o",
      "op": "JUMP"
    },
    "5689": {
      "op": "JUMPDEST"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5692": {
      "op": "DUP2"
    },
    "5693": {
      "op": "MLOAD"
    },
    "5694": {
      "op": "DUP1"
    },
    "5695": {
      "op": "DUP5"
    },
    "5696": {
      "op": "MSTORE"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5699": {
      "op": "JUMPDEST"
    },
    "5700": {
      "op": "DUP2"
    },
    "5701": {
      "op": "DUP2"
    },
    "5702": {
      "op": "LT"
    },
    "5703": {
      "op": "ISZERO"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0x165F"
    },
    "5707": {
      "op": "JUMPI"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5710": {
      "op": "DUP2"
    },
    "5711": {
      "op": "DUP6"
    },
    "5712": {
      "op": "ADD"
    },
    "5713": {
      "op": "DUP2"
    },
    "5714": {
      "op": "ADD"
    },
    "5715": {
      "op": "MLOAD"
    },
    "5716": {
      "op": "DUP7"
    },
    "5717": {
      "op": "DUP4"
    },
    "5718": {
      "op": "ADD"
    },
    "5719": {
      "op": "DUP3"
    },
    "5720": {
      "op": "ADD"
    },
    "5721": {
      "op": "MSTORE"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x1643"
    },
    "5726": {
      "op": "JUMP"
    },
    "5727": {
      "op": "JUMPDEST"
    },
    "5728": {
      "op": "DUP2"
    },
    "5729": {
      "op": "DUP2"
    },
    "5730": {
      "op": "GT"
    },
    "5731": {
      "op": "ISZERO"
    },
    "5732": {
      "op": "PUSH2",
      "value": "0x1671"
    },
    "5735": {
      "op": "JUMPI"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5740": {
      "op": "DUP4"
    },
    "5741": {
      "op": "DUP8"
    },
    "5742": {
      "op": "ADD"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "MSTORE"
    },
    "5745": {
      "op": "JUMPDEST"
    },
    "5746": {
      "op": "POP"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5752": {
      "op": "NOT"
    },
    "5753": {
      "op": "AND"
    },
    "5754": {
      "op": "SWAP3"
    },
    "5755": {
      "op": "SWAP1"
    },
    "5756": {
      "op": "SWAP3"
    },
    "5757": {
      "op": "ADD"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5760": {
      "op": "ADD"
    },
    "5761": {
      "op": "SWAP3"
    },
    "5762": {
      "op": "SWAP2"
    },
    "5763": {
      "op": "POP"
    },
    "5764": {
      "op": "POP"
    },
    "5765": {
      "jump": "o",
      "op": "JUMP"
    },
    "5766": {
      "op": "JUMPDEST"
    },
    "5767": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5774": {
      "op": "SHL"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5777": {
      "op": "MSTORE"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5787": {
      "op": "REVERT"
    },
    "5788": {
      "op": "JUMPDEST"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5791": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5794": {
      "op": "DUP13"
    },
    "5795": {
      "op": "DUP4"
    },
    "5796": {
      "op": "MSTORE"
    },
    "5797": {
      "op": "DUP1"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5800": {
      "op": "DUP5"
    },
    "5801": {
      "op": "ADD"
    },
    "5802": {
      "op": "MSTORE"
    },
    "5803": {
      "op": "PUSH2",
      "value": "0x16B6"
    },
    "5806": {
      "op": "DUP2"
    },
    "5807": {
      "op": "DUP5"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "op": "DUP14"
    },
    "5810": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "5813": {
      "jump": "i",
      "op": "JUMP"
    },
    "5814": {
      "op": "JUMPDEST"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5817": {
      "op": "DUP5"
    },
    "5818": {
      "op": "ADD"
    },
    "5819": {
      "op": "DUP13"
    },
    "5820": {
      "op": "SWAP1"
    },
    "5821": {
      "op": "MSTORE"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5824": {
      "op": "DUP5"
    },
    "5825": {
      "op": "ADD"
    },
    "5826": {
      "op": "DUP12"
    },
    "5827": {
      "op": "SWAP1"
    },
    "5828": {
      "op": "MSTORE"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5835": {
      "op": "SHL"
    },
    "5836": {
      "op": "SUB"
    },
    "5837": {
      "op": "DUP11"
    },
    "5838": {
      "op": "DUP2"
    },
    "5839": {
      "op": "AND"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5842": {
      "op": "DUP7"
    },
    "5843": {
      "op": "ADD"
    },
    "5844": {
      "op": "MSTORE"
    },
    "5845": {
      "op": "DUP10"
    },
    "5846": {
      "op": "AND"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5849": {
      "op": "DUP6"
    },
    "5850": {
      "op": "ADD"
    },
    "5851": {
      "op": "MSTORE"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5854": {
      "op": "DUP5"
    },
    "5855": {
      "op": "ADD"
    },
    "5856": {
      "op": "DUP9"
    },
    "5857": {
      "op": "SWAP1"
    },
    "5858": {
      "op": "MSTORE"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5861": {
      "op": "DUP5"
    },
    "5862": {
      "op": "ADD"
    },
    "5863": {
      "op": "DUP8"
    },
    "5864": {
      "op": "SWAP1"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "SWAP2"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5871": {
      "op": "DUP5"
    },
    "5872": {
      "op": "LT"
    },
    "5873": {
      "op": "PUSH2",
      "value": "0x170A"
    },
    "5876": {
      "op": "JUMPI"
    },
    "5877": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5884": {
      "op": "SHL"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5887": {
      "op": "MSTORE"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5892": {
      "op": "MSTORE"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5897": {
      "op": "REVERT"
    },
    "5898": {
      "op": "JUMPDEST"
    },
    "5899": {
      "op": "DUP4"
    },
    "5900": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5903": {
      "op": "DUP4"
    },
    "5904": {
      "op": "ADD"
    },
    "5905": {
      "op": "MSTORE"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "ISZERO"
    },
    "5908": {
      "op": "ISZERO"
    },
    "5909": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5912": {
      "op": "DUP4"
    },
    "5913": {
      "op": "ADD"
    },
    "5914": {
      "op": "MSTORE"
    },
    "5915": {
      "op": "SWAP12"
    },
    "5916": {
      "op": "SWAP11"
    },
    "5917": {
      "op": "POP"
    },
    "5918": {
      "op": "POP"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "op": "POP"
    },
    "5921": {
      "op": "POP"
    },
    "5922": {
      "op": "POP"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "op": "POP"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "jump": "o",
      "op": "JUMP"
    },
    "5929": {
      "op": "JUMPDEST"
    },
    "5930": {
      "op": "DUP1"
    },
    "5931": {
      "op": "CALLDATALOAD"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5938": {
      "op": "SHL"
    },
    "5939": {
      "op": "SUB"
    },
    "5940": {
      "op": "DUP2"
    },
    "5941": {
      "op": "AND"
    },
    "5942": {
      "op": "DUP2"
    },
    "5943": {
      "op": "EQ"
    },
    "5944": {
      "op": "PUSH2",
      "value": "0x1740"
    },
    "5947": {
      "op": "JUMPI"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5950": {
      "op": "DUP1"
    },
    "5951": {
      "op": "REVERT"
    },
    "5952": {
      "op": "JUMPDEST"
    },
    "5953": {
      "op": "SWAP2"
    },
    "5954": {
      "op": "SWAP1"
    },
    "5955": {
      "op": "POP"
    },
    "5956": {
      "jump": "o",
      "op": "JUMP"
    },
    "5957": {
      "op": "JUMPDEST"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5960": {
      "op": "DUP1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5963": {
      "op": "DUP4"
    },
    "5964": {
      "op": "DUP6"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "op": "SLT"
    },
    "5967": {
      "op": "ISZERO"
    },
    "5968": {
      "op": "PUSH2",
      "value": "0x1758"
    },
    "5971": {
      "op": "JUMPI"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "REVERT"
    },
    "5976": {
      "op": "JUMPDEST"
    },
    "5977": {
      "op": "DUP3"
    },
    "5978": {
      "op": "CALLDATALOAD"
    },
    "5979": {
      "op": "SWAP2"
    },
    "5980": {
      "op": "POP"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x1768"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5986": {
      "op": "DUP5"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "PUSH2",
      "value": "0x1729"
    },
    "5991": {
      "jump": "i",
      "op": "JUMP"
    },
    "5992": {
      "op": "JUMPDEST"
    },
    "5993": {
      "op": "SWAP1"
    },
    "5994": {
      "op": "POP"
    },
    "5995": {
      "op": "SWAP3"
    },
    "5996": {
      "op": "POP"
    },
    "5997": {
      "op": "SWAP3"
    },
    "5998": {
      "op": "SWAP1"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "jump": "o",
      "op": "JUMP"
    },
    "6001": {
      "op": "JUMPDEST"
    },
    "6002": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6012": {
      "op": "MSTORE"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6017": {
      "op": "MSTORE"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6022": {
      "op": "REVERT"
    },
    "6023": {
      "op": "JUMPDEST"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6026": {
      "op": "DUP1"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6031": {
      "op": "DUP5"
    },
    "6032": {
      "op": "DUP7"
    },
    "6033": {
      "op": "SUB"
    },
    "6034": {
      "op": "SLT"
    },
    "6035": {
      "op": "ISZERO"
    },
    "6036": {
      "op": "PUSH2",
      "value": "0x179C"
    },
    "6039": {
      "op": "JUMPI"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6042": {
      "op": "DUP1"
    },
    "6043": {
      "op": "REVERT"
    },
    "6044": {
      "op": "JUMPDEST"
    },
    "6045": {
      "op": "DUP4"
    },
    "6046": {
      "op": "CALLDATALOAD"
    },
    "6047": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6056": {
      "op": "DUP1"
    },
    "6057": {
      "op": "DUP3"
    },
    "6058": {
      "op": "GT"
    },
    "6059": {
      "op": "ISZERO"
    },
    "6060": {
      "op": "PUSH2",
      "value": "0x17B4"
    },
    "6063": {
      "op": "JUMPI"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6066": {
      "op": "DUP1"
    },
    "6067": {
      "op": "REVERT"
    },
    "6068": {
      "op": "JUMPDEST"
    },
    "6069": {
      "op": "DUP2"
    },
    "6070": {
      "op": "DUP7"
    },
    "6071": {
      "op": "ADD"
    },
    "6072": {
      "op": "SWAP2"
    },
    "6073": {
      "op": "POP"
    },
    "6074": {
      "op": "DUP7"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6077": {
      "op": "DUP4"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "op": "SLT"
    },
    "6080": {
      "op": "PUSH2",
      "value": "0x17C8"
    },
    "6083": {
      "op": "JUMPI"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "DUP1"
    },
    "6087": {
      "op": "REVERT"
    },
    "6088": {
      "op": "JUMPDEST"
    },
    "6089": {
      "op": "DUP2"
    },
    "6090": {
      "op": "CALLDATALOAD"
    },
    "6091": {
      "op": "DUP2"
    },
    "6092": {
      "op": "DUP2"
    },
    "6093": {
      "op": "GT"
    },
    "6094": {
      "op": "ISZERO"
    },
    "6095": {
      "op": "PUSH2",
      "value": "0x17DA"
    },
    "6098": {
      "op": "JUMPI"
    },
    "6099": {
      "op": "PUSH2",
      "value": "0x17DA"
    },
    "6102": {
      "op": "PUSH2",
      "value": "0x1771"
    },
    "6105": {
      "jump": "i",
      "op": "JUMP"
    },
    "6106": {
      "op": "JUMPDEST"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6109": {
      "op": "MLOAD"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6112": {
      "op": "DUP3"
    },
    "6113": {
      "op": "ADD"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6116": {
      "op": "NOT"
    },
    "6117": {
      "op": "SWAP1"
    },
    "6118": {
      "op": "DUP2"
    },
    "6119": {
      "op": "AND"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6122": {
      "op": "ADD"
    },
    "6123": {
      "op": "AND"
    },
    "6124": {
      "op": "DUP2"
    },
    "6125": {
      "op": "ADD"
    },
    "6126": {
      "op": "SWAP1"
    },
    "6127": {
      "op": "DUP4"
    },
    "6128": {
      "op": "DUP3"
    },
    "6129": {
      "op": "GT"
    },
    "6130": {
      "op": "DUP2"
    },
    "6131": {
      "op": "DUP4"
    },
    "6132": {
      "op": "LT"
    },
    "6133": {
      "op": "OR"
    },
    "6134": {
      "op": "ISZERO"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x1802"
    },
    "6138": {
      "op": "JUMPI"
    },
    "6139": {
      "op": "PUSH2",
      "value": "0x1802"
    },
    "6142": {
      "op": "PUSH2",
      "value": "0x1771"
    },
    "6145": {
      "jump": "i",
      "op": "JUMP"
    },
    "6146": {
      "op": "JUMPDEST"
    },
    "6147": {
      "op": "DUP2"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6150": {
      "op": "MSTORE"
    },
    "6151": {
      "op": "DUP3"
    },
    "6152": {
      "op": "DUP2"
    },
    "6153": {
      "op": "MSTORE"
    },
    "6154": {
      "op": "DUP10"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6157": {
      "op": "DUP5"
    },
    "6158": {
      "op": "DUP8"
    },
    "6159": {
      "op": "ADD"
    },
    "6160": {
      "op": "ADD"
    },
    "6161": {
      "op": "GT"
    },
    "6162": {
      "op": "ISZERO"
    },
    "6163": {
      "op": "PUSH2",
      "value": "0x181B"
    },
    "6166": {
      "op": "JUMPI"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6169": {
      "op": "DUP1"
    },
    "6170": {
      "op": "REVERT"
    },
    "6171": {
      "op": "JUMPDEST"
    },
    "6172": {
      "op": "DUP3"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6175": {
      "op": "DUP7"
    },
    "6176": {
      "op": "ADD"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6179": {
      "op": "DUP4"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "CALLDATACOPY"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6186": {
      "op": "DUP5"
    },
    "6187": {
      "op": "DUP4"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "op": "ADD"
    },
    "6190": {
      "op": "MSTORE"
    },
    "6191": {
      "op": "DUP1"
    },
    "6192": {
      "op": "SWAP8"
    },
    "6193": {
      "op": "POP"
    },
    "6194": {
      "op": "POP"
    },
    "6195": {
      "op": "POP"
    },
    "6196": {
      "op": "POP"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "op": "POP"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6201": {
      "op": "DUP5"
    },
    "6202": {
      "op": "ADD"
    },
    "6203": {
      "op": "CALLDATALOAD"
    },
    "6204": {
      "op": "SWAP2"
    },
    "6205": {
      "op": "POP"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6208": {
      "op": "DUP5"
    },
    "6209": {
      "op": "ADD"
    },
    "6210": {
      "op": "CALLDATALOAD"
    },
    "6211": {
      "op": "SWAP1"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "op": "SWAP3"
    },
    "6214": {
      "op": "POP"
    },
    "6215": {
      "op": "SWAP3"
    },
    "6216": {
      "op": "POP"
    },
    "6217": {
      "op": "SWAP3"
    },
    "6218": {
      "jump": "o",
      "op": "JUMP"
    },
    "6219": {
      "op": "JUMPDEST"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6222": {
      "op": "DUP2"
    },
    "6223": {
      "op": "MSTORE"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6226": {
      "op": "PUSH2",
      "value": "0x185E"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6231": {
      "op": "DUP4"
    },
    "6232": {
      "op": "ADD"
    },
    "6233": {
      "op": "DUP9"
    },
    "6234": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "6237": {
      "jump": "i",
      "op": "JUMP"
    },
    "6238": {
      "op": "JUMPDEST"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6245": {
      "op": "SHL"
    },
    "6246": {
      "op": "SUB"
    },
    "6247": {
      "op": "SWAP7"
    },
    "6248": {
      "op": "DUP8"
    },
    "6249": {
      "op": "AND"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6252": {
      "op": "DUP5"
    },
    "6253": {
      "op": "ADD"
    },
    "6254": {
      "op": "MSTORE"
    },
    "6255": {
      "op": "SWAP5"
    },
    "6256": {
      "op": "SWAP1"
    },
    "6257": {
      "op": "SWAP6"
    },
    "6258": {
      "op": "AND"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6261": {
      "op": "DUP3"
    },
    "6262": {
      "op": "ADD"
    },
    "6263": {
      "op": "MSTORE"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6266": {
      "op": "DUP2"
    },
    "6267": {
      "op": "ADD"
    },
    "6268": {
      "op": "SWAP3"
    },
    "6269": {
      "op": "SWAP1"
    },
    "6270": {
      "op": "SWAP3"
    },
    "6271": {
      "op": "MSTORE"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6274": {
      "op": "SWAP1"
    },
    "6275": {
      "op": "SWAP2"
    },
    "6276": {
      "op": "ADD"
    },
    "6277": {
      "op": "MSTORE"
    },
    "6278": {
      "op": "SWAP3"
    },
    "6279": {
      "op": "SWAP2"
    },
    "6280": {
      "op": "POP"
    },
    "6281": {
      "op": "POP"
    },
    "6282": {
      "jump": "o",
      "op": "JUMP"
    },
    "6283": {
      "op": "JUMPDEST"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6286": {
      "op": "DUP2"
    },
    "6287": {
      "op": "MSTORE"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6290": {
      "op": "PUSH2",
      "value": "0x189E"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6295": {
      "op": "DUP4"
    },
    "6296": {
      "op": "ADD"
    },
    "6297": {
      "op": "DUP9"
    },
    "6298": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "6301": {
      "jump": "i",
      "op": "JUMP"
    },
    "6302": {
      "op": "JUMPDEST"
    },
    "6303": {
      "op": "SWAP1"
    },
    "6304": {
      "op": "POP"
    },
    "6305": {
      "op": "DUP6"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6308": {
      "op": "DUP4"
    },
    "6309": {
      "op": "ADD"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "DUP5"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6314": {
      "op": "DUP4"
    },
    "6315": {
      "op": "ADD"
    },
    "6316": {
      "op": "MSTORE"
    },
    "6317": {
      "op": "DUP4"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6320": {
      "op": "DUP4"
    },
    "6321": {
      "op": "ADD"
    },
    "6322": {
      "op": "MSTORE"
    },
    "6323": {
      "op": "DUP3"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6326": {
      "op": "DUP4"
    },
    "6327": {
      "op": "ADD"
    },
    "6328": {
      "op": "MSTORE"
    },
    "6329": {
      "op": "SWAP7"
    },
    "6330": {
      "op": "SWAP6"
    },
    "6331": {
      "op": "POP"
    },
    "6332": {
      "op": "POP"
    },
    "6333": {
      "op": "POP"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "op": "POP"
    },
    "6337": {
      "jump": "o",
      "op": "JUMP"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6341": {
      "op": "DUP1"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6344": {
      "op": "DUP4"
    },
    "6345": {
      "op": "DUP6"
    },
    "6346": {
      "op": "SUB"
    },
    "6347": {
      "op": "SLT"
    },
    "6348": {
      "op": "ISZERO"
    },
    "6349": {
      "op": "PUSH2",
      "value": "0x18D5"
    },
    "6352": {
      "op": "JUMPI"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6355": {
      "op": "DUP1"
    },
    "6356": {
      "op": "REVERT"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "POP"
    },
    "6359": {
      "op": "POP"
    },
    "6360": {
      "op": "DUP1"
    },
    "6361": {
      "op": "CALLDATALOAD"
    },
    "6362": {
      "op": "SWAP3"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6365": {
      "op": "SWAP1"
    },
    "6366": {
      "op": "SWAP2"
    },
    "6367": {
      "op": "ADD"
    },
    "6368": {
      "op": "CALLDATALOAD"
    },
    "6369": {
      "op": "SWAP2"
    },
    "6370": {
      "op": "POP"
    },
    "6371": {
      "jump": "o",
      "op": "JUMP"
    },
    "6372": {
      "op": "JUMPDEST"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6377": {
      "op": "DUP3"
    },
    "6378": {
      "op": "DUP5"
    },
    "6379": {
      "op": "SUB"
    },
    "6380": {
      "op": "SLT"
    },
    "6381": {
      "op": "ISZERO"
    },
    "6382": {
      "op": "PUSH2",
      "value": "0x18F6"
    },
    "6385": {
      "op": "JUMPI"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6388": {
      "op": "DUP1"
    },
    "6389": {
      "op": "REVERT"
    },
    "6390": {
      "op": "JUMPDEST"
    },
    "6391": {
      "op": "PUSH2",
      "value": "0x18FF"
    },
    "6394": {
      "op": "DUP3"
    },
    "6395": {
      "op": "PUSH2",
      "value": "0x1729"
    },
    "6398": {
      "jump": "i",
      "op": "JUMP"
    },
    "6399": {
      "op": "JUMPDEST"
    },
    "6400": {
      "op": "SWAP4"
    },
    "6401": {
      "op": "SWAP3"
    },
    "6402": {
      "op": "POP"
    },
    "6403": {
      "op": "POP"
    },
    "6404": {
      "op": "POP"
    },
    "6405": {
      "jump": "o",
      "op": "JUMP"
    },
    "6406": {
      "op": "JUMPDEST"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6409": {
      "op": "DUP2"
    },
    "6410": {
      "op": "DUP2"
    },
    "6411": {
      "op": "SHR"
    },
    "6412": {
      "op": "SWAP1"
    },
    "6413": {
      "op": "DUP3"
    },
    "6414": {
      "op": "AND"
    },
    "6415": {
      "op": "DUP1"
    },
    "6416": {
      "op": "PUSH2",
      "value": "0x191A"
    },
    "6419": {
      "op": "JUMPI"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6422": {
      "op": "DUP3"
    },
    "6423": {
      "op": "AND"
    },
    "6424": {
      "op": "SWAP2"
    },
    "6425": {
      "op": "POP"
    },
    "6426": {
      "op": "JUMPDEST"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6429": {
      "op": "DUP3"
    },
    "6430": {
      "op": "LT"
    },
    "6431": {
      "op": "DUP2"
    },
    "6432": {
      "op": "EQ"
    },
    "6433": {
      "op": "ISZERO"
    },
    "6434": {
      "op": "PUSH2",
      "value": "0x193B"
    },
    "6437": {
      "op": "JUMPI"
    },
    "6438": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6445": {
      "op": "SHL"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6448": {
      "op": "MSTORE"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6453": {
      "op": "MSTORE"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6458": {
      "op": "REVERT"
    },
    "6459": {
      "op": "JUMPDEST"
    },
    "6460": {
      "op": "POP"
    },
    "6461": {
      "op": "SWAP2"
    },
    "6462": {
      "op": "SWAP1"
    },
    "6463": {
      "op": "POP"
    },
    "6464": {
      "jump": "o",
      "op": "JUMP"
    },
    "6465": {
      "op": "JUMPDEST"
    },
    "6466": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6473": {
      "op": "SHL"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6476": {
      "op": "MSTORE"
    },
    "6477": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6481": {
      "op": "MSTORE"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6486": {
      "op": "REVERT"
    },
    "6487": {
      "op": "JUMPDEST"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6490": {
      "op": "DUP3"
    },
    "6491": {
      "op": "NOT"
    },
    "6492": {
      "op": "DUP3"
    },
    "6493": {
      "op": "GT"
    },
    "6494": {
      "op": "ISZERO"
    },
    "6495": {
      "op": "PUSH2",
      "value": "0x196A"
    },
    "6498": {
      "op": "JUMPI"
    },
    "6499": {
      "op": "PUSH2",
      "value": "0x196A"
    },
    "6502": {
      "op": "PUSH2",
      "value": "0x1941"
    },
    "6505": {
      "jump": "i",
      "op": "JUMP"
    },
    "6506": {
      "op": "JUMPDEST"
    },
    "6507": {
      "op": "POP"
    },
    "6508": {
      "op": "ADD"
    },
    "6509": {
      "op": "SWAP1"
    },
    "6510": {
      "jump": "o",
      "op": "JUMP"
    },
    "6511": {
      "op": "JUMPDEST"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6514": {
      "op": "DUP1"
    },
    "6515": {
      "op": "DUP3"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "DUP2"
    },
    "6518": {
      "op": "DUP2"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "op": "MSTORE"
    },
    "6521": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6556": {
      "op": "DUP3"
    },
    "6557": {
      "op": "ADD"
    },
    "6558": {
      "op": "MSTORE"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6561": {
      "op": "ADD"
    },
    "6562": {
      "op": "SWAP1"
    },
    "6563": {
      "jump": "o",
      "op": "JUMP"
    },
    "6564": {
      "op": "JUMPDEST"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6567": {
      "op": "DUP2"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6570": {
      "op": "NOT"
    },
    "6571": {
      "op": "DIV"
    },
    "6572": {
      "op": "DUP4"
    },
    "6573": {
      "op": "GT"
    },
    "6574": {
      "op": "DUP3"
    },
    "6575": {
      "op": "ISZERO"
    },
    "6576": {
      "op": "ISZERO"
    },
    "6577": {
      "op": "AND"
    },
    "6578": {
      "op": "ISZERO"
    },
    "6579": {
      "op": "PUSH2",
      "value": "0x19BE"
    },
    "6582": {
      "op": "JUMPI"
    },
    "6583": {
      "op": "PUSH2",
      "value": "0x19BE"
    },
    "6586": {
      "op": "PUSH2",
      "value": "0x1941"
    },
    "6589": {
      "jump": "i",
      "op": "JUMP"
    },
    "6590": {
      "op": "JUMPDEST"
    },
    "6591": {
      "op": "POP"
    },
    "6592": {
      "op": "MUL"
    },
    "6593": {
      "op": "SWAP1"
    },
    "6594": {
      "jump": "o",
      "op": "JUMP"
    },
    "6595": {
      "op": "JUMPDEST"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6598": {
      "op": "DUP3"
    },
    "6599": {
      "op": "DUP3"
    },
    "6600": {
      "op": "LT"
    },
    "6601": {
      "op": "ISZERO"
    },
    "6602": {
      "op": "PUSH2",
      "value": "0x19D5"
    },
    "6605": {
      "op": "JUMPI"
    },
    "6606": {
      "op": "PUSH2",
      "value": "0x19D5"
    },
    "6609": {
      "op": "PUSH2",
      "value": "0x1941"
    },
    "6612": {
      "jump": "i",
      "op": "JUMP"
    },
    "6613": {
      "op": "JUMPDEST"
    },
    "6614": {
      "op": "POP"
    },
    "6615": {
      "op": "SUB"
    },
    "6616": {
      "op": "SWAP1"
    },
    "6617": {
      "jump": "o",
      "op": "JUMP"
    },
    "6618": {
      "op": "JUMPDEST"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6623": {
      "op": "DUP3"
    },
    "6624": {
      "op": "DUP5"
    },
    "6625": {
      "op": "SUB"
    },
    "6626": {
      "op": "SLT"
    },
    "6627": {
      "op": "ISZERO"
    },
    "6628": {
      "op": "PUSH2",
      "value": "0x19EC"
    },
    "6631": {
      "op": "JUMPI"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6634": {
      "op": "DUP1"
    },
    "6635": {
      "op": "REVERT"
    },
    "6636": {
      "op": "JUMPDEST"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "MLOAD"
    },
    "6639": {
      "op": "SWAP2"
    },
    "6640": {
      "op": "SWAP1"
    },
    "6641": {
      "op": "POP"
    },
    "6642": {
      "jump": "o",
      "op": "JUMP"
    },
    "6643": {
      "op": "JUMPDEST"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6646": {
      "op": "DUP3"
    },
    "6647": {
      "op": "PUSH2",
      "value": "0x1A10"
    },
    "6650": {
      "op": "JUMPI"
    },
    "6651": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6658": {
      "op": "SHL"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6661": {
      "op": "MSTORE"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6666": {
      "op": "MSTORE"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6671": {
      "op": "REVERT"
    },
    "6672": {
      "op": "JUMPDEST"
    },
    "6673": {
      "op": "POP"
    },
    "6674": {
      "op": "MOD"
    },
    "6675": {
      "op": "SWAP1"
    },
    "6676": {
      "jump": "o",
      "op": "JUMP"
    },
    "6677": {
      "op": "JUMPDEST"
    },
    "6678": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6685": {
      "op": "SHL"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6688": {
      "op": "MSTORE"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6693": {
      "op": "MSTORE"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6698": {
      "op": "REVERT"
    },
    "6699": {
      "op": "JUMPDEST"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6704": {
      "op": "NOT"
    },
    "6705": {
      "op": "DUP3"
    },
    "6706": {
      "op": "EQ"
    },
    "6707": {
      "op": "ISZERO"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x1A3F"
    },
    "6711": {
      "op": "JUMPI"
    },
    "6712": {
      "op": "PUSH2",
      "value": "0x1A3F"
    },
    "6715": {
      "op": "PUSH2",
      "value": "0x1941"
    },
    "6718": {
      "jump": "i",
      "op": "JUMP"
    },
    "6719": {
      "op": "JUMPDEST"
    },
    "6720": {
      "op": "POP"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6723": {
      "op": "ADD"
    },
    "6724": {
      "op": "SWAP1"
    },
    "6725": {
      "jump": "o",
      "op": "JUMP"
    },
    "6726": {
      "op": "JUMPDEST"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6729": {
      "op": "DUP1"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6732": {
      "op": "SHL"
    },
    "6733": {
      "op": "SUB"
    },
    "6734": {
      "op": "DUP5"
    },
    "6735": {
      "op": "AND"
    },
    "6736": {
      "op": "DUP2"
    },
    "6737": {
      "op": "MSTORE"
    },
    "6738": {
      "op": "DUP3"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6741": {
      "op": "DUP3"
    },
    "6742": {
      "op": "ADD"
    },
    "6743": {
      "op": "MSTORE"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6748": {
      "op": "DUP3"
    },
    "6749": {
      "op": "ADD"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6753": {
      "op": "PUSH2",
      "value": "0x1A6D"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6758": {
      "op": "DUP4"
    },
    "6759": {
      "op": "ADD"
    },
    "6760": {
      "op": "DUP5"
    },
    "6761": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "6764": {
      "jump": "i",
      "op": "JUMP"
    },
    "6765": {
      "op": "JUMPDEST"
    },
    "6766": {
      "op": "SWAP6"
    },
    "6767": {
      "op": "SWAP5"
    },
    "6768": {
      "op": "POP"
    },
    "6769": {
      "op": "POP"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "op": "POP"
    },
    "6772": {
      "op": "POP"
    },
    "6773": {
      "jump": "o",
      "op": "JUMP"
    },
    "6774": {
      "op": "JUMPDEST"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6779": {
      "op": "DUP3"
    },
    "6780": {
      "op": "DUP5"
    },
    "6781": {
      "op": "SUB"
    },
    "6782": {
      "op": "SLT"
    },
    "6783": {
      "op": "ISZERO"
    },
    "6784": {
      "op": "PUSH2",
      "value": "0x1A88"
    },
    "6787": {
      "op": "JUMPI"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6790": {
      "op": "DUP1"
    },
    "6791": {
      "op": "REVERT"
    },
    "6792": {
      "op": "JUMPDEST"
    },
    "6793": {
      "op": "DUP2"
    },
    "6794": {
      "op": "MLOAD"
    },
    "6795": {
      "op": "DUP1"
    },
    "6796": {
      "op": "ISZERO"
    },
    "6797": {
      "op": "ISZERO"
    },
    "6798": {
      "op": "DUP2"
    },
    "6799": {
      "op": "EQ"
    },
    "6800": {
      "op": "PUSH2",
      "value": "0x18FF"
    },
    "6803": {
      "op": "JUMPI"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6806": {
      "op": "DUP1"
    },
    "6807": {
      "op": "REVERT"
    }
  },
  "sha1": "3f09648ac7b249887a5ae2a7097a7f7aca13dfd0",
  "source": "// contracts/CharityRafflev0.1.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract CharityRaffle is Ownable, VRFConsumerBase {\n    using Counters for Counters.Counter;\n\n    address public linkTokenAddress;\n    uint256 public linkFee;\n    bytes32 public VRFKeyHash;\n    // A contstructor to deal with randomness\n    uint256 public expirationPeriod;\n    constructor(uint256 _expirationPeriod, address _vrfCoordinator, address _linkTokenAddress, uint256 _linkFee, bytes32 _VRFKeyHash) VRFConsumerBase(_vrfCoordinator,_linkTokenAddress){\n        linkFee = _linkFee;\n        VRFKeyHash = _VRFKeyHash;\n        linkTokenAddress = _linkTokenAddress;\n        expirationPeriod = _expirationPeriod;\n    }\n\n    event RequestRandomness(bytes32 requestId);\n    event WinnerChosen(uint256 raffleId, address payable winner, uint256 ticketIndex);\n\n    enum RaffleState {\n        Open,\n        SelectingWinner,\n        Finished,\n        Expired \n    }\n    // NotStarted: The raffle has not yet begun\n    // Open: The raffle is open for entry\n    // Closed: The raffle is closed for entry\n    // SelectingWinner: The raffle is closed and the winner is being selected\n    // Finished: The raffle is finished and the winner has been selected, beneficiary has been paid\n    // Expired: The raffle has expired since the benificiary has not ended it\n\n    struct Raffle {\n        uint256 id; // unique identifier for the raffle\n        string name; // name of the raffle\n        uint256 ticketCount; // number of tickets bought for this raffle\n        uint256 ticketPrice; // in wei\n        address payable beneficiary; // address of the beneficiary\n        address payable winner; // address of the winner of the raffle, by default it's 0x0\n        uint256 startTime; // unix timestamp of the start of the raffle\n        uint256 endTime; // unix timestamp of the end of the raffle\n        RaffleState state; // state of the raffle\n        mapping(address => uint256) ticketBalances; // mapping of address to ticket count\n        address[] ticketOwners; // array of addresses of the ticket owners (used for iteration through the ticket balances)\n        bool payedOut; // whether the raffle has been payed out\n    }\n\n    // Some rules of how raffles work\n    // 1. Anyone can make a new raffle\n    // 2. Anyone can buy tickets for any open raffle, and this can be for multiple raffles\n    // 3. Tickets are only refundable if the raffle expires, this means that the beneficiary has not claimed the raffle a week after it's end\n    // 4. The beneficiary can only end the raffle after the end time\n\n    Counters.Counter public RaffleCount;\n    mapping(uint256 => Raffle) public Raffles; // mapping of raffle id to raffle data\n    mapping(bytes32 => uint256) public VRFRequestIdTORaffleId; // mapping of VRF request id to raffle id\n\n    // A value that keeps track of all the change givent to the contract\n    uint256 public change = 0;\n\n    function CreateRaffle(string memory _raffleName, uint256 _ticketPrice, uint256 _raffleLength) public returns(uint256 raffleId){\n        RaffleCount.increment();\n        uint256 _id = RaffleCount.current();\n        Raffle storage raffle = Raffles[_id]; \n        raffle.id = _id;\n        raffle.name = _raffleName;\n        raffle.ticketCount = 0;\n        raffle.ticketPrice = _ticketPrice;\n        raffle.beneficiary = payable(msg.sender);\n        raffle.startTime = block.timestamp;\n        raffle.endTime = block.timestamp + _raffleLength;\n        raffle.state = RaffleState.Open;\n        raffle.winner = payable(0x0);\n        return _id;\n    }\n\n    // Some reader functions for getting info about raffles\n    function GetRaffleInfo(uint256 _id) public view returns (string memory name, address payable beneficiary, address payable winner, uint256 startTime, uint256 endTime) {\n        return (Raffles[_id].name, Raffles[_id].beneficiary, Raffles[_id].winner, Raffles[_id].startTime, Raffles[_id].endTime);\n    }\n\n    function GetRaffleTicketInfo(uint256 _id) public view returns (string memory name, uint256 startTime, uint256 endTime, uint256 ticketCount, uint256 ticketPrice) {\n        return (Raffles[_id].name, Raffles[_id].startTime, Raffles[_id].endTime, Raffles[_id].ticketCount, Raffles[_id].ticketPrice);\n    }\n\n    function GetRaffleBalance(uint256 _id, address owner) public view returns (uint256 balance) {\n        return Raffles[_id].ticketBalances[owner];\n    }\n\n    function GetRaffleCount() public view returns (uint256) {\n        return RaffleCount.current();\n    }\n\n    function ClaimRaffle(uint256 _id) public{\n        require(msg.sender == Raffles[_id].beneficiary, \"Only the beneficiary can claim the raffle\");\n        require(block.timestamp >= Raffles[_id].endTime, \"The raffle has not closed yet\");\n        require(Raffles[_id].endTime + expirationPeriod > block.timestamp, \"The raffle has expired and cannot be claimed\");\n        require(Raffles[_id].state == RaffleState.Open, \"The raffle is not avaible for claiming\");\n        require(IERC20(linkTokenAddress).balanceOf(address(this)) >=  linkFee, \"The contract needs to be paid link token to claim the raffle\");\n        Raffles[_id].state = RaffleState.SelectingWinner;\n        // Fire off the VRF to select the winner\n        bytes32 requestId = requestRandomness(VRFKeyHash, linkFee); // Return a bytes 32 which is the request ID\n        VRFRequestIdTORaffleId[requestId] = _id; // Map the request ID to the raffle ID\n        emit RequestRandomness(requestId);\n    }\n\n    // This is run by the VRF coordinator to finalize the winner\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness) internal override {\n        uint256 raffleId = VRFRequestIdTORaffleId[_requestId];\n        require(Raffles[raffleId].state == RaffleState.SelectingWinner, \"The raffle is not in the SelectingWinner state\");\n        require(_randomness >= 0, \"No randomness found\");\n        Raffles[raffleId].state = RaffleState.Finished;\n        uint256 winningTicketIndex = _randomness % Raffles[raffleId].ticketCount;\n        // Todo: Convert the winning ticket index to an address\n        uint256 ticketCounter = 0;\n        uint256 l = Raffles[raffleId].ticketOwners.length;\n        for (uint256 i = 0; i < l; i++) {\n            uint256 balance = Raffles[raffleId].ticketBalances[Raffles[raffleId].ticketOwners[i]];\n            if (ticketCounter <= winningTicketIndex && winningTicketIndex < ticketCounter + balance) { // We have found the winning ticket\n                Raffles[raffleId].winner = payable(Raffles[raffleId].ticketOwners[i]);\n                break;\n            }\n            ticketCounter += balance;\n        }\n        // Send the raffle money to the beneficiary\n        (Raffles[raffleId].payedOut, ) = payable(Raffles[raffleId].beneficiary).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketCount}(\"\");\n        emit WinnerChosen(raffleId, Raffles[raffleId].winner, winningTicketIndex);\n    }\n\n    // A function to buy tickets for a raffle\n    function BuyTickets(uint256 raffleId, uint256 _ticketCount) public payable {\n        require(Raffles[raffleId].state == RaffleState.Open, \"Raffle not open\");\n        require(block.timestamp < Raffles[raffleId].endTime, \"Raffle is closed\");\n        require(_ticketCount > 0, \"Ticket count must be greater than 0\");\n        require(msg.value >= Raffles[raffleId].ticketPrice * _ticketCount, \"Ticket price is greater than the amount sent\");\n        Raffles[raffleId].ticketCount += _ticketCount;\n        if (Raffles[raffleId].ticketBalances[msg.sender] == 0) { // This will be a list of all of the unique ticket owners (in the order they buy them but that dosent matter dose it)\n            Raffles[raffleId].ticketOwners.push(msg.sender);\n        }\n        Raffles[raffleId].ticketBalances[msg.sender] += _ticketCount;\n        // If the buyer is not in the ticket owners array, add him\n        change += msg.value - Raffles[raffleId].ticketPrice * _ticketCount;\n    }\n\n    // A function for the owner of the contract to collect all the change in the contract\n    function CollectChange() public onlyOwner returns (uint256){\n        require(change > 0, \"There is no change to collect!\");\n        payable(msg.sender).call{value: change}(\"\");\n        uint256 _change = change;\n        change = 0;\n        return _change;\n    }\n\n    // A function for ticket buys to be refunded all the tickets they own\n    function TicketRefund(uint256 raffleId) public{\n        require(block.timestamp >= Raffles[raffleId].endTime + expirationPeriod, \"The refund period has not ended yet\");\n        require(Raffles[raffleId].state != RaffleState.Finished, \"The raffle is finished\");\n        require(Raffles[raffleId].state != RaffleState.SelectingWinner, \"The raffle is selecting a winner.\");\n        // Update the expiration of the raffle\n        Raffles[raffleId].state = RaffleState.Expired;\n        // Send the money back to the buyer\n        (bool transfered, ) = payable(msg.sender).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketBalances[msg.sender]}(\"\");\n        if (transfered) {\n            Raffles[raffleId].ticketBalances[msg.sender] = 0;\n        }\n    }\n}",
  "sourceMap": "320:9058:7:-:0;;;3152:1;3128:25;;598:341;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:15;760:17;921:32:0;719:10:2;921:18:0;:32::i;:::-;-1:-1:-1;;;;;9370:32:4;;;;;9408;;;;788:7:7::1;:18:::0;;;;816:10:::1;:24:::0;850:16:::1;:36:::0;;-1:-1:-1;;;;;;850:36:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;896:16:7::1;:36:::0;320:9058;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:478::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;433:9;427:16;417:26;;462:49;507:2;496:9;492:18;462:49;:::i;:::-;452:59;;530:49;575:2;564:9;560:18;530:49;:::i;:::-;619:2;604:18;;598:25;663:3;648:19;;;642:26;196:478;;;;-1:-1:-1;520:59:8;598:25;642:26;196:478;-1:-1:-1;;;196:478:8:o;:::-;320:9058:7;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CharityRaffle.sol",
  "type": "contract"
}