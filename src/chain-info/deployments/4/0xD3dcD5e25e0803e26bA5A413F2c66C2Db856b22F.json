{"abi": [{"inputs": [{"internalType": "uint256", "name": "_expirationPeriod", "type": "uint256"}, {"internalType": "address", "name": "_vrfCoordinator", "type": "address"}, {"internalType": "address", "name": "_linkTokenAddress", "type": "address"}, {"internalType": "uint256", "name": "_linkFee", "type": "uint256"}, {"internalType": "bytes32", "name": "_VRFKeyHash", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "beneficiary", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "raffleId", "type": "uint256"}], "name": "RaffleCreated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "requestId", "type": "bytes32"}], "name": "RequestRandomness", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "raffleId", "type": "uint256"}, {"indexed": false, "internalType": "address payable", "name": "winner", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "ticketIndex", "type": "uint256"}], "name": "WinnerChosen", "type": "event"}, {"inputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}, {"internalType": "uint256", "name": "_ticketCount", "type": "uint256"}], "name": "BuyTickets", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "ClaimRaffle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "CollectChange", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_raffleName", "type": "string"}, {"internalType": "uint256", "name": "_ticketPrice", "type": "uint256"}, {"internalType": "uint256", "name": "_raffleLength", "type": "uint256"}], "name": "CreateRaffle", "outputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}, {"internalType": "address", "name": "owner", "type": "address"}], "name": "GetRaffleBalance", "outputs": [{"internalType": "uint256", "name": "balance", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "GetRaffleCount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "GetRaffleInfo", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "address payable", "name": "beneficiary", "type": "address"}, {"internalType": "address payable", "name": "winner", "type": "address"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "GetRaffleTicketInfo", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "uint256", "name": "ticketCount", "type": "uint256"}, {"internalType": "uint256", "name": "ticketPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "RaffleCount", "outputs": [{"internalType": "uint256", "name": "_value", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "Raffles", "outputs": [{"internalType": "uint256", "name": "id", "type": "uint256"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "ticketCount", "type": "uint256"}, {"internalType": "uint256", "name": "ticketPrice", "type": "uint256"}, {"internalType": "address payable", "name": "beneficiary", "type": "address"}, {"internalType": "address payable", "name": "winner", "type": "address"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "enum CharityRaffle.RaffleState", "name": "state", "type": "uint8"}, {"internalType": "bool", "name": "payedOut", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}], "name": "TicketRefund", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "VRFKeyHash", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "VRFRequestIdTORaffleId", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "change", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "expirationPeriod", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "linkFee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "linkTokenAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "requestId", "type": "bytes32"}, {"internalType": "uint256", "name": "randomness", "type": "uint256"}], "name": "rawFulfillRandomness", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol", "1": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol", "2": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol", "3": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol", "4": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol", "5": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFRequestIDBase.sol", "7": "contracts/CharityRaffle.sol"}, "ast": {"absolutePath": "contracts/CharityRaffle.sol", "exportedSymbols": {"CharityRaffle": [796], "Context": [1196], "Counters": [1053], "IERC20": [979], "LinkTokenInterface": [1341], "Ownable": [901], "VRFConsumerBase": [1174], "VRFRequestIDBase": [1246]}, "id": 797, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "67:23:7"}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 797, "sourceUnit": 902, "src": "92:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol", "file": "@openzeppelin/contracts/utils/Counters.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 797, "sourceUnit": 1054, "src": "145:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol", "file": "@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 797, "sourceUnit": 1175, "src": "198:63:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 797, "sourceUnit": 980, "src": "262:56:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 6, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 901, "src": "346:7:7"}, "id": 7, "nodeType": "InheritanceSpecifier", "src": "346:7:7"}, {"baseName": {"id": 8, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 1174, "src": "355:15:7"}, "id": 9, "nodeType": "InheritanceSpecifier", "src": "355:15:7"}], "canonicalName": "CharityRaffle", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 796, "linearizedBaseContracts": [796, 1174, 1246, 901, 1196], "name": "CharityRaffle", "nameLocation": "329:13:7", "nodeType": "ContractDefinition", "nodes": [{"id": 13, "libraryName": {"id": 10, "name": "Counters", "nodeType": "IdentifierPath", "referencedDeclaration": 1053, "src": "383:8:7"}, "nodeType": "UsingForDirective", "src": "377:36:7", "typeName": {"id": 12, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11, "name": "Counters.Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 985, "src": "396:16:7"}, "referencedDeclaration": 985, "src": "396:16:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$985_storage_ptr", "typeString": "struct Counters.Counter"}}}, {"constant": false, "functionSelector": "ef124faf", "id": 15, "mutability": "mutable", "name": "linkTokenAddress", "nameLocation": "434:16:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "419:31:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "419:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "01889611", "id": 17, "mutability": "mutable", "name": "linkFee", "nameLocation": "471:7:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "456:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "456:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "d1d3bde3", "id": 19, "mutability": "mutable", "name": "VRFKeyHash", "nameLocation": "499:10:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "484:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 18, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "484:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"constant": false, "functionSelector": "8897cad3", "id": 21, "mutability": "mutable", "name": "expirationPeriod", "nameLocation": "576:16:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "561:31:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "561:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"body": {"id": 54, "nodeType": "Block", "src": "778:161:7", "statements": [{"expression": {"id": 40, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 38, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "788:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 39, "name": "_linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "798:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "788:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 41, "nodeType": "ExpressionStatement", "src": "788:18:7"}, {"expression": {"id": 44, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 42, "name": "VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "816:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 43, "name": "_VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "829:11:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "816:24:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 45, "nodeType": "ExpressionStatement", "src": "816:24:7"}, {"expression": {"id": 48, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 46, "name": "linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "850:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 47, "name": "_linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "869:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "850:36:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 49, "nodeType": "ExpressionStatement", "src": "850:36:7"}, {"expression": {"id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 50, "name": "expirationPeriod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "896:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 51, "name": "_expirationPeriod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "915:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "896:36:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "896:36:7"}]}, "id": 55, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 34, "name": "_vrfCoordinator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25, "src": "744:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 35, "name": "_linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "760:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 36, "kind": "baseConstructorSpecifier", "modifierName": {"id": 33, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 1174, "src": "728:15:7"}, "nodeType": "ModifierInvocation", "src": "728:50:7"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 32, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 23, "mutability": "mutable", "name": "_expirationPeriod", "nameLocation": "618:17:7", "nodeType": "VariableDeclaration", "scope": 55, "src": "610:25:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "610:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "_vrfCoordinator", "nameLocation": "645:15:7", "nodeType": "VariableDeclaration", "scope": 55, "src": "637:23:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 24, "name": "address", "nodeType": "ElementaryTypeName", "src": "637:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "_linkTokenAddress", "nameLocation": "670:17:7", "nodeType": "VariableDeclaration", "scope": 55, "src": "662:25:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 26, "name": "address", "nodeType": "ElementaryTypeName", "src": "662:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 29, "mutability": "mutable", "name": "_linkFee", "nameLocation": "697:8:7", "nodeType": "VariableDeclaration", "scope": 55, "src": "689:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 28, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "689:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 31, "mutability": "mutable", "name": "_VRFKeyHash", "nameLocation": "715:11:7", "nodeType": "VariableDeclaration", "scope": 55, "src": "707:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 30, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "707:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "609:118:7"}, "returnParameters": {"id": 37, "nodeType": "ParameterList", "parameters": [], "src": "778:0:7"}, "scope": 796, "src": "598:341:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"anonymous": false, "id": 59, "name": "RequestRandomness", "nameLocation": "951:17:7", "nodeType": "EventDefinition", "parameters": {"id": 58, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 57, "indexed": false, "mutability": "mutable", "name": "requestId", "nameLocation": "977:9:7", "nodeType": "VariableDeclaration", "scope": 59, "src": "969:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 56, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "969:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "968:19:7"}, "src": "945:43:7"}, {"anonymous": false, "id": 67, "name": "WinnerChosen", "nameLocation": "999:12:7", "nodeType": "EventDefinition", "parameters": {"id": 66, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 61, "indexed": false, "mutability": "mutable", "name": "raffleId", "nameLocation": "1020:8:7", "nodeType": "VariableDeclaration", "scope": 67, "src": "1012:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 60, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1012:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 63, "indexed": false, "mutability": "mutable", "name": "winner", "nameLocation": "1046:6:7", "nodeType": "VariableDeclaration", "scope": 67, "src": "1030:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 62, "name": "address", "nodeType": "ElementaryTypeName", "src": "1030:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 65, "indexed": false, "mutability": "mutable", "name": "ticketIndex", "nameLocation": "1062:11:7", "nodeType": "VariableDeclaration", "scope": 67, "src": "1054:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 64, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1054:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1011:63:7"}, "src": "993:82:7"}, {"anonymous": false, "id": 73, "name": "RaffleCreated", "nameLocation": "1086:13:7", "nodeType": "EventDefinition", "parameters": {"id": 72, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 69, "indexed": false, "mutability": "mutable", "name": "beneficiary", "nameLocation": "1108:11:7", "nodeType": "VariableDeclaration", "scope": 73, "src": "1100:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 68, "name": "address", "nodeType": "ElementaryTypeName", "src": "1100:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 71, "indexed": false, "mutability": "mutable", "name": "raffleId", "nameLocation": "1129:8:7", "nodeType": "VariableDeclaration", "scope": 73, "src": "1121:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 70, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1121:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1099:39:7"}, "src": "1080:59:7"}, {"canonicalName": "CharityRaffle.RaffleState", "id": 78, "members": [{"id": 74, "name": "Open", "nameLocation": "1172:4:7", "nodeType": "EnumValue", "src": "1172:4:7"}, {"id": 75, "name": "SelectingWinner", "nameLocation": "1186:15:7", "nodeType": "EnumValue", "src": "1186:15:7"}, {"id": 76, "name": "Finished", "nameLocation": "1211:8:7", "nodeType": "EnumValue", "src": "1211:8:7"}, {"id": 77, "name": "Expired", "nameLocation": "1229:7:7", "nodeType": "EnumValue", "src": "1229:7:7"}], "name": "RaffleState", "nameLocation": "1150:11:7", "nodeType": "EnumDefinition", "src": "1145:98:7"}, {"canonicalName": "CharityRaffle.Raffle", "id": 107, "members": [{"constant": false, "id": 80, "mutability": "mutable", "name": "id", "nameLocation": "1673:2:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "1665:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 79, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1665:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 82, "mutability": "mutable", "name": "name", "nameLocation": "1728:4:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "1721:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 81, "name": "string", "nodeType": "ElementaryTypeName", "src": "1721:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 84, "mutability": "mutable", "name": "ticketCount", "nameLocation": "1772:11:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "1764:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 83, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1764:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 86, "mutability": "mutable", "name": "ticketPrice", "nameLocation": "1845:11:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "1837:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 85, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1837:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 88, "mutability": "mutable", "name": "beneficiary", "nameLocation": "1892:11:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "1876:27:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 87, "name": "address", "nodeType": "ElementaryTypeName", "src": "1876:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 90, "mutability": "mutable", "name": "winner", "nameLocation": "1959:6:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "1943:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 89, "name": "address", "nodeType": "ElementaryTypeName", "src": "1943:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 92, "mutability": "mutable", "name": "startTime", "nameLocation": "2043:9:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "2035:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 91, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2035:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 94, "mutability": "mutable", "name": "endTime", "nameLocation": "2115:7:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "2107:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 93, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2107:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 97, "mutability": "mutable", "name": "state", "nameLocation": "2187:5:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "2175:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}, "typeName": {"id": 96, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 95, "name": "RaffleState", "nodeType": "IdentifierPath", "referencedDeclaration": 78, "src": "2175:11:7"}, "referencedDeclaration": 78, "src": "2175:11:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "visibility": "internal"}, {"constant": false, "id": 101, "mutability": "mutable", "name": "ticketBalances", "nameLocation": "2253:14:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "2225:42:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 100, "keyType": {"id": 98, "name": "address", "nodeType": "ElementaryTypeName", "src": "2233:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "2225:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 99, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2244:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "internal"}, {"constant": false, "id": 104, "mutability": "mutable", "name": "ticketOwners", "nameLocation": "2325:12:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "2315:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 102, "name": "address", "nodeType": "ElementaryTypeName", "src": "2315:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 103, "nodeType": "ArrayTypeName", "src": "2315:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 106, "mutability": "mutable", "name": "payedOut", "nameLocation": "2444:8:7", "nodeType": "VariableDeclaration", "scope": 107, "src": "2439:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 105, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2439:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "Raffle", "nameLocation": "1648:6:7", "nodeType": "StructDefinition", "scope": 796, "src": "1641:859:7", "visibility": "public"}, {"constant": false, "functionSelector": "57529e6c", "id": 110, "mutability": "mutable", "name": "RaffleCount", "nameLocation": "2910:11:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "2886:35:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$985_storage", "typeString": "struct Counters.Counter"}, "typeName": {"id": 109, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 108, "name": "Counters.Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 985, "src": "2886:16:7"}, "referencedDeclaration": 985, "src": "2886:16:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$985_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1d5ccd9b", "id": 115, "mutability": "mutable", "name": "Raffles", "nameLocation": "2961:7:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "2927:41:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"}, "typeName": {"id": 114, "keyType": {"id": 111, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2935:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "2927:26:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"}, "valueType": {"id": 113, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 112, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 107, "src": "2946:6:7"}, "referencedDeclaration": 107, "src": "2946:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "27028a84", "id": 119, "mutability": "mutable", "name": "VRFRequestIdTORaffleId", "nameLocation": "3048:22:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "3013:57:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}, "typeName": {"id": 118, "keyType": {"id": 116, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3021:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "3013:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}, "valueType": {"id": 117, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3032:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "2ee79ded", "id": 122, "mutability": "mutable", "name": "change", "nameLocation": "3207:6:7", "nodeType": "VariableDeclaration", "scope": 796, "src": "3192:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 120, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3192:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 121, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3216:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"body": {"id": 223, "nodeType": "Block", "src": "3350:551:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 133, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "3360:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$985_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 135, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "increment", "nodeType": "MemberAccess", "referencedDeclaration": 1011, "src": "3360:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$985_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$985_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 136, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3360:23:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 137, "nodeType": "ExpressionStatement", "src": "3360:23:7"}, {"assignments": [139], "declarations": [{"constant": false, "id": 139, "mutability": "mutable", "name": "_id", "nameLocation": "3401:3:7", "nodeType": "VariableDeclaration", "scope": 223, "src": "3393:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 138, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3393:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 143, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 140, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "3407:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$985_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 141, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 997, "src": "3407:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$985_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$985_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 142, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3407:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3393:35:7"}, {"assignments": [146], "declarations": [{"constant": false, "id": 146, "mutability": "mutable", "name": "raffle", "nameLocation": "3453:6:7", "nodeType": "VariableDeclaration", "scope": 223, "src": "3438:21:7", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}, "typeName": {"id": 145, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 144, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 107, "src": "3438:6:7"}, "referencedDeclaration": 107, "src": "3438:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}, "visibility": "internal"}], "id": 150, "initialValue": {"baseExpression": {"id": 147, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "3462:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 149, "indexExpression": {"id": 148, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3470:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3462:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3438:36:7"}, {"expression": {"id": 155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 151, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3485:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 153, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 80, "src": "3485:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 154, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3497:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3485:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 156, "nodeType": "ExpressionStatement", "src": "3485:15:7"}, {"expression": {"id": 161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 157, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3510:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 159, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "3510:11:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 160, "name": "_raffleName", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 124, "src": "3524:11:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "3510:25:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 162, "nodeType": "ExpressionStatement", "src": "3510:25:7"}, {"expression": {"id": 167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 163, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3545:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 165, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "3545:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3566:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3545:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 168, "nodeType": "ExpressionStatement", "src": "3545:22:7"}, {"expression": {"id": 173, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 169, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3577:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 171, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "3577:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 172, "name": "_ticketPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 126, "src": "3598:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3577:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 174, "nodeType": "ExpressionStatement", "src": "3577:33:7"}, {"expression": {"id": 183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 175, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3620:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 177, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 88, "src": "3620:18:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 180, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3649:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3649:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 179, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3641:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 178, "name": "address", "nodeType": "ElementaryTypeName", "src": "3641:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3641:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3620:40:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 184, "nodeType": "ExpressionStatement", "src": "3620:40:7"}, {"expression": {"id": 190, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 185, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3670:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 187, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 92, "src": "3670:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 188, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3689:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3689:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3670:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 191, "nodeType": "ExpressionStatement", "src": "3670:34:7"}, {"expression": {"id": 199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 192, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3714:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 194, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "3714:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 198, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 195, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3731:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3731:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 197, "name": "_raffleLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 128, "src": "3749:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3731:31:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3714:48:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 200, "nodeType": "ExpressionStatement", "src": "3714:48:7"}, {"expression": {"id": 206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 201, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3772:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 203, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "3772:12:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 204, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "3787:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 205, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 74, "src": "3787:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "3772:31:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 207, "nodeType": "ExpressionStatement", "src": "3772:31:7"}, {"expression": {"id": 215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 208, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3813:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 210, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "3813:13:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "307830", "id": 213, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3837:3:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 212, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3829:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 211, "name": "address", "nodeType": "ElementaryTypeName", "src": "3829:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 214, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3829:12:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3813:28:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 216, "nodeType": "ExpressionStatement", "src": "3813:28:7"}, {"eventCall": {"arguments": [{"expression": {"id": 218, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 146, "src": "3870:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 219, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 88, "src": "3870:18:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 220, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3890:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 217, "name": "RaffleCreated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73, "src": "3856:13:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3856:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 222, "nodeType": "EmitStatement", "src": "3851:43:7"}]}, "functionSelector": "2fec9240", "id": 224, "implemented": true, "kind": "function", "modifiers": [], "name": "CreateRaffle", "nameLocation": "3233:12:7", "nodeType": "FunctionDefinition", "parameters": {"id": 129, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 124, "mutability": "mutable", "name": "_raffleName", "nameLocation": "3260:11:7", "nodeType": "VariableDeclaration", "scope": 224, "src": "3246:25:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 123, "name": "string", "nodeType": "ElementaryTypeName", "src": "3246:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 126, "mutability": "mutable", "name": "_ticketPrice", "nameLocation": "3281:12:7", "nodeType": "VariableDeclaration", "scope": 224, "src": "3273:20:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 125, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3273:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 128, "mutability": "mutable", "name": "_raffleLength", "nameLocation": "3303:13:7", "nodeType": "VariableDeclaration", "scope": 224, "src": "3295:21:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3295:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3245:72:7"}, "returnParameters": {"id": 132, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 131, "mutability": "mutable", "name": "raffleId", "nameLocation": "3341:8:7", "nodeType": "VariableDeclaration", "scope": 224, "src": "3333:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3333:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3332:18:7"}, "scope": 796, "src": "3224:677:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 261, "nodeType": "Block", "src": "4133:136:7", "statements": [{"expression": {"components": [{"expression": {"baseExpression": {"id": 239, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4151:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 241, "indexExpression": {"id": 240, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4159:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4151:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 242, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "4151:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"expression": {"baseExpression": {"id": 243, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4170:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 245, "indexExpression": {"id": 244, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4178:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4170:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 246, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 88, "src": "4170:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"expression": {"baseExpression": {"id": 247, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4196:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 249, "indexExpression": {"id": 248, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4204:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4196:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 250, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "4196:19:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"expression": {"baseExpression": {"id": 251, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4217:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 253, "indexExpression": {"id": 252, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4225:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4217:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 254, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 92, "src": "4217:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 255, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4241:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 257, "indexExpression": {"id": 256, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4249:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4241:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 258, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "4241:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 259, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4150:112:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint256_$", "typeString": "tuple(string storage ref,address payable,address payable,uint256,uint256)"}}, "functionReturnParameters": 238, "id": 260, "nodeType": "Return", "src": "4143:119:7"}]}, "functionSelector": "32dd45fb", "id": 262, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleInfo", "nameLocation": "3976:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 227, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 226, "mutability": "mutable", "name": "_id", "nameLocation": "3998:3:7", "nodeType": "VariableDeclaration", "scope": 262, "src": "3990:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 225, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3990:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3989:13:7"}, "returnParameters": {"id": 238, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 229, "mutability": "mutable", "name": "name", "nameLocation": "4038:4:7", "nodeType": "VariableDeclaration", "scope": 262, "src": "4024:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 228, "name": "string", "nodeType": "ElementaryTypeName", "src": "4024:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 231, "mutability": "mutable", "name": "beneficiary", "nameLocation": "4060:11:7", "nodeType": "VariableDeclaration", "scope": 262, "src": "4044:27:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 230, "name": "address", "nodeType": "ElementaryTypeName", "src": "4044:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 233, "mutability": "mutable", "name": "winner", "nameLocation": "4089:6:7", "nodeType": "VariableDeclaration", "scope": 262, "src": "4073:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 232, "name": "address", "nodeType": "ElementaryTypeName", "src": "4073:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 235, "mutability": "mutable", "name": "startTime", "nameLocation": "4105:9:7", "nodeType": "VariableDeclaration", "scope": 262, "src": "4097:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 234, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4097:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 237, "mutability": "mutable", "name": "endTime", "nameLocation": "4124:7:7", "nodeType": "VariableDeclaration", "scope": 262, "src": "4116:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 236, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4116:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4023:109:7"}, "scope": 796, "src": "3967:302:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 299, "nodeType": "Block", "src": "4436:141:7", "statements": [{"expression": {"components": [{"expression": {"baseExpression": {"id": 277, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4454:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 279, "indexExpression": {"id": 278, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "4462:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4454:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 280, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "4454:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"expression": {"baseExpression": {"id": 281, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4473:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 283, "indexExpression": {"id": 282, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "4481:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4473:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 284, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 92, "src": "4473:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 285, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4497:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 287, "indexExpression": {"id": 286, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "4505:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4497:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 288, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "4497:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 289, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4519:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 291, "indexExpression": {"id": 290, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "4527:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4519:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 292, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "4519:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 293, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4545:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 295, "indexExpression": {"id": 294, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "4553:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4545:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 296, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "4545:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 297, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4453:117:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(string storage ref,uint256,uint256,uint256,uint256)"}}, "functionReturnParameters": 276, "id": 298, "nodeType": "Return", "src": "4446:124:7"}]}, "functionSelector": "533b4c56", "id": 300, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleTicketInfo", "nameLocation": "4284:19:7", "nodeType": "FunctionDefinition", "parameters": {"id": 265, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 264, "mutability": "mutable", "name": "_id", "nameLocation": "4312:3:7", "nodeType": "VariableDeclaration", "scope": 300, "src": "4304:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4304:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4303:13:7"}, "returnParameters": {"id": 276, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 267, "mutability": "mutable", "name": "name", "nameLocation": "4352:4:7", "nodeType": "VariableDeclaration", "scope": 300, "src": "4338:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 266, "name": "string", "nodeType": "ElementaryTypeName", "src": "4338:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 269, "mutability": "mutable", "name": "startTime", "nameLocation": "4366:9:7", "nodeType": "VariableDeclaration", "scope": 300, "src": "4358:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 268, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4358:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 271, "mutability": "mutable", "name": "endTime", "nameLocation": "4385:7:7", "nodeType": "VariableDeclaration", "scope": 300, "src": "4377:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 270, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4377:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 273, "mutability": "mutable", "name": "ticketCount", "nameLocation": "4402:11:7", "nodeType": "VariableDeclaration", "scope": 300, "src": "4394:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 272, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4394:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 275, "mutability": "mutable", "name": "ticketPrice", "nameLocation": "4423:11:7", "nodeType": "VariableDeclaration", "scope": 300, "src": "4415:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4415:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4337:98:7"}, "scope": 796, "src": "4275:302:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 316, "nodeType": "Block", "src": "4675:58:7", "statements": [{"expression": {"baseExpression": {"expression": {"baseExpression": {"id": 309, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4692:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 311, "indexExpression": {"id": 310, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 302, "src": "4700:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4692:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 312, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketBalances", "nodeType": "MemberAccess", "referencedDeclaration": 101, "src": "4692:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 314, "indexExpression": {"id": 313, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "4720:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4692:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 308, "id": 315, "nodeType": "Return", "src": "4685:41:7"}]}, "functionSelector": "21d7112e", "id": 317, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleBalance", "nameLocation": "4592:16:7", "nodeType": "FunctionDefinition", "parameters": {"id": 305, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 302, "mutability": "mutable", "name": "_id", "nameLocation": "4617:3:7", "nodeType": "VariableDeclaration", "scope": 317, "src": "4609:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 301, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4609:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 304, "mutability": "mutable", "name": "owner", "nameLocation": "4630:5:7", "nodeType": "VariableDeclaration", "scope": 317, "src": "4622:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 303, "name": "address", "nodeType": "ElementaryTypeName", "src": "4622:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4608:28:7"}, "returnParameters": {"id": 308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 307, "mutability": "mutable", "name": "balance", "nameLocation": "4666:7:7", "nodeType": "VariableDeclaration", "scope": 317, "src": "4658:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 306, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4658:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4657:17:7"}, "scope": 796, "src": "4583:150:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 326, "nodeType": "Block", "src": "4795:45:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 322, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "4812:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$985_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 323, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 997, "src": "4812:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$985_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$985_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 324, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4812:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 321, "id": 325, "nodeType": "Return", "src": "4805:28:7"}]}, "functionSelector": "b198333c", "id": 327, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleCount", "nameLocation": "4748:14:7", "nodeType": "FunctionDefinition", "parameters": {"id": 318, "nodeType": "ParameterList", "parameters": [], "src": "4762:2:7"}, "returnParameters": {"id": 321, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 320, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 327, "src": "4786:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 319, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4786:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4785:9:7"}, "scope": 796, "src": "4739:101:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 418, "nodeType": "Block", "src": "4886:918:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 339, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 333, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4904:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 334, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4904:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"baseExpression": {"id": 335, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "4918:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 337, "indexExpression": {"id": 336, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4926:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4918:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 338, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 88, "src": "4918:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "4904:38:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074686520726166666c65", "id": 340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4944:43:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220", "typeString": "literal_string \"Only the beneficiary can claim the raffle\""}, "value": "Only the beneficiary can claim the raffle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220", "typeString": "literal_string \"Only the beneficiary can claim the raffle\""}], "id": 332, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4896:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 341, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4896:92:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 342, "nodeType": "ExpressionStatement", "src": "4896:92:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 344, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5006:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5006:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"baseExpression": {"id": 346, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "5025:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 348, "indexExpression": {"id": 347, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5033:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5025:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 349, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "5025:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5006:39:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520686173206e6f7420636c6f73656420796574", "id": 351, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5047:31:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45", "typeString": "literal_string \"The raffle has not closed yet\""}, "value": "The raffle has not closed yet"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45", "typeString": "literal_string \"The raffle has not closed yet\""}], "id": 343, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4998:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4998:81:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 353, "nodeType": "ExpressionStatement", "src": "4998:81:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 363, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 355, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "5097:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 357, "indexExpression": {"id": 356, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5105:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5097:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 358, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "5097:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 359, "name": "expirationPeriod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "5120:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5097:39:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 361, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5139:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 362, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5139:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5097:57:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520686173206578706972656420616e642063616e6e6f7420626520636c61696d6564", "id": 364, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5156:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5", "typeString": "literal_string \"The raffle has expired and cannot be claimed\""}, "value": "The raffle has expired and cannot be claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5", "typeString": "literal_string \"The raffle has expired and cannot be claimed\""}], "id": 354, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5089:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5089:114:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 366, "nodeType": "ExpressionStatement", "src": "5089:114:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}, "id": 374, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 368, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "5221:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 370, "indexExpression": {"id": 369, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5229:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5221:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 371, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "5221:18:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 372, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "5243:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 373, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 74, "src": "5243:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5221:38:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c65206973206e6f742061766169626c6520666f7220636c61696d696e67", "id": 375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5261:40:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d37f02932720ba7e9bec07458f230400ebe868995db28e78f3971c456d9a26b4", "typeString": "literal_string \"The raffle is not avaible for claiming\""}, "value": "The raffle is not avaible for claiming"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d37f02932720ba7e9bec07458f230400ebe868995db28e78f3971c456d9a26b4", "typeString": "literal_string \"The raffle is not avaible for claiming\""}], "id": 367, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5213:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 376, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5213:89:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 377, "nodeType": "ExpressionStatement", "src": "5213:89:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 385, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5363:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_CharityRaffle_$796", "typeString": "contract CharityRaffle"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CharityRaffle_$796", "typeString": "contract CharityRaffle"}], "id": 384, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5355:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 383, "name": "address", "nodeType": "ElementaryTypeName", "src": "5355:7:7", "typeDescriptions": {}}}, "id": 386, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5355:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 380, "name": "linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "5327:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 379, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 979, "src": "5320:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$979_$", "typeString": "type(contract IERC20)"}}, "id": 381, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5320:24:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$979", "typeString": "contract IERC20"}}, "id": 382, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 918, "src": "5320:34:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 387, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5320:49:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 388, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "5374:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5320:61:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520636f6e7472616374206e6565647320746f2062652070616964206c696e6b20746f6b656e20746f20636c61696d2074686520726166666c65", "id": 390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5383:62:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872", "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""}, "value": "The contract needs to be paid link token to claim the raffle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872", "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""}], "id": 378, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5312:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5312:134:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 392, "nodeType": "ExpressionStatement", "src": "5312:134:7"}, {"expression": {"id": 399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 393, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "5456:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 395, "indexExpression": {"id": 394, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5464:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5456:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 396, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "5456:18:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 397, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "5477:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 398, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "5477:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5456:48:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 400, "nodeType": "ExpressionStatement", "src": "5456:48:7"}, {"assignments": [402], "declarations": [{"constant": false, "id": 402, "mutability": "mutable", "name": "requestId", "nameLocation": "5571:9:7", "nodeType": "VariableDeclaration", "scope": 418, "src": "5563:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 401, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5563:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 407, "initialValue": {"arguments": [{"id": 404, "name": "VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "5601:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 405, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "5613:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 403, "name": "requestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1124, "src": "5583:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (bytes32,uint256) returns (bytes32)"}}, "id": 406, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5583:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5563:58:7"}, {"expression": {"id": 412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 408, "name": "VRFRequestIdTORaffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 119, "src": "5676:22:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}}, "id": 410, "indexExpression": {"id": 409, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "5699:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5676:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 411, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5712:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5676:39:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 413, "nodeType": "ExpressionStatement", "src": "5676:39:7"}, {"eventCall": {"arguments": [{"id": 415, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "5787:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 414, "name": "RequestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "5769:17:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 416, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5769:28:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 417, "nodeType": "EmitStatement", "src": "5764:33:7"}]}, "functionSelector": "cda32773", "id": 419, "implemented": true, "kind": "function", "modifiers": [], "name": "ClaimRaffle", "nameLocation": "4855:11:7", "nodeType": "FunctionDefinition", "parameters": {"id": 330, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 329, "mutability": "mutable", "name": "_id", "nameLocation": "4875:3:7", "nodeType": "VariableDeclaration", "scope": 419, "src": "4867:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 328, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4867:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4866:13:7"}, "returnParameters": {"id": 331, "nodeType": "ParameterList", "parameters": [], "src": "4886:0:7"}, "scope": 796, "src": "4846:958:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [1068], "body": {"id": 573, "nodeType": "Block", "src": "5961:1294:7", "statements": [{"assignments": [428], "declarations": [{"constant": false, "id": 428, "mutability": "mutable", "name": "raffleId", "nameLocation": "5979:8:7", "nodeType": "VariableDeclaration", "scope": 573, "src": "5971:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 427, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5971:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 432, "initialValue": {"baseExpression": {"id": 429, "name": "VRFRequestIdTORaffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 119, "src": "5990:22:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}}, "id": 431, "indexExpression": {"id": 430, "name": "_requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 421, "src": "6013:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5990:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5971:53:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}, "id": 440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 434, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6042:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 436, "indexExpression": {"id": 435, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6050:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6042:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 437, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "6042:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 438, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "6069:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 439, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "6069:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "6042:54:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c65206973206e6f7420696e207468652053656c656374696e6757696e6e6572207374617465", "id": 441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6098:48:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c", "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""}, "value": "The raffle is not in the SelectingWinner state"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c", "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""}], "id": 433, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6034:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6034:113:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 443, "nodeType": "ExpressionStatement", "src": "6034:113:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 445, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "6165:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 446, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6180:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6165:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2072616e646f6d6e65737320666f756e64", "id": 448, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6183:21:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de", "typeString": "literal_string \"No randomness found\""}, "value": "No randomness found"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de", "typeString": "literal_string \"No randomness found\""}], "id": 444, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6157:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6157:48:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 450, "nodeType": "ExpressionStatement", "src": "6157:48:7"}, {"expression": {"id": 457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 451, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6215:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 453, "indexExpression": {"id": 452, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6223:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6215:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 454, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "6215:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 455, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "6241:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 456, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Finished", "nodeType": "MemberAccess", "referencedDeclaration": 76, "src": "6241:20:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "6215:46:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 458, "nodeType": "ExpressionStatement", "src": "6215:46:7"}, {"assignments": [460], "declarations": [{"constant": false, "id": 460, "mutability": "mutable", "name": "winningTicketIndex", "nameLocation": "6279:18:7", "nodeType": "VariableDeclaration", "scope": 573, "src": "6271:26:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 459, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6271:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 467, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 461, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "6300:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"expression": {"baseExpression": {"id": 462, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6314:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 464, "indexExpression": {"id": 463, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6322:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6314:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 465, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "6314:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6300:43:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6271:72:7"}, {"assignments": [469], "declarations": [{"constant": false, "id": 469, "mutability": "mutable", "name": "ticketCounter", "nameLocation": "6425:13:7", "nodeType": "VariableDeclaration", "scope": 573, "src": "6417:21:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 468, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6417:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 471, "initialValue": {"hexValue": "30", "id": 470, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6441:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6417:25:7"}, {"assignments": [473], "declarations": [{"constant": false, "id": 473, "mutability": "mutable", "name": "l", "nameLocation": "6460:1:7", "nodeType": "VariableDeclaration", "scope": 573, "src": "6452:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 472, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6452:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 479, "initialValue": {"expression": {"expression": {"baseExpression": {"id": 474, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6464:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 476, "indexExpression": {"id": 475, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6472:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6464:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 477, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 104, "src": "6464:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6464:37:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6452:49:7"}, {"body": {"id": 535, "nodeType": "Block", "src": "6543:411:7", "statements": [{"assignments": [491], "declarations": [{"constant": false, "id": 491, "mutability": "mutable", "name": "balance", "nameLocation": "6565:7:7", "nodeType": "VariableDeclaration", "scope": 535, "src": "6557:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6557:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 503, "initialValue": {"baseExpression": {"expression": {"baseExpression": {"id": 492, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6575:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 494, "indexExpression": {"id": 493, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6583:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6575:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 495, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketBalances", "nodeType": "MemberAccess", "referencedDeclaration": 101, "src": "6575:32:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 502, "indexExpression": {"baseExpression": {"expression": {"baseExpression": {"id": 496, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6608:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 498, "indexExpression": {"id": 497, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6616:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6608:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 499, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 104, "src": "6608:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 501, "indexExpression": {"id": 500, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "6639:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6608:33:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6575:67:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6557:85:7"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 504, "name": "ticketCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "6660:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 505, "name": "winningTicketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 460, "src": "6677:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6660:35:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 507, "name": "winningTicketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 460, "src": "6699:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 508, "name": "ticketCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "6720:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 509, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 491, "src": "6736:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6720:23:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6699:44:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6660:83:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 530, "nodeType": "IfStatement", "src": "6656:250:7", "trueBody": {"id": 529, "nodeType": "Block", "src": "6745:161:7", "statements": [{"expression": {"id": 526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 513, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6799:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 515, "indexExpression": {"id": 514, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6807:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6799:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 516, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "6799:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"expression": {"baseExpression": {"id": 519, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "6834:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 521, "indexExpression": {"id": 520, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "6842:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6834:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 522, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 104, "src": "6834:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 524, "indexExpression": {"id": 523, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "6865:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6834:33:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 518, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6826:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 517, "name": "address", "nodeType": "ElementaryTypeName", "src": "6826:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 525, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6826:42:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "6799:69:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 527, "nodeType": "ExpressionStatement", "src": "6799:69:7"}, {"id": 528, "nodeType": "Break", "src": "6886:5:7"}]}}, {"expression": {"id": 533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 531, "name": "ticketCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "6919:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 532, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 491, "src": "6936:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6919:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 534, "nodeType": "ExpressionStatement", "src": "6919:24:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 484, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "6531:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 485, "name": "l", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 473, "src": "6535:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6531:5:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 536, "initializationExpression": {"assignments": [481], "declarations": [{"constant": false, "id": 481, "mutability": "mutable", "name": "i", "nameLocation": "6524:1:7", "nodeType": "VariableDeclaration", "scope": 536, "src": "6516:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 480, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6516:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 483, "initialValue": {"hexValue": "30", "id": 482, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6528:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6516:13:7"}, "loopExpression": {"expression": {"id": 488, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6538:3:7", "subExpression": {"id": 487, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 481, "src": "6538:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 489, "nodeType": "ExpressionStatement", "src": "6538:3:7"}, "nodeType": "ForStatement", "src": "6511:443:7"}, {"expression": {"id": 562, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"expression": {"baseExpression": {"id": 537, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7016:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 539, "indexExpression": {"id": 538, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7024:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7016:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 540, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "payedOut", "nodeType": "MemberAccess", "referencedDeclaration": 106, "src": "7016:26:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, null], "id": 541, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "7015:30:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$__$", "typeString": "tuple(bool,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "", "id": 560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7162:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 544, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7056:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 546, "indexExpression": {"id": 545, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7064:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7056:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 547, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 88, "src": "7056:29:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 543, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7048:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 542, "name": "address", "nodeType": "ElementaryTypeName", "src": "7048:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 548, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7048:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "7048:43:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 558, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 550, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7099:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 552, "indexExpression": {"id": 551, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7107:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7099:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 553, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "7099:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"baseExpression": {"id": 554, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7131:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 556, "indexExpression": {"id": 555, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7139:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7131:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 557, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "7131:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7099:61:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "7048:113:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 561, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7048:117:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "src": "7015:150:7", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 563, "nodeType": "ExpressionStatement", "src": "7015:150:7"}, {"eventCall": {"arguments": [{"id": 565, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7193:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 566, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7203:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 568, "indexExpression": {"id": 567, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "7211:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7203:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 569, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "7203:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 570, "name": "winningTicketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 460, "src": "7229:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 564, "name": "WinnerChosen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "7180:12:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$returns$__$", "typeString": "function (uint256,address payable,uint256)"}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7180:68:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 572, "nodeType": "EmitStatement", "src": "7175:73:7"}]}, "id": 574, "implemented": true, "kind": "function", "modifiers": [], "name": "fulfillRandomness", "nameLocation": "5884:17:7", "nodeType": "FunctionDefinition", "overrides": {"id": 425, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5952:8:7"}, "parameters": {"id": 424, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 421, "mutability": "mutable", "name": "_requestId", "nameLocation": "5910:10:7", "nodeType": "VariableDeclaration", "scope": 574, "src": "5902:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 420, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5902:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 423, "mutability": "mutable", "name": "_randomness", "nameLocation": "5930:11:7", "nodeType": "VariableDeclaration", "scope": 574, "src": "5922:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5922:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5901:41:7"}, "returnParameters": {"id": 426, "nodeType": "ParameterList", "parameters": [], "src": "5961:0:7"}, "scope": 796, "src": "5875:1380:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 672, "nodeType": "Block", "src": "7382:890:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 582, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7400:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 584, "indexExpression": {"id": 583, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "7408:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7400:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 585, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "7400:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 586, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "7427:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 587, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 74, "src": "7427:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "7400:43:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526166666c65206e6f74206f70656e", "id": 589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7445:17:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea", "typeString": "literal_string \"Raffle not open\""}, "value": "Raffle not open"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea", "typeString": "literal_string \"Raffle not open\""}], "id": 581, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7392:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 590, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7392:71:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 591, "nodeType": "ExpressionStatement", "src": "7392:71:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 599, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 593, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7481:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7481:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 595, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7499:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 597, "indexExpression": {"id": 596, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "7507:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7499:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 598, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "7499:25:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7481:43:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526166666c6520697320636c6f736564", "id": 600, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7526:18:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a", "typeString": "literal_string \"Raffle is closed\""}, "value": "Raffle is closed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a", "typeString": "literal_string \"Raffle is closed\""}], "id": 592, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7473:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7473:72:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 602, "nodeType": "ExpressionStatement", "src": "7473:72:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 604, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 578, "src": "7563:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 605, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7578:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7563:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5469636b657420636f756e74206d7573742062652067726561746572207468616e2030", "id": 607, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7581:37:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3", "typeString": "literal_string \"Ticket count must be greater than 0\""}, "value": "Ticket count must be greater than 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3", "typeString": "literal_string \"Ticket count must be greater than 0\""}], "id": 603, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7555:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 608, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7555:64:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 609, "nodeType": "ExpressionStatement", "src": "7555:64:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 611, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7637:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "7637:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 613, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7650:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 615, "indexExpression": {"id": 614, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "7658:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7650:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 616, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "7650:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 617, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 578, "src": "7682:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7650:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7637:57:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5469636b65742070726963652069732067726561746572207468616e2074686520616d6f756e742073656e74", "id": 620, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7696:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8", "typeString": "literal_string \"Ticket price is greater than the amount sent\""}, "value": "Ticket price is greater than the amount sent"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8", "typeString": "literal_string \"Ticket price is greater than the amount sent\""}], "id": 610, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7629:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7629:114:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 622, "nodeType": "ExpressionStatement", "src": "7629:114:7"}, {"expression": {"id": 628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 623, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7753:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 625, "indexExpression": {"id": 624, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "7761:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7753:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 626, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "7753:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 627, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 578, "src": "7786:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7753:45:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 629, "nodeType": "ExpressionStatement", "src": "7753:45:7"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"expression": {"baseExpression": {"id": 630, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7812:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 632, "indexExpression": {"id": 631, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "7820:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7812:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 633, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketBalances", "nodeType": "MemberAccess", "referencedDeclaration": 101, "src": "7812:32:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 636, "indexExpression": {"expression": {"id": 634, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7845:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7845:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7812:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 637, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7860:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7812:49:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 649, "nodeType": "IfStatement", "src": "7808:245:7", "trueBody": {"id": 648, "nodeType": "Block", "src": "7863:190:7", "statements": [{"expression": {"arguments": [{"expression": {"id": 644, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8031:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8031:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"expression": {"baseExpression": {"id": 639, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7995:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 641, "indexExpression": {"id": 640, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "8003:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7995:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 642, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 104, "src": "7995:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage", "typeString": "address[] storage ref"}}, "id": 643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "7995:35:7", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$", "typeString": "function (address[] storage pointer,address)"}}, "id": 646, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7995:47:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 647, "nodeType": "ExpressionStatement", "src": "7995:47:7"}]}}, {"expression": {"id": 658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"expression": {"baseExpression": {"id": 650, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "8062:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 652, "indexExpression": {"id": 651, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "8070:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8062:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 653, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketBalances", "nodeType": "MemberAccess", "referencedDeclaration": 101, "src": "8062:32:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 656, "indexExpression": {"expression": {"id": 654, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8095:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8095:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8062:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 657, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 578, "src": "8110:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8062:60:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 659, "nodeType": "ExpressionStatement", "src": "8062:60:7"}, {"expression": {"id": 670, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 660, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 122, "src": "8199:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 669, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 661, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8209:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 662, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "8209:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 663, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "8221:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 665, "indexExpression": {"id": 664, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 576, "src": "8229:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8221:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 666, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "8221:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 667, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 578, "src": "8253:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8221:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8209:56:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8199:66:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 671, "nodeType": "ExpressionStatement", "src": "8199:66:7"}]}, "functionSelector": "b894ad33", "id": 673, "implemented": true, "kind": "function", "modifiers": [], "name": "BuyTickets", "nameLocation": "7316:10:7", "nodeType": "FunctionDefinition", "parameters": {"id": 579, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 576, "mutability": "mutable", "name": "raffleId", "nameLocation": "7335:8:7", "nodeType": "VariableDeclaration", "scope": 673, "src": "7327:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 575, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7327:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 578, "mutability": "mutable", "name": "_ticketCount", "nameLocation": "7353:12:7", "nodeType": "VariableDeclaration", "scope": 673, "src": "7345:20:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 577, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7345:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7326:40:7"}, "returnParameters": {"id": 580, "nodeType": "ParameterList", "parameters": [], "src": "7382:0:7"}, "scope": 796, "src": "7307:965:7", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 708, "nodeType": "Block", "src": "8427:201:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 683, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 681, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 122, "src": "8445:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 682, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8454:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8445:10:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468657265206973206e6f206368616e676520746f20636f6c6c65637421", "id": 684, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8457:32:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee", "typeString": "literal_string \"There is no change to collect!\""}, "value": "There is no change to collect!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee", "typeString": "literal_string \"There is no change to collect!\""}], "id": 680, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8437:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 685, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8437:53:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 686, "nodeType": "ExpressionStatement", "src": "8437:53:7"}, {"expression": {"arguments": [{"hexValue": "", "id": 695, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8540:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"id": 689, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "8508:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "8508:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 688, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8500:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 687, "name": "address", "nodeType": "ElementaryTypeName", "src": "8500:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 691, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8500:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "8500:24:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 694, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 693, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 122, "src": "8532:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "8500:39:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 696, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8500:43:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "id": 697, "nodeType": "ExpressionStatement", "src": "8500:43:7"}, {"assignments": [699], "declarations": [{"constant": false, "id": 699, "mutability": "mutable", "name": "_change", "nameLocation": "8561:7:7", "nodeType": "VariableDeclaration", "scope": 708, "src": "8553:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 698, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8553:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 701, "initialValue": {"id": 700, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 122, "src": "8571:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8553:24:7"}, {"expression": {"id": 704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 702, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 122, "src": "8587:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 703, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8596:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8587:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 705, "nodeType": "ExpressionStatement", "src": "8587:10:7"}, {"expression": {"id": 706, "name": "_change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 699, "src": "8614:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 679, "id": 707, "nodeType": "Return", "src": "8607:14:7"}]}, "functionSelector": "3803abef", "id": 709, "implemented": true, "kind": "function", "modifiers": [{"id": 676, "kind": "modifierInvocation", "modifierName": {"id": 675, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 843, "src": "8400:9:7"}, "nodeType": "ModifierInvocation", "src": "8400:9:7"}], "name": "CollectChange", "nameLocation": "8377:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 674, "nodeType": "ParameterList", "parameters": [], "src": "8390:2:7"}, "returnParameters": {"id": 679, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 678, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 709, "src": "8419:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 677, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8419:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8418:9:7"}, "scope": 796, "src": "8368:260:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 794, "nodeType": "Block", "src": "8754:719:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 715, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8772:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 716, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "8772:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 717, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "8791:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 719, "indexExpression": {"id": 718, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "8799:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8791:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 720, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 94, "src": "8791:25:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 721, "name": "expirationPeriod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "8819:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8791:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8772:63:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726566756e6420706572696f6420686173206e6f7420656e64656420796574", "id": 724, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8837:37:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_104fd6edc252450dbdbbf035e5ae245c2d019958a538db2d2358445af1bd495d", "typeString": "literal_string \"The refund period has not ended yet\""}, "value": "The refund period has not ended yet"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_104fd6edc252450dbdbbf035e5ae245c2d019958a538db2d2358445af1bd495d", "typeString": "literal_string \"The refund period has not ended yet\""}], "id": 714, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8764:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 725, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8764:111:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 726, "nodeType": "ExpressionStatement", "src": "8764:111:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}, "id": 734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 728, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "8893:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 730, "indexExpression": {"id": 729, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "8901:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8893:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 731, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "8893:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 732, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "8920:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 733, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Finished", "nodeType": "MemberAccess", "referencedDeclaration": 76, "src": "8920:20:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "8893:47:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c652069732066696e6973686564", "id": 735, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8942:24:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_70e8571f93f096fdbd972b9f281289c7e97b56d57bf6df3a7362cacd0ebd8c9d", "typeString": "literal_string \"The raffle is finished\""}, "value": "The raffle is finished"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_70e8571f93f096fdbd972b9f281289c7e97b56d57bf6df3a7362cacd0ebd8c9d", "typeString": "literal_string \"The raffle is finished\""}], "id": 727, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8885:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8885:82:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 737, "nodeType": "ExpressionStatement", "src": "8885:82:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}, "id": 745, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 739, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "8985:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 741, "indexExpression": {"id": 740, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "8993:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8985:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 742, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "8985:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 743, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "9012:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 744, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "9012:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "8985:54:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c652069732073656c656374696e6720612077696e6e65722e", "id": 746, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9041:35:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5244b4c89bcdeb74c2906eea5cc8bb9fba7e5fbb42b20cbf704c9bd7ce0894d3", "typeString": "literal_string \"The raffle is selecting a winner.\""}, "value": "The raffle is selecting a winner."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5244b4c89bcdeb74c2906eea5cc8bb9fba7e5fbb42b20cbf704c9bd7ce0894d3", "typeString": "literal_string \"The raffle is selecting a winner.\""}], "id": 738, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8977:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 747, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8977:100:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 748, "nodeType": "ExpressionStatement", "src": "8977:100:7"}, {"expression": {"id": 755, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 749, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "9134:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 751, "indexExpression": {"id": 750, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "9142:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9134:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 752, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 97, "src": "9134:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 753, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "9160:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$78_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 754, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Expired", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "9160:19:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "9134:45:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$78", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 756, "nodeType": "ExpressionStatement", "src": "9134:45:7"}, {"assignments": [758, null], "declarations": [{"constant": false, "id": 758, "mutability": "mutable", "name": "transfered", "nameLocation": "9239:10:7", "nodeType": "VariableDeclaration", "scope": 794, "src": "9234:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 757, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9234:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 780, "initialValue": {"arguments": [{"hexValue": "", "id": 778, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9365:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"id": 761, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "9263:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "9263:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 760, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9255:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 759, "name": "address", "nodeType": "ElementaryTypeName", "src": "9255:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 763, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9255:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 764, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "9255:24:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 777, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 765, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "9287:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 767, "indexExpression": {"id": 766, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "9295:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9287:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 768, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "9287:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"baseExpression": {"expression": {"baseExpression": {"id": 769, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "9319:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 771, "indexExpression": {"id": 770, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "9327:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9319:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 772, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketBalances", "nodeType": "MemberAccess", "referencedDeclaration": 101, "src": "9319:32:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 775, "indexExpression": {"expression": {"id": 773, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "9352:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 774, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "9352:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9319:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9287:76:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "9255:109:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9255:113:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "9233:135:7"}, {"condition": {"id": 781, "name": "transfered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 758, "src": "9382:10:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 793, "nodeType": "IfStatement", "src": "9378:89:7", "trueBody": {"id": 792, "nodeType": "Block", "src": "9394:73:7", "statements": [{"expression": {"id": 790, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"expression": {"baseExpression": {"id": 782, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "9408:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$107_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 784, "indexExpression": {"id": 783, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "9416:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9408:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$107_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 785, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketBalances", "nodeType": "MemberAccess", "referencedDeclaration": 101, "src": "9408:32:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 788, "indexExpression": {"expression": {"id": 786, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "9441:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 787, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "9441:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9408:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 789, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9455:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9408:48:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 791, "nodeType": "ExpressionStatement", "src": "9408:48:7"}]}}]}, "functionSelector": "e3aa85cb", "id": 795, "implemented": true, "kind": "function", "modifiers": [], "name": "TicketRefund", "nameLocation": "8717:12:7", "nodeType": "FunctionDefinition", "parameters": {"id": 712, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 711, "mutability": "mutable", "name": "raffleId", "nameLocation": "8738:8:7", "nodeType": "VariableDeclaration", "scope": 795, "src": "8730:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8730:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8729:18:7"}, "returnParameters": {"id": 713, "nodeType": "ParameterList", "parameters": [], "src": "8754:0:7"}, "scope": 796, "src": "8708:765:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 797, "src": "320:9155:7", "usedErrors": []}], "src": "67:9408:7"}, "bytecode": "60c060405260006009553480156200001657600080fd5b5060405162001c8a38038062001c8a8339810160408190526200003991620000f1565b8383620000463362000084565b6001600160a01b0391821660a0528116608052600392909255600455600280546001600160a01b031916929091169190911790555060055562000145565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ec57600080fd5b919050565b600080600080600060a086880312156200010a57600080fd5b855194506200011c60208701620000d4565b93506200012c60408701620000d4565b6060870151608090970151959894975095949392505050565b60805160a051611b1862000172600039600081816108270152611481015260006114520152611b186000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063b894ad331161006f578063b894ad331461035a578063cda327731461036d578063d1d3bde31461038d578063e3aa85cb146103a3578063ef124faf146103c3578063f2fde38b146103e357600080fd5b8063715018a6146102c65780638897cad3146102dd5780638da5cb5b146102f357806394985ddd14610325578063b198333c1461034557600080fd5b80632fec9240116100f25780632fec92401461021857806332dd45fb146102385780633803abef14610269578063533b4c561461027e57806357529e6c146102af57600080fd5b8063018896111461012f5780631d5ccd9b1461015857806321d7112e1461018e57806327028a84146101d55780632ee79ded14610202575b600080fd5b34801561013b57600080fd5b5061014560035481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b5061017861017336600461166a565b610403565b60405161014f9a999897969594939291906116e6565b34801561019a57600080fd5b506101456101a936600461178f565b60008281526007602090815260408083206001600160a01b038516845260090190915290205492915050565b3480156101e157600080fd5b506101456101f036600461166a565b60086020526000908152604090205481565b34801561020e57600080fd5b5061014560095481565b34801561022457600080fd5b506101456102333660046117d1565b6104ef565b34801561024457600080fd5b5061025861025336600461166a565b6105e0565b60405161014f959493929190611895565b34801561027557600080fd5b506101456106c3565b34801561028a57600080fd5b5061029e61029936600461166a565b6107a1565b60405161014f9594939291906118d5565b3480156102bb57600080fd5b506006546101459081565b3480156102d257600080fd5b506102db6107e6565b005b3480156102e957600080fd5b5061014560055481565b3480156102ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014f565b34801561033157600080fd5b506102db61034036600461190c565b61081c565b34801561035157600080fd5b506101456108a2565b6102db61036836600461190c565b6108b2565b34801561037957600080fd5b506102db61038836600461166a565b610b33565b34801561039957600080fd5b5061014560045481565b3480156103af57600080fd5b506102db6103be36600461166a565b610e76565b3480156103cf57600080fd5b5060025461030d906001600160a01b031681565b3480156103ef57600080fd5b506102db6103fe36600461192e565b611093565b6007602052600090815260409020805460018201805491929161042590611950565b80601f016020809104026020016040519081016040528092919081815260200182805461045190611950565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546008890154600b90990154979895979496506001600160a01b03938416959390921693909260ff90811691168a565b60006104ff600680546001019055565b600061050a60065490565b6000818152600760209081526040909120828155875192935091610536916001840191908901906115d1565b5060006002820155600381018590556004810180546001600160a01b03191633179055426006820181905561056c9085906119a1565b600782015560088101805460ff191690556005810180546001600160a01b03191690556004810154604080516001600160a01b039092168252602082018490527fa5f5edc69e0aa3c9f2fa246209ef9418fc10a316ffa12f1d807a68692436d06b910160405180910390a150509392505050565b600081815260076020819052604082206004810154600582015460068301549383015460019093018054606096958695869586956001600160a01b03918216949116929190859061063090611950565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90611950565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050505094509450945094509450945091939590929450565b600080546001600160a01b031633146106f75760405162461bcd60e51b81526004016106ee906119b9565b60405180910390fd5b6000600954116107495760405162461bcd60e51b815260206004820152601e60248201527f5468657265206973206e6f206368616e676520746f20636f6c6c65637421000060448201526064016106ee565b600954604051339190600081818185875af1925050503d806000811461078b576040519150601f19603f3d011682016040523d82523d6000602084013e610790565b606091505b505060098054600090915591505090565b60008181526007602081905260408220600681015491810154600282015460038301546001909301805460609695869586958695929390929190859061063090611950565b6000546001600160a01b031633146108105760405162461bcd60e51b81526004016106ee906119b9565b61081a600061112e565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108945760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016106ee565b61089e828261117e565b5050565b60006108ad60065490565b905090565b60008281526007602052604081206008015460ff1660038111156108d8576108d86116d0565b146109175760405162461bcd60e51b815260206004820152600f60248201526e2930b3333632903737ba1037b832b760891b60448201526064016106ee565b60008281526007602081905260409091200154421061096b5760405162461bcd60e51b815260206004820152601060248201526f149859999b19481a5cc818db1bdcd95960821b60448201526064016106ee565b600081116109c75760405162461bcd60e51b815260206004820152602360248201527f5469636b657420636f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b60648201526084016106ee565b6000828152600760205260409020600301546109e49082906119ee565b341015610a485760405162461bcd60e51b815260206004820152602c60248201527f5469636b65742070726963652069732067726561746572207468616e2074686560448201526b08185b5bdd5b9d081cd95b9d60a21b60648201526084016106ee565b60008281526007602052604081206002018054839290610a699084906119a1565b90915550506000828152600760209081526040808320338452600901909152902054610ac15760008281526007602090815260408220600a01805460018101825590835291200180546001600160a01b031916331790555b600082815260076020908152604080832033845260090190915281208054839290610aed9084906119a1565b9091555050600082815260076020526040902060030154610b0f9082906119ee565b610b199034611a0d565b60096000828254610b2a91906119a1565b90915550505050565b6000818152600760205260409020600401546001600160a01b03163314610bae5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074604482015268686520726166666c6560b81b60648201526084016106ee565b60008181526007602081905260409091200154421015610c105760405162461bcd60e51b815260206004820152601d60248201527f54686520726166666c6520686173206e6f7420636c6f7365642079657400000060448201526064016106ee565b600554600082815260076020819052604090912001544291610c31916119a1565b11610c935760405162461bcd60e51b815260206004820152602c60248201527f54686520726166666c6520686173206578706972656420616e642063616e6e6f60448201526b1d0818994818db185a5b595960a21b60648201526084016106ee565b60008181526007602052604081206008015460ff166003811115610cb957610cb96116d0565b14610d155760405162461bcd60e51b815260206004820152602660248201527f54686520726166666c65206973206e6f742061766169626c6520666f7220636c60448201526561696d696e6760d01b60648201526084016106ee565b6003546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190611a24565b1015610df85760405162461bcd60e51b815260206004820152603c60248201527f54686520636f6e7472616374206e6565647320746f2062652070616964206c6960448201527f6e6b20746f6b656e20746f20636c61696d2074686520726166666c650000000060648201526084016106ee565b6000818152600760205260408120600801805460ff19166001179055600454600354610e24919061144e565b60008181526008602052604090819020849055519091507fe7e9d173875e49599c9dc06ea20fd1d8878525700b2711462f8379cccdc637eb90610e6a9083815260200190565b60405180910390a15050565b60055460008281526007602081905260409091200154610e9691906119a1565b421015610ef15760405162461bcd60e51b815260206004820152602360248201527f54686520726566756e6420706572696f6420686173206e6f7420656e646564206044820152621e595d60ea1b60648201526084016106ee565b600260008281526007602052604090206008015460ff166003811115610f1957610f196116d0565b1415610f605760405162461bcd60e51b8152602060048201526016602482015275151a19481c9859999b19481a5cc8199a5b9a5cda195960521b60448201526064016106ee565b600160008281526007602052604090206008015460ff166003811115610f8857610f886116d0565b1415610fe05760405162461bcd60e51b815260206004820152602160248201527f54686520726166666c652069732073656c656374696e6720612077696e6e65726044820152601760f91b60648201526084016106ee565b600081815260076020818152604080842060088101805460ff1916600390811790915533808752600983018552928620548787529490935291909101549091611028916119ee565b604051600081818185875af1925050503d8060008114611064576040519150601f19603f3d011682016040523d82523d6000602084013e611069565b606091505b50509050801561089e57506000908152600760209081526040808320338452600901909152812055565b6000546001600160a01b031633146110bd5760405162461bcd60e51b81526004016106ee906119b9565b6001600160a01b0381166111225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ee565b61112b8161112e565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260086020526040902054600160008281526007602052604090206008015460ff1660038111156111b5576111b56116d0565b146112195760405162461bcd60e51b815260206004820152602e60248201527f54686520726166666c65206973206e6f7420696e207468652053656c6563746960448201526d6e6757696e6e657220737461746560901b60648201526084016106ee565b600081815260076020526040812060088101805460ff1916600290811790915501546112459084611a3d565b6000838152600760205260408120600a015491925090815b8181101561135a576000858152600760205260408120600a810180546009909201918391908590811061129257611292611a5f565b60009182526020808320909101546001600160a01b0316835282019290925260400190205490508484118015906112d157506112ce81856119a1565b85105b1561133a576000868152600760205260409020600a018054839081106112f9576112f9611a5f565b60009182526020808320909101548883526007909152604090912060050180546001600160a01b0319166001600160a01b039092169190911790555061135a565b61134481856119a1565b935050808061135290611a75565b91505061125d565b506000848152600760205260409020600481015460028201546003909201546001600160a01b039091169161138e916119ee565b604051600081818185875af1925050503d80600081146113ca576040519150601f19603f3d011682016040523d82523d6000602084013e6113cf565b606091505b5050600085815260076020908152604091829020600b8101805460ff19169415159490941790935560059092015481518781526001600160a01b039091169281019290925281018490527fb14375695e696ee7a5001ece25e2fcfb144242680d208452819016209ae26f679060600160405180910390a1505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016114be929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016114eb93929190611a90565b6020604051808303816000875af115801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e9190611ac0565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905290829052611589916119a1565b6000858152600160205260409020556115c98482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b8280546115dd90611950565b90600052602060002090601f0160209004810192826115ff5760008555611645565b82601f1061161857805160ff1916838001178555611645565b82800160010185558215611645579182015b8281111561164557825182559160200191906001019061162a565b50611651929150611655565b5090565b5b808211156116515760008155600101611656565b60006020828403121561167c57600080fd5b5035919050565b6000815180845260005b818110156116a95760208185018101518683018201520161168d565b818111156116bb576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101408c83528060208401526117008184018d611683565b604084018c9052606084018b90526001600160a01b038a81166080860152891660a085015260c0840188905260e084018790529150506004841061175457634e487b7160e01b600052602160045260246000fd5b836101008301528215156101208301529b9a5050505050505050505050565b80356001600160a01b038116811461178a57600080fd5b919050565b600080604083850312156117a257600080fd5b823591506117b260208401611773565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156117e657600080fd5b833567ffffffffffffffff808211156117fe57600080fd5b818601915086601f83011261181257600080fd5b813581811115611824576118246117bb565b604051601f8201601f19908116603f0116810190838211818310171561184c5761184c6117bb565b8160405282815289602084870101111561186557600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60a0815260006118a860a0830188611683565b6001600160a01b039687166020840152949095166040820152606081019290925260809091015292915050565b60a0815260006118e860a0830188611683565b90508560208301528460408301528360608301528260808301529695505050505050565b6000806040838503121561191f57600080fd5b50508035926020909101359150565b60006020828403121561194057600080fd5b61194982611773565b9392505050565b600181811c9082168061196457607f821691505b6020821081141561198557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156119b4576119b461198b565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611a0857611a0861198b565b500290565b600082821015611a1f57611a1f61198b565b500390565b600060208284031215611a3657600080fd5b5051919050565b600082611a5a57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611a8957611a8961198b565b5060010190565b60018060a01b0384168152826020820152606060408201526000611ab76060830184611683565b95945050505050565b600060208284031215611ad257600080fd5b8151801515811461194957600080fdfea2646970667358221220ab03a42741be988e2be777509f23191a7a7bbc3887c2ece75e2e65e07966d60e64736f6c634300080a0033", "bytecodeSha1": "786392201498e50bd5373b57b1d9f9bac4e09114", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "CharityRaffle", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"80": [2006, 2028, true]}}, "1": {}, "2": {}, "3": {}, "4": {"VRFConsumerBase.rawFulfillRandomness": {"81": [9750, 9778, true]}}, "5": {}, "7": {"CharityRaffle.BuyTickets": {"64": [7400, 7443, true], "65": [7481, 7524, true], "66": [7563, 7579, true], "67": [7637, 7694, true]}, "CharityRaffle.ClaimRaffle": {"68": [4904, 4942, true], "69": [5006, 5045, true], "70": [5097, 5154, true], "71": [5221, 5259, true], "72": [5320, 5381, true]}, "CharityRaffle.CollectChange": {"63": [8445, 8455, true]}, "CharityRaffle.TicketRefund": {"73": [8772, 8835, true], "74": [8893, 8940, true], "75": [8985, 9039, true], "76": [9382, 9392, false]}, "CharityRaffle.fulfillRandomness": {"77": [6042, 6096, true], "78": [6660, 6695, false], "79": [6699, 6743, false]}}}, "statements": {"0": {"Ownable._transferOwnership": {"48": [2378, 2395], "49": [2405, 2450]}, "Ownable.owner": {"1": [1101, 1114]}, "Ownable.renounceOwnership": {"21": [1732, 1762]}, "Ownable.transferOwnership": {"46": [1998, 2071], "47": [2081, 2109]}}, "1": {}, "2": {"Context._msgSender": {"16": [712, 729]}}, "3": {"Counters.current": {"4": [911, 932]}, "Counters.increment": {"3": [1032, 1051]}}, "4": {"VRFConsumerBase.rawFulfillRandomness": {"22": [9742, 9814], "23": [9820, 9860]}, "VRFConsumerBase.requestRandomness": {"58": [7889, 7976], "60": [8719, 8758], "61": [8764, 8803]}}, "5": {"VRFRequestIDBase.makeRequestId": {"62": [1583, 1642]}, "VRFRequestIDBase.makeVRFInputSeed": {"59": [980, 1058]}}, "7": {"CharityRaffle.BuyTickets": {"25": [7392, 7463], "26": [7473, 7545], "27": [7555, 7619], "28": [7629, 7743], "29": [7753, 7798], "30": [7995, 8042], "31": [8062, 8122], "32": [8199, 8265]}, "CharityRaffle.ClaimRaffle": {"33": [4896, 4988], "34": [4998, 5079], "35": [5089, 5203], "36": [5213, 5302], "37": [5312, 5446], "38": [5456, 5504], "39": [5676, 5715], "40": [5764, 5797]}, "CharityRaffle.CollectChange": {"17": [8437, 8490], "18": [8500, 8543], "19": [8587, 8597]}, "CharityRaffle.CreateRaffle": {"2": [3360, 3383], "5": [3485, 3500], "6": [3510, 3535], "7": [3545, 3567], "8": [3577, 3610], "9": [3620, 3660], "10": [3670, 3704], "11": [3714, 3762], "12": [3772, 3803], "13": [3813, 3841], "14": [3851, 3894]}, "CharityRaffle.GetRaffleBalance": {"0": [4685, 4726]}, "CharityRaffle.GetRaffleCount": {"24": [4805, 4833]}, "CharityRaffle.GetRaffleInfo": {"15": [4143, 4262]}, "CharityRaffle.GetRaffleTicketInfo": {"20": [4446, 4570]}, "CharityRaffle.TicketRefund": {"41": [8764, 8875], "42": [8885, 8967], "43": [8977, 9077], "44": [9134, 9179], "45": [9408, 9456]}, "CharityRaffle.fulfillRandomness": {"50": [6034, 6147], "51": [6215, 6261], "52": [6799, 6868], "53": [6886, 6891], "54": [6919, 6943], "55": [6538, 6541], "56": [7015, 7165], "57": [7175, 7248]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.4.0/Context", "OpenZeppelin/openzeppelin-contracts@4.4.0/Counters", "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.4.0/Ownable", "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFConsumerBase", "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFRequestIDBase"], "deployedBytecode": "", "deployedSourceMap": "320:9155:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:22;;;;;;;;;;;;;;;;;;;160:25:8;;;148:2;133:18;456:22:7;;;;;;;;2927:41;;;;;;;;;;-1:-1:-1;2927:41:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;4583:150::-;;;;;;;;;;-1:-1:-1;4583:150:7;;;;;:::i;:::-;4658:15;4692:12;;;:7;:12;;;;;;;;-1:-1:-1;;;;;4692:34:7;;;;:27;;:34;;;;;;4583:150;;;;;3013:57;;;;;;;;;;-1:-1:-1;3013:57:7;;;;;:::i;:::-;;;;;;;;;;;;;;3192:25;;;;;;;;;;;;;;;;3224:677;;;;;;;;;;-1:-1:-1;3224:677:7;;;;;:::i;:::-;;:::i;3967:302::-;;;;;;;;;;-1:-1:-1;3967:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;8368:260::-;;;;;;;;;;;;;:::i;4275:302::-;;;;;;;;;;-1:-1:-1;4275:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2886:35::-;;;;;;;;;;-1:-1:-1;2886:35:7;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;561:31:7;;;;;;;;;;;;;;;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;5248:32:8;;;5230:51;;5218:2;5203:18;1036:85:0;5084:203:8;9640:225:4;;;;;;;;;;-1:-1:-1;9640:225:4;;;;;:::i;:::-;;:::i;4739:101:7:-;;;;;;;;;;;;;:::i;7307:965::-;;;;;;:::i;:::-;;:::i;4846:958::-;;;;;;;;;;-1:-1:-1;4846:958:7;;;;;:::i;:::-;;:::i;484:25::-;;;;;;;;;;;;;;;;8708:765;;;;;;;;;;-1:-1:-1;8708:765:7;;;;;:::i;:::-;;:::i;419:31::-;;;;;;;;;;-1:-1:-1;419:31:7;;;;-1:-1:-1;;;;;419:31:7;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2927:41:7:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2927:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2927:41:7;;;;;;;;;;;;;;;;;;:::o;3224:677::-;3333:16;3360:23;:11;1032:19:3;;1050:1;1032:19;;;945:123;3360:23:7;3393:11;3407:21;:11;918:14:3;;827:112;3407:21:7;3438;3462:12;;;:7;:12;;;;;;;;3485:15;;;3510:25;;3393:35;;-1:-1:-1;3462:12:7;3510:25;;:11;;;;:25;;;;;:::i;:::-;-1:-1:-1;3566:1:7;3545:18;;;:22;3577:18;;;:33;;;3620:18;;;:40;;-1:-1:-1;;;;;;3620:40:7;3649:10;3620:40;;;3689:15;3670:16;;;:34;;;3731:31;;3749:13;;3731:31;:::i;:::-;3714:14;;;:48;3772:12;;;:31;;-1:-1:-1;;3772:31:7;;;3813:13;;;:28;;-1:-1:-1;;;;;;3813:28:7;;;3870:18;;;;3856:38;;;-1:-1:-1;;;;;3870:18:7;;;7003:51:8;;7085:2;7070:18;;7063:34;;;3856:38:7;;6976:18:8;3856:38:7;;;;;;;3350:551;;3224:677;;;;;:::o;3967:302::-;4044:27;4151:12;;;:7;:12;;;;;;;4170:24;;;;4196:19;;;;4217:22;;;;4241:20;;;;4151:17;;;;4143:119;;4024:18;;4044:27;;;;;;;-1:-1:-1;;;;;4170:24:7;;;;4196:19;;;4217:22;4241:20;4151:17;;4143:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3967:302;;;;;;;:::o;8368:260::-;8419:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;8454:1:7::1;8445:6;;:10;8437:53;;;::::0;-1:-1:-1;;;8437:53:7;;7671:2:8;8437:53:7::1;::::0;::::1;7653:21:8::0;7710:2;7690:18;;;7683:30;7749:32;7729:18;;;7722:60;7799:18;;8437:53:7::1;7469:354:8::0;8437:53:7::1;8532:6;::::0;8500:43:::1;::::0;8508:10:::1;::::0;8532:6;8500:43:::1;::::0;;;8532:6;8508:10;8500:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;8571:6:7::1;::::0;;8553:15:::1;8587:10:::0;;;8571:6;-1:-1:-1;;8368:260:7;:::o;4275:302::-;4358:17;4454:12;;;:7;:12;;;;;;;4473:22;;;;4497:20;;;;4519:24;;;;4545;;;;4454:17;;;;4446:124;;4338:18;;4358:17;;;;;;;4473:22;;4497:20;;4519:24;4545;4454:17;;4446:124;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;9640:225:4:-;9750:10;-1:-1:-1;;;;;9764:14:4;9750:28;;9742:72;;;;-1:-1:-1;;;9742:72:4;;8240:2:8;9742:72:4;;;8222:21:8;8279:2;8259:18;;;8252:30;8318:33;8298:18;;;8291:61;8369:18;;9742:72:4;8038:355:8;9742:72:4;9820:40;9838:9;9849:10;9820:17;:40::i;:::-;9640:225;;:::o;4739:101:7:-;4786:7;4812:21;:11;918:14:3;;827:112;4812:21:7;4805:28;;4739:101;:::o;7307:965::-;7427:16;7400:17;;;:7;:17;;;;;:23;;;;;:43;;;;;;;;:::i;:::-;;7392:71;;;;-1:-1:-1;;;7392:71:7;;8600:2:8;7392:71:7;;;8582:21:8;8639:2;8619:18;;;8612:30;-1:-1:-1;;;8658:18:8;;;8651:45;8713:18;;7392:71:7;8398:339:8;7392:71:7;7499:17;;;;:7;:17;;;;;;;;:25;;7481:15;:43;7473:72;;;;-1:-1:-1;;;7473:72:7;;8944:2:8;7473:72:7;;;8926:21:8;8983:2;8963:18;;;8956:30;-1:-1:-1;;;9002:18:8;;;8995:46;9058:18;;7473:72:7;8742:340:8;7473:72:7;7578:1;7563:12;:16;7555:64;;;;-1:-1:-1;;;7555:64:7;;9289:2:8;7555:64:7;;;9271:21:8;9328:2;9308:18;;;9301:30;9367:34;9347:18;;;9340:62;-1:-1:-1;;;9418:18:8;;;9411:33;9461:19;;7555:64:7;9087:399:8;7555:64:7;7650:17;;;;:7;:17;;;;;:29;;;:44;;7682:12;;7650:44;:::i;:::-;7637:9;:57;;7629:114;;;;-1:-1:-1;;;7629:114:7;;9866:2:8;7629:114:7;;;9848:21:8;9905:2;9885:18;;;9878:30;9944:34;9924:18;;;9917:62;-1:-1:-1;;;9995:18:8;;;9988:42;10047:19;;7629:114:7;9664:408:8;7629:114:7;7753:17;;;;:7;:17;;;;;:29;;:45;;7786:12;;7753:17;:45;;7786:12;;7753:45;:::i;:::-;;;;-1:-1:-1;;7812:17:7;;;;:7;:17;;;;;;;;7845:10;7812:44;;:32;;:44;;;;;;7808:245;;7995:17;;;;:7;:17;;;;;;;:30;;:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7995:47:7;8031:10;7995:47;;;7808:245;8062:17;;;;:7;:17;;;;;;;;8095:10;8062:44;;:32;;:44;;;;;:60;;8110:12;;8062:17;:60;;8110:12;;8062:60;:::i;:::-;;;;-1:-1:-1;;8221:17:7;;;;:7;:17;;;;;:29;;;:44;;8253:12;;8221:44;:::i;:::-;8209:56;;:9;:56;:::i;:::-;8199:6;;:66;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;7307:965:7:o;4846:958::-;4918:12;;;;:7;:12;;;;;:24;;;-1:-1:-1;;;;;4918:24:7;4904:10;:38;4896:92;;;;-1:-1:-1;;;4896:92:7;;10409:2:8;4896:92:7;;;10391:21:8;10448:2;10428:18;;;10421:30;10487:34;10467:18;;;10460:62;-1:-1:-1;;;10538:18:8;;;10531:39;10587:19;;4896:92:7;10207:405:8;4896:92:7;5025:12;;;;:7;:12;;;;;;;;:20;;5006:15;:39;;4998:81;;;;-1:-1:-1;;;4998:81:7;;10819:2:8;4998:81:7;;;10801:21:8;10858:2;10838:18;;;10831:30;10897:31;10877:18;;;10870:59;10946:18;;4998:81:7;10617:353:8;4998:81:7;5120:16;;5097:12;;;;:7;:12;;;;;;;;:20;;5139:15;;5097:39;;;:::i;:::-;:57;5089:114;;;;-1:-1:-1;;;5089:114:7;;11177:2:8;5089:114:7;;;11159:21:8;11216:2;11196:18;;;11189:30;11255:34;11235:18;;;11228:62;-1:-1:-1;;;11306:18:8;;;11299:42;11358:19;;5089:114:7;10975:408:8;5089:114:7;5243:16;5221:12;;;:7;:12;;;;;:18;;;;;:38;;;;;;;;:::i;:::-;;5213:89;;;;-1:-1:-1;;;5213:89:7;;11590:2:8;5213:89:7;;;11572:21:8;11629:2;11609:18;;;11602:30;11668:34;11648:18;;;11641:62;-1:-1:-1;;;11719:18:8;;;11712:36;11765:19;;5213:89:7;11388:402:8;5213:89:7;5374:7;;5327:16;;5320:49;;-1:-1:-1;;;5320:49:7;;5363:4;5320:49;;;5230:51:8;-1:-1:-1;;;;;5327:16:7;;;;5320:34;;5203:18:8;;5320:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;5312:134;;;;-1:-1:-1;;;5312:134:7;;12186:2:8;5312:134:7;;;12168:21:8;12225:2;12205:18;;;12198:30;12264:34;12244:18;;;12237:62;12335:30;12315:18;;;12308:58;12383:19;;5312:134:7;11984:424:8;5312:134:7;5456:12;;;;:7;:12;;;;;:18;;:48;;-1:-1:-1;;5456:48:7;5477:27;5456:48;;;5601:10;;5613:7;;5583:38;;5601:10;5583:17;:38::i;:::-;5676:33;;;;:22;:33;;;;;;;:39;;;5769:28;5563:58;;-1:-1:-1;5769:28:7;;;;5563:58;160:25:8;;148:2;133:18;;14:177;5769:28:7;;;;;;;;4886:918;4846:958;:::o;8708:765::-;8819:16;;8791:17;;;;:7;:17;;;;;;;;:25;;:44;;8819:16;8791:44;:::i;:::-;8772:15;:63;;8764:111;;;;-1:-1:-1;;;8764:111:7;;12615:2:8;8764:111:7;;;12597:21:8;12654:2;12634:18;;;12627:30;12693:34;12673:18;;;12666:62;-1:-1:-1;;;12744:18:8;;;12737:33;12787:19;;8764:111:7;12413:399:8;8764:111:7;8920:20;8893:17;;;;:7;:17;;;;;:23;;;;;:47;;;;;;;;:::i;:::-;;;8885:82;;;;-1:-1:-1;;;8885:82:7;;13019:2:8;8885:82:7;;;13001:21:8;13058:2;13038:18;;;13031:30;-1:-1:-1;;;13077:18:8;;;13070:52;13139:18;;8885:82:7;12817:346:8;8885:82:7;9012:27;8985:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;;8977:100;;;;-1:-1:-1;;;8977:100:7;;13370:2:8;8977:100:7;;;13352:21:8;13409:2;13389:18;;;13382:30;13448:34;13428:18;;;13421:62;-1:-1:-1;;;13499:18:8;;;13492:31;13540:19;;8977:100:7;13168:397:8;8977:100:7;9134:17;;;;:7;:17;;;;;;;;:23;;;:45;;-1:-1:-1;;9134:45:7;9160:19;9134:45;;;;;;9263:10;9319:44;;;:32;;;:44;;;;;;9287:17;;;;;;;:29;;;;;9263:10;;9287:76;;;:::i;:::-;9255:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9233:135;;;9382:10;9378:89;;;-1:-1:-1;9455:1:7;9408:17;;;:7;:17;;;;;;;;9441:10;9408:44;;:32;;:44;;;;;:48;8708:765::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;13772:2:8;1998:73:0::1;::::0;::::1;13754:21:8::0;13811:2;13791:18;;;13784:30;13850:34;13830:18;;;13823:62;-1:-1:-1;;;13901:18:8;;;13894:36;13947:19;;1998:73:0::1;13570:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5875:1380:7:-;5971:16;5990:34;;;:22;:34;;;;;;6069:27;6042:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;6034:113;;;;-1:-1:-1;;;6034:113:7;;14179:2:8;6034:113:7;;;14161:21:8;14218:2;14198:18;;;14191:30;14257:34;14237:18;;;14230:62;-1:-1:-1;;;14308:18:8;;;14301:44;14362:19;;6034:113:7;13977:410:8;6034:113:7;6215:17;;;;:7;:17;;;;;:23;;;:46;;-1:-1:-1;;6215:46:7;6241:20;6215:46;;;;;;6314:29;;6300:43;;:11;:43;:::i;:::-;6417:21;6464:17;;;:7;:17;;;;;:30;;:37;6271:72;;-1:-1:-1;6417:21:7;;6511:443;6535:1;6531;:5;6511:443;;;6557:15;6575:17;;;:7;:17;;;;;6608:30;;;:33;;6575:32;;;;;6557:15;;6608:30;6639:1;;6608:33;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6608:33:7;6575:67;;;;;;;;;;;;;;-1:-1:-1;6660:35:7;;;;;;:83;;-1:-1:-1;6720:23:7;6736:7;6720:13;:23;:::i;:::-;6699:18;:44;6660:83;6656:250;;;6834:17;;;;:7;:17;;;;;:30;;:33;;6865:1;;6834:33;;;;;;:::i;:::-;;;;;;;;;;;;;6799:17;;;:7;:17;;;;;;;:24;;:69;;-1:-1:-1;;;;;;6799:69:7;-1:-1:-1;;;;;6834:33:7;;;6799:69;;;;;;-1:-1:-1;6886:5:7;;6656:250;6919:24;6936:7;6919:24;;:::i;:::-;;;6543:411;6538:3;;;;;:::i;:::-;;;;6511:443;;;-1:-1:-1;7056:17:7;;;;:7;:17;;;;;:29;;;;7131;;;;7099;;;;;-1:-1:-1;;;;;7056:29:7;;;;7099:61;;;:::i;:::-;7048:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7016:17:7;;;;:7;:17;;;;;;;;;:26;;;7015:150;;-1:-1:-1;;7015:150:7;;;;;;;;;;;7203:24;;;;;7180:68;;15444:25:8;;;-1:-1:-1;;;;;7203:24:7;;;15485:18:8;;;15478:60;;;;15554:18;;15547:34;;;7180:68:7;;15432:2:8;15417:18;7180:68:7;;;;;;;5961:1294;;;;5875:1380;;:::o;7753:1055:4:-;7857:17;7889:4;-1:-1:-1;;;;;7889:20:4;;7910:14;7926:4;7943:8;6610:1;7932:43;;;;;;;;15766:25:8;;;15822:2;15807:18;;15800:34;15754:2;15739:18;;15592:248;7932:43:4;;;;;;;;;;;;;7889:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8207:15:4;8291:16;;;:6;:16;;;;;;;;;1005:51:5;;;;;16749:25:8;;;16790:18;;;16783:34;;;8284:4:4;16833:18:8;;;16826:60;16902:18;;;;16895:34;;;1005:51:5;;;;;;;;;;16721:19:8;;;;1005:51:5;;;995:62;;;;;;;;;8738:16:4;;;;;;;;:20;;;:::i;:::-;8719:16;;;;:6;:16;;;;;:39;8771:32;8726:8;8795:7;1600:41:5;;;;;;;17097:19:8;;;;17132:12;;;17125:28;;;;1600:41:5;;;;;;;;;17169:12:8;;;;1600:41:5;;1590:52;;;;;;1443:204;8771:32:4;8764:39;7753:1055;-1:-1:-1;;;;7753:1055:4:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:8;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:8;;196:180;-1:-1:-1;196:180:8:o;381:472::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;703:6;700:1;697:13;694:87;;;769:1;762:4;753:6;748:3;744:16;740:27;733:38;694:87;-1:-1:-1;835:2:8;814:15;-1:-1:-1;;810:29:8;801:39;;;;842:4;797:50;;381:472;-1:-1:-1;;381:472:8:o;858:127::-;919:10;914:3;910:20;907:1;900:31;950:4;947:1;940:15;974:4;971:1;964:15;990:1150;1392:4;1421:3;1451:6;1440:9;1433:25;1494:2;1489;1478:9;1474:18;1467:30;1514:45;1555:2;1544:9;1540:18;1532:6;1514:45;:::i;:::-;1590:2;1575:18;;1568:34;;;1633:2;1618:18;;1611:34;;;-1:-1:-1;;;;;1720:15:8;;;1714:3;1699:19;;1692:44;1773:15;;1672:3;1752:19;;1745:44;1820:3;1805:19;;1798:35;;;1864:3;1849:19;;1842:35;;;1506:53;-1:-1:-1;;1907:1:8;1896:13;;1886:144;;1952:10;1947:3;1943:20;1940:1;1933:31;1987:4;1984:1;1977:15;2015:4;2012:1;2005:15;1886:144;2067:6;2061:3;2050:9;2046:19;2039:35;2125:6;2118:14;2111:22;2105:3;2094:9;2090:19;2083:51;990:1150;;;;;;;;;;;;;:::o;2145:173::-;2213:20;;-1:-1:-1;;;;;2262:31:8;;2252:42;;2242:70;;2308:1;2305;2298:12;2242:70;2145:173;;;:::o;2323:254::-;2391:6;2399;2452:2;2440:9;2431:7;2427:23;2423:32;2420:52;;;2468:1;2465;2458:12;2420:52;2504:9;2491:23;2481:33;;2533:38;2567:2;2556:9;2552:18;2533:38;:::i;:::-;2523:48;;2323:254;;;;;:::o;2767:127::-;2828:10;2823:3;2819:20;2816:1;2809:31;2859:4;2856:1;2849:15;2883:4;2880:1;2873:15;2899:1068;2986:6;2994;3002;3055:2;3043:9;3034:7;3030:23;3026:32;3023:52;;;3071:1;3068;3061:12;3023:52;3111:9;3098:23;3140:18;3181:2;3173:6;3170:14;3167:34;;;3197:1;3194;3187:12;3167:34;3235:6;3224:9;3220:22;3210:32;;3280:7;3273:4;3269:2;3265:13;3261:27;3251:55;;3302:1;3299;3292:12;3251:55;3338:2;3325:16;3360:2;3356;3353:10;3350:36;;;3366:18;;:::i;:::-;3441:2;3435:9;3409:2;3495:13;;-1:-1:-1;;3491:22:8;;;3515:2;3487:31;3483:40;3471:53;;;3539:18;;;3559:22;;;3536:46;3533:72;;;3585:18;;:::i;:::-;3625:10;3621:2;3614:22;3660:2;3652:6;3645:18;3702:7;3695:4;3690:2;3686;3682:11;3678:22;3675:35;3672:55;;;3723:1;3720;3713:12;3672:55;3783:2;3776:4;3772:2;3768:13;3761:4;3753:6;3749:17;3736:50;3830:1;3823:4;3818:2;3810:6;3806:15;3802:26;3795:37;3851:6;3841:16;;;;;;;3904:4;3893:9;3889:20;3876:34;3866:44;;3957:2;3946:9;3942:18;3929:32;3919:42;;2899:1068;;;;;:::o;3972:595::-;4265:3;4254:9;4247:22;4228:4;4286:46;4327:3;4316:9;4312:19;4304:6;4286:46;:::i;:::-;-1:-1:-1;;;;;4406:15:8;;;4401:2;4386:18;;4379:43;4458:15;;;;4453:2;4438:18;;4431:43;4505:2;4490:18;;4483:34;;;;4548:3;4533:19;;;4526:35;4278:54;3972:595;-1:-1:-1;;3972:595:8:o;4572:507::-;4833:3;4822:9;4815:22;4796:4;4854:46;4895:3;4884:9;4880:19;4872:6;4854:46;:::i;:::-;4846:54;;4936:6;4931:2;4920:9;4916:18;4909:34;4979:6;4974:2;4963:9;4959:18;4952:34;5022:6;5017:2;5006:9;5002:18;4995:34;5066:6;5060:3;5049:9;5045:19;5038:35;4572:507;;;;;;;;:::o;5292:248::-;5360:6;5368;5421:2;5409:9;5400:7;5396:23;5392:32;5389:52;;;5437:1;5434;5427:12;5389:52;-1:-1:-1;;5460:23:8;;;5530:2;5515:18;;;5502:32;;-1:-1:-1;5292:248:8:o;5980:186::-;6039:6;6092:2;6080:9;6071:7;6067:23;6063:32;6060:52;;;6108:1;6105;6098:12;6060:52;6131:29;6150:9;6131:29;:::i;:::-;6121:39;5980:186;-1:-1:-1;;;5980:186:8:o;6171:380::-;6250:1;6246:12;;;;6293;;;6314:61;;6368:4;6360:6;6356:17;6346:27;;6314:61;6421:2;6413:6;6410:14;6390:18;6387:38;6384:161;;;6467:10;6462:3;6458:20;6455:1;6448:31;6502:4;6499:1;6492:15;6530:4;6527:1;6520:15;6384:161;;6171:380;;;:::o;6556:127::-;6617:10;6612:3;6608:20;6605:1;6598:31;6648:4;6645:1;6638:15;6672:4;6669:1;6662:15;6688:128;6728:3;6759:1;6755:6;6752:1;6749:13;6746:39;;;6765:18;;:::i;:::-;-1:-1:-1;6801:9:8;;6688:128::o;7108:356::-;7310:2;7292:21;;;7329:18;;;7322:30;7388:34;7383:2;7368:18;;7361:62;7455:2;7440:18;;7108:356::o;9491:168::-;9531:7;9597:1;9593;9589:6;9585:14;9582:1;9579:21;9574:1;9567:9;9560:17;9556:45;9553:71;;;9604:18;;:::i;:::-;-1:-1:-1;9644:9:8;;9491:168::o;10077:125::-;10117:4;10145:1;10142;10139:8;10136:34;;;10150:18;;:::i;:::-;-1:-1:-1;10187:9:8;;10077:125::o;11795:184::-;11865:6;11918:2;11906:9;11897:7;11893:23;11889:32;11886:52;;;11934:1;11931;11924:12;11886:52;-1:-1:-1;11957:16:8;;11795:184;-1:-1:-1;11795:184:8:o;14740:209::-;14772:1;14798;14788:132;;14842:10;14837:3;14833:20;14830:1;14823:31;14877:4;14874:1;14867:15;14905:4;14902:1;14895:15;14788:132;-1:-1:-1;14934:9:8;;14740:209::o;14954:127::-;15015:10;15010:3;15006:20;15003:1;14996:31;15046:4;15043:1;15036:15;15070:4;15067:1;15060:15;15086:135;15125:3;-1:-1:-1;;15146:17:8;;15143:43;;;15166:18;;:::i;:::-;-1:-1:-1;15213:1:8;15202:13;;15086:135::o;15845:386::-;16077:1;16073;16068:3;16064:11;16060:19;16052:6;16048:32;16037:9;16030:51;16117:6;16112:2;16101:9;16097:18;16090:34;16160:2;16155;16144:9;16140:18;16133:30;16011:4;16180:45;16221:2;16210:9;16206:18;16198:6;16180:45;:::i;:::-;16172:53;15845:386;-1:-1:-1;;;;;15845:386:8:o;16236:277::-;16303:6;16356:2;16344:9;16335:7;16331:23;16327:32;16324:52;;;16372:1;16369;16362:12;16324:52;16404:9;16398:16;16457:5;16450:13;16443:21;16436:5;16433:32;16423:60;;16479:1;16476;16469:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [320, 9475], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB894AD33 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB894AD33 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xCDA32773 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD1D3BDE3 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xE3AA85CB EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xEF124FAF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x8897CAD3 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xB198333C EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FEC9240 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2FEC9240 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x32DD45FB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x3803ABEF EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x533B4C56 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x57529E6C EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1889611 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1D5CCD9B EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x21D7112E EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x27028A84 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x2EE79DED EQ PUSH2 0x202 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x178F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x6C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x145 SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x7E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x30D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x192E JUMP JUMPDEST PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x425 SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x473 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x481 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0xB SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP4 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND DUP11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50A PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 DUP2 SSTORE DUP8 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x536 SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 SWAP1 DUP10 ADD SWAP1 PUSH2 0x15D1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0x56C SWAP1 DUP6 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0xA5F5EDC69E0AA3C9F2FA246209EF9418FC10A316FFA12F1D807A68692436D06B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP2 AND SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x630 SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65C SWAP1 PUSH2 0x1950 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD GT PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x790 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x630 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x81A PUSH1 0x0 PUSH2 0x112E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x89E DUP3 DUP3 PUSH2 0x117E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8D8 PUSH2 0x16D0 JUMP JUMPDEST EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2930B3333632903737BA1037B832B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149859999B19481A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420636F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x9E4 SWAP1 DUP3 SWAP1 PUSH2 0x19EE JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65742070726963652069732067726561746572207468616E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x8185B5BDD5B9D081CD95B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA69 SWAP1 DUP5 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xAC1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAED SWAP1 DUP5 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB0F SWAP1 DUP3 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0xB19 SWAP1 CALLVALUE PUSH2 0x1A0D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x686520726166666C65 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0xC31 SWAP2 PUSH2 0x19A1 JUMP JUMPDEST GT PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206578706972656420616E642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D0818994818DB185A5B5959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB9 PUSH2 0x16D0 JUMP JUMPDEST EQ PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F742061766169626C6520666F7220636C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x61696D696E67 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST LT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB SWAP1 PUSH2 0xE6A SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726566756E6420706572696F6420686173206E6F7420656E64656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1E595D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x16D0 JUMP JUMPDEST EQ ISZERO PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A19481C9859999B19481A5CC8199A5B9A5CDA1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xF88 PUSH2 0x16D0 JUMP JUMPDEST EQ ISZERO PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C652069732073656C656374696E6720612077696E6E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE CALLER DUP1 DUP8 MSTORE PUSH1 0x9 DUP4 ADD DUP6 MSTORE SWAP3 DUP7 KECCAK256 SLOAD DUP8 DUP8 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 PUSH2 0x1028 SWAP2 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1064 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x89E JUMPI POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x112B DUP2 PUSH2 0x112E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B5 PUSH2 0x16D0 JUMP JUMPDEST EQ PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F7420696E207468652053656C65637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6757696E6E6572207374617465 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADD SLOAD PUSH2 0x1245 SWAP1 DUP5 PUSH2 0x1A3D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x135A JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0x9 SWAP1 SWAP3 ADD SWAP2 DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP DUP5 DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x12D1 JUMPI POP PUSH2 0x12CE DUP2 DUP6 PUSH2 0x19A1 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x133A JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x12F9 JUMPI PUSH2 0x12F9 PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP9 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0x135A JUMP JUMPDEST PUSH2 0x1344 DUP2 DUP6 PUSH2 0x19A1 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x1352 SWAP1 PUSH2 0x1A75 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x125D JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x138E SWAP2 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13CA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xB DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD DUP2 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB14375695E696EE7A5001ECE25E2FCFB144242680D208452819016209AE26F67 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14BE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152E SWAP2 SWAP1 PUSH2 0x1AC0 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1589 SWAP2 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x15C9 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x15DD SWAP1 PUSH2 0x1950 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x15FF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1645 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1618 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1645 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1645 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1645 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x162A JUMP JUMPDEST POP PUSH2 0x1651 SWAP3 SWAP2 POP PUSH2 0x1655 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1651 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x168D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1700 DUP2 DUP5 ADD DUP14 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE DUP10 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP8 SWAP1 MSTORE SWAP2 POP POP PUSH1 0x4 DUP5 LT PUSH2 0x1754 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x17B2 PUSH1 0x20 DUP5 ADD PUSH2 0x1773 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH2 0x1824 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x184C JUMPI PUSH2 0x184C PUSH2 0x17BB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18A8 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18E8 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x191F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1949 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1964 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1985 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B4 PUSH2 0x198B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1A08 PUSH2 0x198B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1A1F JUMPI PUSH2 0x1A1F PUSH2 0x198B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A5A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A89 PUSH2 0x198B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AB7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1683 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SUB LOG4 0x27 COINBASE 0xBE SWAP9 DUP15 0x2B 0xE7 PUSH24 0x509F23191A7A7BBC3887C2ECE75E2E65E07966D60E64736F PUSH13 0x634300080A0033000000000000 ", "sha1": "1e10907b2d614e6b77bf04f58c665765bf60101f", "source": "// contracts/CharityRafflev0.1.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract CharityRaffle is Ownable, VRFConsumerBase {\n    using Counters for Counters.Counter;\n\n    address public linkTokenAddress;\n    uint256 public linkFee;\n    bytes32 public VRFKeyHash;\n    // A contstructor to deal with randomness\n    uint256 public expirationPeriod;\n    constructor(uint256 _expirationPeriod, address _vrfCoordinator, address _linkTokenAddress, uint256 _linkFee, bytes32 _VRFKeyHash) VRFConsumerBase(_vrfCoordinator,_linkTokenAddress){\n        linkFee = _linkFee;\n        VRFKeyHash = _VRFKeyHash;\n        linkTokenAddress = _linkTokenAddress;\n        expirationPeriod = _expirationPeriod;\n    }\n\n    event RequestRandomness(bytes32 requestId);\n    event WinnerChosen(uint256 raffleId, address payable winner, uint256 ticketIndex);\n    event RaffleCreated(address beneficiary, uint256 raffleId);\n\n    enum RaffleState {\n        Open,\n        SelectingWinner,\n        Finished,\n        Expired \n    }\n    // NotStarted: The raffle has not yet begun\n    // Open: The raffle is open for entry\n    // Closed: The raffle is closed for entry\n    // SelectingWinner: The raffle is closed and the winner is being selected\n    // Finished: The raffle is finished and the winner has been selected, beneficiary has been paid\n    // Expired: The raffle has expired since the benificiary has not ended it\n\n    struct Raffle {\n        uint256 id; // unique identifier for the raffle\n        string name; // name of the raffle\n        uint256 ticketCount; // number of tickets bought for this raffle\n        uint256 ticketPrice; // in wei\n        address payable beneficiary; // address of the beneficiary\n        address payable winner; // address of the winner of the raffle, by default it's 0x0\n        uint256 startTime; // unix timestamp of the start of the raffle\n        uint256 endTime; // unix timestamp of the end of the raffle\n        RaffleState state; // state of the raffle\n        mapping(address => uint256) ticketBalances; // mapping of address to ticket count\n        address[] ticketOwners; // array of addresses of the ticket owners (used for iteration through the ticket balances)\n        bool payedOut; // whether the raffle has been payed out\n    }\n\n    // Some rules of how raffles work\n    // 1. Anyone can make a new raffle\n    // 2. Anyone can buy tickets for any open raffle, and this can be for multiple raffles\n    // 3. Tickets are only refundable if the raffle expires, this means that the beneficiary has not claimed the raffle a week after it's end\n    // 4. The beneficiary can only end the raffle after the end time\n\n    Counters.Counter public RaffleCount;\n    mapping(uint256 => Raffle) public Raffles; // mapping of raffle id to raffle data\n    mapping(bytes32 => uint256) public VRFRequestIdTORaffleId; // mapping of VRF request id to raffle id\n\n    // A value that keeps track of all the change givent to the contract\n    uint256 public change = 0;\n\n    function CreateRaffle(string memory _raffleName, uint256 _ticketPrice, uint256 _raffleLength) public returns(uint256 raffleId){\n        RaffleCount.increment();\n        uint256 _id = RaffleCount.current();\n        Raffle storage raffle = Raffles[_id]; \n        raffle.id = _id;\n        raffle.name = _raffleName;\n        raffle.ticketCount = 0;\n        raffle.ticketPrice = _ticketPrice;\n        raffle.beneficiary = payable(msg.sender);\n        raffle.startTime = block.timestamp;\n        raffle.endTime = block.timestamp + _raffleLength;\n        raffle.state = RaffleState.Open;\n        raffle.winner = payable(0x0);\n        emit RaffleCreated(raffle.beneficiary, _id);\n    }\n\n    // Some reader functions for getting info about raffles\n    function GetRaffleInfo(uint256 _id) public view returns (string memory name, address payable beneficiary, address payable winner, uint256 startTime, uint256 endTime) {\n        return (Raffles[_id].name, Raffles[_id].beneficiary, Raffles[_id].winner, Raffles[_id].startTime, Raffles[_id].endTime);\n    }\n\n    function GetRaffleTicketInfo(uint256 _id) public view returns (string memory name, uint256 startTime, uint256 endTime, uint256 ticketCount, uint256 ticketPrice) {\n        return (Raffles[_id].name, Raffles[_id].startTime, Raffles[_id].endTime, Raffles[_id].ticketCount, Raffles[_id].ticketPrice);\n    }\n\n    function GetRaffleBalance(uint256 _id, address owner) public view returns (uint256 balance) {\n        return Raffles[_id].ticketBalances[owner];\n    }\n\n    function GetRaffleCount() public view returns (uint256) {\n        return RaffleCount.current();\n    }\n\n    function ClaimRaffle(uint256 _id) public{\n        require(msg.sender == Raffles[_id].beneficiary, \"Only the beneficiary can claim the raffle\");\n        require(block.timestamp >= Raffles[_id].endTime, \"The raffle has not closed yet\");\n        require(Raffles[_id].endTime + expirationPeriod > block.timestamp, \"The raffle has expired and cannot be claimed\");\n        require(Raffles[_id].state == RaffleState.Open, \"The raffle is not avaible for claiming\");\n        require(IERC20(linkTokenAddress).balanceOf(address(this)) >=  linkFee, \"The contract needs to be paid link token to claim the raffle\");\n        Raffles[_id].state = RaffleState.SelectingWinner;\n        // Fire off the VRF to select the winner\n        bytes32 requestId = requestRandomness(VRFKeyHash, linkFee); // Return a bytes 32 which is the request ID\n        VRFRequestIdTORaffleId[requestId] = _id; // Map the request ID to the raffle ID\n        emit RequestRandomness(requestId);\n    }\n\n    // This is run by the VRF coordinator to finalize the winner\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness) internal override {\n        uint256 raffleId = VRFRequestIdTORaffleId[_requestId];\n        require(Raffles[raffleId].state == RaffleState.SelectingWinner, \"The raffle is not in the SelectingWinner state\");\n        require(_randomness >= 0, \"No randomness found\");\n        Raffles[raffleId].state = RaffleState.Finished;\n        uint256 winningTicketIndex = _randomness % Raffles[raffleId].ticketCount;\n        // Todo: Convert the winning ticket index to an address\n        uint256 ticketCounter = 0;\n        uint256 l = Raffles[raffleId].ticketOwners.length;\n        for (uint256 i = 0; i < l; i++) {\n            uint256 balance = Raffles[raffleId].ticketBalances[Raffles[raffleId].ticketOwners[i]];\n            if (ticketCounter <= winningTicketIndex && winningTicketIndex < ticketCounter + balance) { // We have found the winning ticket\n                Raffles[raffleId].winner = payable(Raffles[raffleId].ticketOwners[i]);\n                break;\n            }\n            ticketCounter += balance;\n        }\n        // Send the raffle money to the beneficiary\n        (Raffles[raffleId].payedOut, ) = payable(Raffles[raffleId].beneficiary).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketCount}(\"\");\n        emit WinnerChosen(raffleId, Raffles[raffleId].winner, winningTicketIndex);\n    }\n\n    // A function to buy tickets for a raffle\n    function BuyTickets(uint256 raffleId, uint256 _ticketCount) public payable {\n        require(Raffles[raffleId].state == RaffleState.Open, \"Raffle not open\");\n        require(block.timestamp < Raffles[raffleId].endTime, \"Raffle is closed\");\n        require(_ticketCount > 0, \"Ticket count must be greater than 0\");\n        require(msg.value >= Raffles[raffleId].ticketPrice * _ticketCount, \"Ticket price is greater than the amount sent\");\n        Raffles[raffleId].ticketCount += _ticketCount;\n        if (Raffles[raffleId].ticketBalances[msg.sender] == 0) { // This will be a list of all of the unique ticket owners (in the order they buy them but that dosent matter dose it)\n            Raffles[raffleId].ticketOwners.push(msg.sender);\n        }\n        Raffles[raffleId].ticketBalances[msg.sender] += _ticketCount;\n        // If the buyer is not in the ticket owners array, add him\n        change += msg.value - Raffles[raffleId].ticketPrice * _ticketCount;\n    }\n\n    // A function for the owner of the contract to collect all the change in the contract\n    function CollectChange() public onlyOwner returns (uint256){\n        require(change > 0, \"There is no change to collect!\");\n        payable(msg.sender).call{value: change}(\"\");\n        uint256 _change = change;\n        change = 0;\n        return _change;\n    }\n\n    // A function for ticket buys to be refunded all the tickets they own\n    function TicketRefund(uint256 raffleId) public{\n        require(block.timestamp >= Raffles[raffleId].endTime + expirationPeriod, \"The refund period has not ended yet\");\n        require(Raffles[raffleId].state != RaffleState.Finished, \"The raffle is finished\");\n        require(Raffles[raffleId].state != RaffleState.SelectingWinner, \"The raffle is selecting a winner.\");\n        // Update the expiration of the raffle\n        Raffles[raffleId].state = RaffleState.Expired;\n        // Send the money back to the buyer\n        (bool transfered, ) = payable(msg.sender).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketBalances[msg.sender]}(\"\");\n        if (transfered) {\n            Raffles[raffleId].ticketBalances[msg.sender] = 0;\n        }\n    }\n}", "sourceMap": "320:9155:7:-:0;;;3216:1;3192:25;;598:341;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:15;760:17;921:32:0;719:10:2;921:18:0;:32::i;:::-;-1:-1:-1;;;;;9370:32:4;;;;;9408;;;;788:7:7::1;:18:::0;;;;816:10:::1;:24:::0;850:16:::1;:36:::0;;-1:-1:-1;;;;;;850:36:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;896:16:7::1;:36:::0;320:9155;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:478::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;433:9;427:16;417:26;;462:49;507:2;496:9;492:18;462:49;:::i;:::-;452:59;;530:49;575:2;564:9;560:18;530:49;:::i;:::-;619:2;604:18;;598:25;663:3;648:19;;;642:26;196:478;;;;-1:-1:-1;520:59:8;598:25;642:26;196:478;-1:-1:-1;;;196:478:8:o;:::-;320:9155:7;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/CharityRaffle.sol", "type": "contract", "deployment": {"address": "0xD3dcD5e25e0803e26bA5A413F2c66C2Db856b22F", "chainid": "4", "blockHeight": 9888385}}