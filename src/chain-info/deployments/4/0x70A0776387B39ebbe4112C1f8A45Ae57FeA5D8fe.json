{"abi": [{"inputs": [{"internalType": "address", "name": "_vrfCoordinator", "type": "address"}, {"internalType": "address", "name": "_linkTokenAddress", "type": "address"}, {"internalType": "uint256", "name": "_linkFee", "type": "uint256"}, {"internalType": "bytes32", "name": "_VRFKeyHash", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "requestId", "type": "bytes32"}], "name": "RequestRandomness", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "raffleId", "type": "uint256"}, {"indexed": false, "internalType": "address payable", "name": "winner", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "ticketIndex", "type": "uint256"}], "name": "WinnerChosen", "type": "event"}, {"inputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}, {"internalType": "uint256", "name": "_ticketCount", "type": "uint256"}], "name": "BuyTickets", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "ClaimRaffle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "CollectChange", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_raffleName", "type": "string"}, {"internalType": "uint256", "name": "_ticketPrice", "type": "uint256"}, {"internalType": "uint256", "name": "_raffleLength", "type": "uint256"}], "name": "CreateRaffle", "outputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "GetRaffleCount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "GetRaffleInfo", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "address payable", "name": "beneficiary", "type": "address"}, {"internalType": "address payable", "name": "winner", "type": "address"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "GetRaffleTicketInfo", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "uint256", "name": "ticketCount", "type": "uint256"}, {"internalType": "uint256", "name": "ticketPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "RaffleCount", "outputs": [{"internalType": "uint256", "name": "_value", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "Raffles", "outputs": [{"internalType": "uint256", "name": "id", "type": "uint256"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "ticketCount", "type": "uint256"}, {"internalType": "uint256", "name": "ticketPrice", "type": "uint256"}, {"internalType": "address payable", "name": "beneficiary", "type": "address"}, {"internalType": "address payable", "name": "winner", "type": "address"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "enum CharityRaffle.RaffleState", "name": "state", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "VRFKeyHash", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "VRFRequestIdTORaffleId", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "change", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "expirationPeriod", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "linkFee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "linkTokenAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "requestId", "type": "bytes32"}, {"internalType": "uint256", "name": "randomness", "type": "uint256"}], "name": "rawFulfillRandomness", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol", "1": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol", "2": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol", "3": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol", "4": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol", "5": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFRequestIDBase.sol", "7": "contracts/CharityRaffle.sol"}, "ast": {"absolutePath": "contracts/CharityRaffle.sol", "exportedSymbols": {"CharityRaffle": [658], "Context": [1058], "Counters": [915], "IERC20": [841], "LinkTokenInterface": [1203], "Ownable": [763], "VRFConsumerBase": [1036], "VRFRequestIDBase": [1108]}, "id": 659, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "67:23:7"}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 659, "sourceUnit": 764, "src": "92:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol", "file": "@openzeppelin/contracts/utils/Counters.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 659, "sourceUnit": 916, "src": "145:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol", "file": "@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 659, "sourceUnit": 1037, "src": "198:63:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 659, "sourceUnit": 842, "src": "262:56:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 6, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 763, "src": "346:7:7"}, "id": 7, "nodeType": "InheritanceSpecifier", "src": "346:7:7"}, {"baseName": {"id": 8, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 1036, "src": "355:15:7"}, "id": 9, "nodeType": "InheritanceSpecifier", "src": "355:15:7"}], "canonicalName": "CharityRaffle", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 658, "linearizedBaseContracts": [658, 1036, 1108, 763, 1058], "name": "CharityRaffle", "nameLocation": "329:13:7", "nodeType": "ContractDefinition", "nodes": [{"id": 13, "libraryName": {"id": 10, "name": "Counters", "nodeType": "IdentifierPath", "referencedDeclaration": 915, "src": "383:8:7"}, "nodeType": "UsingForDirective", "src": "377:36:7", "typeName": {"id": 12, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11, "name": "Counters.Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 847, "src": "396:16:7"}, "referencedDeclaration": 847, "src": "396:16:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$847_storage_ptr", "typeString": "struct Counters.Counter"}}}, {"constant": false, "functionSelector": "ef124faf", "id": 15, "mutability": "mutable", "name": "linkTokenAddress", "nameLocation": "434:16:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "419:31:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "419:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "01889611", "id": 17, "mutability": "mutable", "name": "linkFee", "nameLocation": "471:7:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "456:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "456:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "d1d3bde3", "id": 19, "mutability": "mutable", "name": "VRFKeyHash", "nameLocation": "499:10:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "484:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 18, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "484:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"body": {"id": 46, "nodeType": "Block", "src": "714:115:7", "statements": [{"expression": {"id": 36, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 34, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "724:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 35, "name": "_linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25, "src": "734:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "724:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 37, "nodeType": "ExpressionStatement", "src": "724:18:7"}, {"expression": {"id": 40, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 38, "name": "VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "752:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 39, "name": "_VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "765:11:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "752:24:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 41, "nodeType": "ExpressionStatement", "src": "752:24:7"}, {"expression": {"id": 44, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 42, "name": "linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "786:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 43, "name": "_linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "805:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "786:36:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 45, "nodeType": "ExpressionStatement", "src": "786:36:7"}]}, "id": 47, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 30, "name": "_vrfCoordinator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "680:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 31, "name": "_linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "696:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 32, "kind": "baseConstructorSpecifier", "modifierName": {"id": 29, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 1036, "src": "664:15:7"}, "nodeType": "ModifierInvocation", "src": "664:50:7"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 28, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21, "mutability": "mutable", "name": "_vrfCoordinator", "nameLocation": "581:15:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "573:23:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20, "name": "address", "nodeType": "ElementaryTypeName", "src": "573:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 23, "mutability": "mutable", "name": "_linkTokenAddress", "nameLocation": "606:17:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "598:25:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22, "name": "address", "nodeType": "ElementaryTypeName", "src": "598:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "_linkFee", "nameLocation": "633:8:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "625:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "625:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "_VRFKeyHash", "nameLocation": "651:11:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "643:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 26, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "643:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "572:91:7"}, "returnParameters": {"id": 33, "nodeType": "ParameterList", "parameters": [], "src": "714:0:7"}, "scope": 658, "src": "561:268:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"anonymous": false, "id": 51, "name": "RequestRandomness", "nameLocation": "841:17:7", "nodeType": "EventDefinition", "parameters": {"id": 50, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 49, "indexed": false, "mutability": "mutable", "name": "requestId", "nameLocation": "867:9:7", "nodeType": "VariableDeclaration", "scope": 51, "src": "859:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 48, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "859:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "858:19:7"}, "src": "835:43:7"}, {"anonymous": false, "id": 59, "name": "WinnerChosen", "nameLocation": "889:12:7", "nodeType": "EventDefinition", "parameters": {"id": 58, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 53, "indexed": false, "mutability": "mutable", "name": "raffleId", "nameLocation": "910:8:7", "nodeType": "VariableDeclaration", "scope": 59, "src": "902:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 52, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "902:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 55, "indexed": false, "mutability": "mutable", "name": "winner", "nameLocation": "936:6:7", "nodeType": "VariableDeclaration", "scope": 59, "src": "920:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 54, "name": "address", "nodeType": "ElementaryTypeName", "src": "920:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 57, "indexed": false, "mutability": "mutable", "name": "ticketIndex", "nameLocation": "952:11:7", "nodeType": "VariableDeclaration", "scope": 59, "src": "944:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 56, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "944:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "901:63:7"}, "src": "883:82:7"}, {"canonicalName": "CharityRaffle.RaffleState", "id": 65, "members": [{"id": 60, "name": "Open", "nameLocation": "998:4:7", "nodeType": "EnumValue", "src": "998:4:7"}, {"id": 61, "name": "Closed", "nameLocation": "1012:6:7", "nodeType": "EnumValue", "src": "1012:6:7"}, {"id": 62, "name": "SelectingWinner", "nameLocation": "1028:15:7", "nodeType": "EnumValue", "src": "1028:15:7"}, {"id": 63, "name": "Finished", "nameLocation": "1053:8:7", "nodeType": "EnumValue", "src": "1053:8:7"}, {"id": 64, "name": "Expired", "nameLocation": "1071:7:7", "nodeType": "EnumValue", "src": "1071:7:7"}], "name": "RaffleState", "nameLocation": "976:11:7", "nodeType": "EnumDefinition", "src": "971:114:7"}, {"canonicalName": "CharityRaffle.Raffle", "id": 91, "members": [{"constant": false, "id": 67, "mutability": "mutable", "name": "id", "nameLocation": "1515:2:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1507:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 66, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1507:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 69, "mutability": "mutable", "name": "name", "nameLocation": "1570:4:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1563:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 68, "name": "string", "nodeType": "ElementaryTypeName", "src": "1563:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 71, "mutability": "mutable", "name": "ticketCount", "nameLocation": "1614:11:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1606:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 70, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1606:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 73, "mutability": "mutable", "name": "ticketPrice", "nameLocation": "1687:11:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1679:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 72, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1679:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 75, "mutability": "mutable", "name": "beneficiary", "nameLocation": "1734:11:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1718:27:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 74, "name": "address", "nodeType": "ElementaryTypeName", "src": "1718:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 77, "mutability": "mutable", "name": "winner", "nameLocation": "1801:6:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1785:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 76, "name": "address", "nodeType": "ElementaryTypeName", "src": "1785:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 79, "mutability": "mutable", "name": "startTime", "nameLocation": "1885:9:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1877:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 78, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1877:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 81, "mutability": "mutable", "name": "endTime", "nameLocation": "1957:7:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "1949:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 80, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1949:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 84, "mutability": "mutable", "name": "state", "nameLocation": "2029:5:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "2017:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}, "typeName": {"id": 83, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 82, "name": "RaffleState", "nodeType": "IdentifierPath", "referencedDeclaration": 65, "src": "2017:11:7"}, "referencedDeclaration": 65, "src": "2017:11:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "visibility": "internal"}, {"constant": false, "id": 87, "mutability": "mutable", "name": "ticketOwners", "nameLocation": "2085:12:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "2067:30:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr", "typeString": "address payable[]"}, "typeName": {"baseType": {"id": 85, "name": "address", "nodeType": "ElementaryTypeName", "src": "2067:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 86, "nodeType": "ArrayTypeName", "src": "2067:17:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr", "typeString": "address payable[]"}}, "visibility": "internal"}, {"constant": false, "id": 90, "mutability": "mutable", "name": "ticketNumbers", "nameLocation": "2188:13:7", "nodeType": "VariableDeclaration", "scope": 91, "src": "2178:23:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 88, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2178:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 89, "nodeType": "ArrayTypeName", "src": "2178:9:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "name": "Raffle", "nameLocation": "1490:6:7", "nodeType": "StructDefinition", "scope": 658, "src": "1483:785:7", "visibility": "public"}, {"constant": true, "functionSelector": "8897cad3", "id": 100, "mutability": "constant", "name": "expirationPeriod", "nameLocation": "2677:16:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "2653:59:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 92, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2653:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800"}, "id": 99, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_rational_10080_by_1", "typeString": "int_const 10080"}, "id": 97, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_rational_168_by_1", "typeString": "int_const 168"}, "id": 95, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "37", "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2696:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_7_by_1", "typeString": "int_const 7"}, "value": "7"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3234", "id": 94, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2700:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_24_by_1", "typeString": "int_const 24"}, "value": "24"}, "src": "2696:6:7", "typeDescriptions": {"typeIdentifier": "t_rational_168_by_1", "typeString": "int_const 168"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3630", "id": 96, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2705:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_60_by_1", "typeString": "int_const 60"}, "value": "60"}, "src": "2696:11:7", "typeDescriptions": {"typeIdentifier": "t_rational_10080_by_1", "typeString": "int_const 10080"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3630", "id": 98, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2710:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_60_by_1", "typeString": "int_const 60"}, "value": "60"}, "src": "2696:16:7", "typeDescriptions": {"typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800"}}, "visibility": "public"}, {"constant": false, "functionSelector": "57529e6c", "id": 103, "mutability": "mutable", "name": "RaffleCount", "nameLocation": "2764:11:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "2740:35:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$847_storage", "typeString": "struct Counters.Counter"}, "typeName": {"id": 102, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 101, "name": "Counters.Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 847, "src": "2740:16:7"}, "referencedDeclaration": 847, "src": "2740:16:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$847_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1d5ccd9b", "id": 108, "mutability": "mutable", "name": "Raffles", "nameLocation": "2815:7:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "2781:41:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"}, "typeName": {"id": 107, "keyType": {"id": 104, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2789:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "2781:26:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"}, "valueType": {"id": 106, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 105, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 91, "src": "2800:6:7"}, "referencedDeclaration": 91, "src": "2800:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "27028a84", "id": 112, "mutability": "mutable", "name": "VRFRequestIdTORaffleId", "nameLocation": "2902:22:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "2867:57:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}, "typeName": {"id": 111, "keyType": {"id": 109, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2875:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "2867:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}, "valueType": {"id": 110, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2886:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "2ee79ded", "id": 115, "mutability": "mutable", "name": "change", "nameLocation": "3061:6:7", "nodeType": "VariableDeclaration", "scope": 658, "src": "3046:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3046:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 114, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3070:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"body": {"id": 212, "nodeType": "Block", "src": "3204:518:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 126, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "3214:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$847_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 128, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "increment", "nodeType": "MemberAccess", "referencedDeclaration": 873, "src": "3214:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$847_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$847_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3214:23:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 130, "nodeType": "ExpressionStatement", "src": "3214:23:7"}, {"assignments": [132], "declarations": [{"constant": false, "id": 132, "mutability": "mutable", "name": "_id", "nameLocation": "3255:3:7", "nodeType": "VariableDeclaration", "scope": 212, "src": "3247:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 131, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3247:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 136, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 133, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "3261:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$847_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 134, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 859, "src": "3261:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$847_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$847_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 135, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3261:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3247:35:7"}, {"assignments": [139], "declarations": [{"constant": false, "id": 139, "mutability": "mutable", "name": "raffle", "nameLocation": "3307:6:7", "nodeType": "VariableDeclaration", "scope": 212, "src": "3292:21:7", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}, "typeName": {"id": 138, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 137, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 91, "src": "3292:6:7"}, "referencedDeclaration": 91, "src": "3292:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}, "visibility": "internal"}], "id": 143, "initialValue": {"baseExpression": {"id": 140, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "3316:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 142, "indexExpression": {"id": 141, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "3324:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3316:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3292:36:7"}, {"expression": {"id": 148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 144, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3339:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 146, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 67, "src": "3339:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 147, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "3351:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3339:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 149, "nodeType": "ExpressionStatement", "src": "3339:15:7"}, {"expression": {"id": 154, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 150, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3364:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 152, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "3364:11:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 153, "name": "_raffleName", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "3378:11:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "3364:25:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 155, "nodeType": "ExpressionStatement", "src": "3364:25:7"}, {"expression": {"id": 160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 156, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3399:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 158, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "3399:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 159, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3420:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3399:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 161, "nodeType": "ExpressionStatement", "src": "3399:22:7"}, {"expression": {"id": 166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 162, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3431:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 164, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "3431:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 165, "name": "_ticketPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 119, "src": "3452:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3431:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 167, "nodeType": "ExpressionStatement", "src": "3431:33:7"}, {"expression": {"id": 176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 168, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3474:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 170, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "3474:18:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 173, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3503:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3503:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 172, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3495:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 171, "name": "address", "nodeType": "ElementaryTypeName", "src": "3495:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 175, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3495:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3474:40:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 177, "nodeType": "ExpressionStatement", "src": "3474:40:7"}, {"expression": {"id": 183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 178, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3524:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 180, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "3524:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 181, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3543:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3543:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3524:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 184, "nodeType": "ExpressionStatement", "src": "3524:34:7"}, {"expression": {"id": 192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 185, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3568:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 187, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "3568:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 188, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3585:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3585:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 190, "name": "_raffleLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 121, "src": "3603:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3585:31:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3568:48:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 193, "nodeType": "ExpressionStatement", "src": "3568:48:7"}, {"expression": {"id": 199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 194, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3626:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 196, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "3626:12:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 197, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "3641:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$65_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 198, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 60, "src": "3641:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "3626:31:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 200, "nodeType": "ExpressionStatement", "src": "3626:31:7"}, {"expression": {"id": 208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 201, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 139, "src": "3667:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 203, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "3667:13:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "307830", "id": 206, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3691:3:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 205, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3683:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 204, "name": "address", "nodeType": "ElementaryTypeName", "src": "3683:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 207, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3683:12:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3667:28:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 209, "nodeType": "ExpressionStatement", "src": "3667:28:7"}, {"expression": {"id": 210, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "3712:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 125, "id": 211, "nodeType": "Return", "src": "3705:10:7"}]}, "functionSelector": "2fec9240", "id": 213, "implemented": true, "kind": "function", "modifiers": [], "name": "CreateRaffle", "nameLocation": "3087:12:7", "nodeType": "FunctionDefinition", "parameters": {"id": 122, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 117, "mutability": "mutable", "name": "_raffleName", "nameLocation": "3114:11:7", "nodeType": "VariableDeclaration", "scope": 213, "src": "3100:25:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 116, "name": "string", "nodeType": "ElementaryTypeName", "src": "3100:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 119, "mutability": "mutable", "name": "_ticketPrice", "nameLocation": "3135:12:7", "nodeType": "VariableDeclaration", "scope": 213, "src": "3127:20:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 118, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3127:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 121, "mutability": "mutable", "name": "_raffleLength", "nameLocation": "3157:13:7", "nodeType": "VariableDeclaration", "scope": 213, "src": "3149:21:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 120, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3149:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3099:72:7"}, "returnParameters": {"id": 125, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 124, "mutability": "mutable", "name": "raffleId", "nameLocation": "3195:8:7", "nodeType": "VariableDeclaration", "scope": 213, "src": "3187:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 123, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3187:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3186:18:7"}, "scope": 658, "src": "3078:644:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 250, "nodeType": "Block", "src": "3954:136:7", "statements": [{"expression": {"components": [{"expression": {"baseExpression": {"id": 228, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "3972:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 230, "indexExpression": {"id": 229, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "3980:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3972:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 231, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "3972:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"expression": {"baseExpression": {"id": 232, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "3991:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 234, "indexExpression": {"id": 233, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "3999:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3991:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 235, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "3991:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"expression": {"baseExpression": {"id": 236, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4017:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 238, "indexExpression": {"id": 237, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "4025:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4017:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 239, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "4017:19:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"expression": {"baseExpression": {"id": 240, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4038:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 242, "indexExpression": {"id": 241, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "4046:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4038:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 243, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "4038:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 244, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4062:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 246, "indexExpression": {"id": 245, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 215, "src": "4070:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4062:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 247, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "4062:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 248, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3971:112:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint256_$", "typeString": "tuple(string storage ref,address payable,address payable,uint256,uint256)"}}, "functionReturnParameters": 227, "id": 249, "nodeType": "Return", "src": "3964:119:7"}]}, "functionSelector": "32dd45fb", "id": 251, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleInfo", "nameLocation": "3797:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 216, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 215, "mutability": "mutable", "name": "_id", "nameLocation": "3819:3:7", "nodeType": "VariableDeclaration", "scope": 251, "src": "3811:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3811:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3810:13:7"}, "returnParameters": {"id": 227, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 218, "mutability": "mutable", "name": "name", "nameLocation": "3859:4:7", "nodeType": "VariableDeclaration", "scope": 251, "src": "3845:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 217, "name": "string", "nodeType": "ElementaryTypeName", "src": "3845:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 220, "mutability": "mutable", "name": "beneficiary", "nameLocation": "3881:11:7", "nodeType": "VariableDeclaration", "scope": 251, "src": "3865:27:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 219, "name": "address", "nodeType": "ElementaryTypeName", "src": "3865:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 222, "mutability": "mutable", "name": "winner", "nameLocation": "3910:6:7", "nodeType": "VariableDeclaration", "scope": 251, "src": "3894:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 221, "name": "address", "nodeType": "ElementaryTypeName", "src": "3894:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 224, "mutability": "mutable", "name": "startTime", "nameLocation": "3926:9:7", "nodeType": "VariableDeclaration", "scope": 251, "src": "3918:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 223, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3918:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 226, "mutability": "mutable", "name": "endTime", "nameLocation": "3945:7:7", "nodeType": "VariableDeclaration", "scope": 251, "src": "3937:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 225, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3937:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3844:109:7"}, "scope": 658, "src": "3788:302:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 288, "nodeType": "Block", "src": "4257:141:7", "statements": [{"expression": {"components": [{"expression": {"baseExpression": {"id": 266, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4275:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 268, "indexExpression": {"id": 267, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "4283:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4275:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 269, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "4275:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"expression": {"baseExpression": {"id": 270, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4294:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 272, "indexExpression": {"id": 271, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "4302:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4294:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 273, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "4294:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 274, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4318:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 276, "indexExpression": {"id": 275, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "4326:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4318:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 277, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "4318:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 278, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4340:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 280, "indexExpression": {"id": 279, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "4348:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4340:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 281, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "4340:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 282, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4366:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 284, "indexExpression": {"id": 283, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "4374:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4366:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 285, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "4366:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 286, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4274:117:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(string storage ref,uint256,uint256,uint256,uint256)"}}, "functionReturnParameters": 265, "id": 287, "nodeType": "Return", "src": "4267:124:7"}]}, "functionSelector": "533b4c56", "id": 289, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleTicketInfo", "nameLocation": "4105:19:7", "nodeType": "FunctionDefinition", "parameters": {"id": 254, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 253, "mutability": "mutable", "name": "_id", "nameLocation": "4133:3:7", "nodeType": "VariableDeclaration", "scope": 289, "src": "4125:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 252, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4125:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4124:13:7"}, "returnParameters": {"id": 265, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 256, "mutability": "mutable", "name": "name", "nameLocation": "4173:4:7", "nodeType": "VariableDeclaration", "scope": 289, "src": "4159:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 255, "name": "string", "nodeType": "ElementaryTypeName", "src": "4159:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 258, "mutability": "mutable", "name": "startTime", "nameLocation": "4187:9:7", "nodeType": "VariableDeclaration", "scope": 289, "src": "4179:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 257, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4179:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 260, "mutability": "mutable", "name": "endTime", "nameLocation": "4206:7:7", "nodeType": "VariableDeclaration", "scope": 289, "src": "4198:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 259, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4198:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 262, "mutability": "mutable", "name": "ticketCount", "nameLocation": "4223:11:7", "nodeType": "VariableDeclaration", "scope": 289, "src": "4215:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4215:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 264, "mutability": "mutable", "name": "ticketPrice", "nameLocation": "4244:11:7", "nodeType": "VariableDeclaration", "scope": 289, "src": "4236:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4236:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4158:98:7"}, "scope": 658, "src": "4096:302:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 298, "nodeType": "Block", "src": "4460:45:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 294, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "4477:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$847_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 295, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 859, "src": "4477:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$847_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$847_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4477:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 293, "id": 297, "nodeType": "Return", "src": "4470:28:7"}]}, "functionSelector": "b198333c", "id": 299, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleCount", "nameLocation": "4413:14:7", "nodeType": "FunctionDefinition", "parameters": {"id": 290, "nodeType": "ParameterList", "parameters": [], "src": "4427:2:7"}, "returnParameters": {"id": 293, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 292, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 299, "src": "4451:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 291, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4451:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4450:9:7"}, "scope": 658, "src": "4404:101:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 390, "nodeType": "Block", "src": "4551:915:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 305, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4569:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 306, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4569:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"baseExpression": {"id": 307, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4583:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 309, "indexExpression": {"id": 308, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "4591:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4583:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 310, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "4583:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "4569:38:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074686520726166666c65", "id": 312, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4609:43:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220", "typeString": "literal_string \"Only the beneficiary can claim the raffle\""}, "value": "Only the beneficiary can claim the raffle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220", "typeString": "literal_string \"Only the beneficiary can claim the raffle\""}], "id": 304, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4561:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 313, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4561:92:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 314, "nodeType": "ExpressionStatement", "src": "4561:92:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 322, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 316, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4671:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 317, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4671:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"baseExpression": {"id": 318, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4690:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 320, "indexExpression": {"id": 319, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "4698:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4690:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 321, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "4690:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4671:39:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520686173206e6f7420636c6f73656420796574", "id": 323, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4712:31:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45", "typeString": "literal_string \"The raffle has not closed yet\""}, "value": "The raffle has not closed yet"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45", "typeString": "literal_string \"The raffle has not closed yet\""}], "id": 315, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4663:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 324, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4663:81:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 325, "nodeType": "ExpressionStatement", "src": "4663:81:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 332, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 327, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4762:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 329, "indexExpression": {"id": 328, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "4770:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4762:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 330, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "4762:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 331, "name": "expirationPeriod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 100, "src": "4785:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4762:39:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 333, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4804:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 334, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4804:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4762:57:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520686173206578706972656420616e642063616e6e6f7420626520636c61696d6564", "id": 336, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4821:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5", "typeString": "literal_string \"The raffle has expired and cannot be claimed\""}, "value": "The raffle has expired and cannot be claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5", "typeString": "literal_string \"The raffle has expired and cannot be claimed\""}], "id": 326, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4754:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 337, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4754:114:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 338, "nodeType": "ExpressionStatement", "src": "4754:114:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}, "id": 346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 340, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "4886:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 342, "indexExpression": {"id": 341, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "4894:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4886:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 343, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "4886:18:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 344, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "4908:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$65_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 345, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Finished", "nodeType": "MemberAccess", "referencedDeclaration": 63, "src": "4908:20:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "4886:42:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520697320616c6c72656164792066696e6973686564", "id": 347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4930:33:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24239d40cae952524a1d78e85fc0737e9bba6028d0e41c372859579be607fb16", "typeString": "literal_string \"The raffle is allready finished\""}, "value": "The raffle is allready finished"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_24239d40cae952524a1d78e85fc0737e9bba6028d0e41c372859579be607fb16", "typeString": "literal_string \"The raffle is allready finished\""}], "id": 339, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4878:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4878:86:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 349, "nodeType": "ExpressionStatement", "src": "4878:86:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 357, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5025:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_CharityRaffle_$658", "typeString": "contract CharityRaffle"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CharityRaffle_$658", "typeString": "contract CharityRaffle"}], "id": 356, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5017:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 355, "name": "address", "nodeType": "ElementaryTypeName", "src": "5017:7:7", "typeDescriptions": {}}}, "id": 358, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5017:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 352, "name": "linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "4989:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 351, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 841, "src": "4982:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$841_$", "typeString": "type(contract IERC20)"}}, "id": 353, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4982:24:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$841", "typeString": "contract IERC20"}}, "id": 354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 780, "src": "4982:34:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4982:49:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 360, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "5036:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4982:61:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520636f6e7472616374206e6565647320746f2062652070616964206c696e6b20746f6b656e20746f20636c61696d2074686520726166666c65", "id": 362, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5045:62:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872", "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""}, "value": "The contract needs to be paid link token to claim the raffle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872", "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""}], "id": 350, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4974:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4974:134:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 364, "nodeType": "ExpressionStatement", "src": "4974:134:7"}, {"expression": {"id": 371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 365, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "5118:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 367, "indexExpression": {"id": 366, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "5126:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5118:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 368, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "5118:18:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 369, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "5139:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$65_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 370, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "5139:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5118:48:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 372, "nodeType": "ExpressionStatement", "src": "5118:48:7"}, {"assignments": [374], "declarations": [{"constant": false, "id": 374, "mutability": "mutable", "name": "requestId", "nameLocation": "5233:9:7", "nodeType": "VariableDeclaration", "scope": 390, "src": "5225:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 373, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5225:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 379, "initialValue": {"arguments": [{"id": 376, "name": "VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "5263:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 377, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "5275:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 375, "name": "requestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 986, "src": "5245:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (bytes32,uint256) returns (bytes32)"}}, "id": 378, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5245:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5225:58:7"}, {"expression": {"id": 384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 380, "name": "VRFRequestIdTORaffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "5338:22:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}}, "id": 382, "indexExpression": {"id": 381, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "5361:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5338:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 383, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "5374:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5338:39:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 385, "nodeType": "ExpressionStatement", "src": "5338:39:7"}, {"eventCall": {"arguments": [{"id": 387, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "5449:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 386, "name": "RequestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "5431:17:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 388, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5431:28:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 389, "nodeType": "EmitStatement", "src": "5426:33:7"}]}, "functionSelector": "cda32773", "id": 391, "implemented": true, "kind": "function", "modifiers": [], "name": "ClaimRaffle", "nameLocation": "4520:11:7", "nodeType": "FunctionDefinition", "parameters": {"id": 302, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 301, "mutability": "mutable", "name": "_id", "nameLocation": "4540:3:7", "nodeType": "VariableDeclaration", "scope": 391, "src": "4532:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4532:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4531:13:7"}, "returnParameters": {"id": 303, "nodeType": "ParameterList", "parameters": [], "src": "4551:0:7"}, "scope": 658, "src": "4511:955:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [930], "body": {"id": 531, "nodeType": "Block", "src": "5623:1184:7", "statements": [{"assignments": [400], "declarations": [{"constant": false, "id": 400, "mutability": "mutable", "name": "raffleId", "nameLocation": "5641:8:7", "nodeType": "VariableDeclaration", "scope": 531, "src": "5633:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 399, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5633:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 404, "initialValue": {"baseExpression": {"id": 401, "name": "VRFRequestIdTORaffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "5652:22:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}}, "id": 403, "indexExpression": {"id": 402, "name": "_requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "5675:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5652:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5633:53:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}, "id": 412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 406, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "5704:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 408, "indexExpression": {"id": 407, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "5712:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5704:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 409, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "5704:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 410, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "5731:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$65_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 411, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 62, "src": "5731:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5704:54:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c65206973206e6f7420696e207468652053656c656374696e6757696e6e6572207374617465", "id": 413, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5760:48:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c", "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""}, "value": "The raffle is not in the SelectingWinner state"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c", "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""}], "id": 405, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5696:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 414, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5696:113:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 415, "nodeType": "ExpressionStatement", "src": "5696:113:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 417, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "5827:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 418, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5842:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5827:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2072616e646f6d6e65737320666f756e64", "id": 420, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5845:21:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de", "typeString": "literal_string \"No randomness found\""}, "value": "No randomness found"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de", "typeString": "literal_string \"No randomness found\""}], "id": 416, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5819:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5819:48:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 422, "nodeType": "ExpressionStatement", "src": "5819:48:7"}, {"expression": {"id": 429, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 423, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "5877:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 425, "indexExpression": {"id": 424, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "5885:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5877:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 426, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "5877:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 427, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "5903:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$65_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 428, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Finished", "nodeType": "MemberAccess", "referencedDeclaration": 63, "src": "5903:20:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5877:46:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 430, "nodeType": "ExpressionStatement", "src": "5877:46:7"}, {"assignments": [432], "declarations": [{"constant": false, "id": 432, "mutability": "mutable", "name": "winningTicketIndex", "nameLocation": "5941:18:7", "nodeType": "VariableDeclaration", "scope": 531, "src": "5933:26:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 431, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5933:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 439, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 433, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "5962:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"expression": {"baseExpression": {"id": 434, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "5976:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 436, "indexExpression": {"id": 435, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "5984:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5976:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 437, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "5976:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5962:43:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5933:72:7"}, {"assignments": [441], "declarations": [{"constant": false, "id": 441, "mutability": "mutable", "name": "ticketCounter", "nameLocation": "6087:13:7", "nodeType": "VariableDeclaration", "scope": 531, "src": "6079:21:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 440, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6079:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 443, "initialValue": {"hexValue": "30", "id": 442, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6103:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6079:25:7"}, {"assignments": [445], "declarations": [{"constant": false, "id": 445, "mutability": "mutable", "name": "l", "nameLocation": "6122:1:7", "nodeType": "VariableDeclaration", "scope": 531, "src": "6114:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 444, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6114:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 451, "initialValue": {"expression": {"expression": {"baseExpression": {"id": 446, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6126:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 448, "indexExpression": {"id": 447, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6134:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6126:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 449, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 87, "src": "6126:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6126:37:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6114:49:7"}, {"body": {"id": 499, "nodeType": "Block", "src": "6205:334:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 462, "name": "ticketCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 441, "src": "6223:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 463, "name": "winningTicketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 432, "src": "6240:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6223:35:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 465, "name": "winningTicketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 432, "src": "6262:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 466, "name": "ticketCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 441, "src": "6283:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"baseExpression": {"expression": {"baseExpression": {"id": 467, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6299:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 469, "indexExpression": {"id": 468, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6307:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6299:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 470, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketNumbers", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "6299:31:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 472, "indexExpression": {"id": 471, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "6331:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6299:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6283:50:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6262:71:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6223:110:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 489, "nodeType": "IfStatement", "src": "6219:245:7", "trueBody": {"id": 488, "nodeType": "Block", "src": "6335:129:7", "statements": [{"expression": {"id": 486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 476, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6389:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 478, "indexExpression": {"id": 477, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6397:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6389:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 479, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "6389:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"expression": {"baseExpression": {"id": 480, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6416:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 482, "indexExpression": {"id": 481, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6424:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6416:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 483, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 87, "src": "6416:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 485, "indexExpression": {"id": 484, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "6447:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6416:33:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "6389:60:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 487, "nodeType": "ExpressionStatement", "src": "6389:60:7"}]}}, {"expression": {"id": 497, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 490, "name": "ticketCounter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 441, "src": "6477:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"baseExpression": {"expression": {"baseExpression": {"id": 491, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6494:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 493, "indexExpression": {"id": 492, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6502:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6494:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 494, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketNumbers", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "6494:31:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 496, "indexExpression": {"id": 495, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "6526:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6494:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6477:51:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 498, "nodeType": "ExpressionStatement", "src": "6477:51:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 458, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 456, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "6193:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 457, "name": "l", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 445, "src": "6197:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6193:5:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 500, "initializationExpression": {"assignments": [453], "declarations": [{"constant": false, "id": 453, "mutability": "mutable", "name": "i", "nameLocation": "6186:1:7", "nodeType": "VariableDeclaration", "scope": 500, "src": "6178:9:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6178:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 455, "initialValue": {"hexValue": "30", "id": 454, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6190:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6178:13:7"}, "loopExpression": {"expression": {"id": 460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6200:3:7", "subExpression": {"id": 459, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "6200:1:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 461, "nodeType": "ExpressionStatement", "src": "6200:3:7"}, "nodeType": "ForStatement", "src": "6173:366:7"}, {"expression": {"arguments": [{"hexValue": "", "id": 519, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6714:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 503, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6608:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 505, "indexExpression": {"id": 504, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6616:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6608:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 506, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "6608:29:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 502, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6600:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 501, "name": "address", "nodeType": "ElementaryTypeName", "src": "6600:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6600:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "6600:43:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 517, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 509, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6651:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 511, "indexExpression": {"id": 510, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6659:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6651:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 512, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "6651:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"baseExpression": {"id": 513, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6683:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 515, "indexExpression": {"id": 514, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6691:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6683:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 516, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "6683:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6651:61:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "6600:113:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 520, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6600:117:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "id": 521, "nodeType": "ExpressionStatement", "src": "6600:117:7"}, {"eventCall": {"arguments": [{"id": 523, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6745:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 524, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6755:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 526, "indexExpression": {"id": 525, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 400, "src": "6763:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6755:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 527, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "6755:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 528, "name": "winningTicketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 432, "src": "6781:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 522, "name": "WinnerChosen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "6732:12:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$_t_uint256_$returns$__$", "typeString": "function (uint256,address payable,uint256)"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6732:68:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 530, "nodeType": "EmitStatement", "src": "6727:73:7"}]}, "id": 532, "implemented": true, "kind": "function", "modifiers": [], "name": "fulfillRandomness", "nameLocation": "5546:17:7", "nodeType": "FunctionDefinition", "overrides": {"id": 397, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5614:8:7"}, "parameters": {"id": 396, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 393, "mutability": "mutable", "name": "_requestId", "nameLocation": "5572:10:7", "nodeType": "VariableDeclaration", "scope": 532, "src": "5564:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 392, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5564:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 395, "mutability": "mutable", "name": "_randomness", "nameLocation": "5592:11:7", "nodeType": "VariableDeclaration", "scope": 532, "src": "5584:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 394, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5584:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5563:41:7"}, "returnParameters": {"id": 398, "nodeType": "ParameterList", "parameters": [], "src": "5623:0:7"}, "scope": 658, "src": "5537:1270:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 620, "nodeType": "Block", "src": "6934:625:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}, "id": 546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 540, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "6952:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 542, "indexExpression": {"id": 541, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "6960:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6952:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 543, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 84, "src": "6952:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 544, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "6979:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$65_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 545, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 60, "src": "6979:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$65", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "6952:43:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526166666c65206e6f74206f70656e", "id": 547, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6997:17:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea", "typeString": "literal_string \"Raffle not open\""}, "value": "Raffle not open"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea", "typeString": "literal_string \"Raffle not open\""}], "id": 539, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6944:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 548, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6944:71:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 549, "nodeType": "ExpressionStatement", "src": "6944:71:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 551, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7033:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7033:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"baseExpression": {"id": 553, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "7051:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 555, "indexExpression": {"id": 554, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "7059:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7051:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 556, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 81, "src": "7051:25:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7033:43:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526166666c6520697320636c6f736564", "id": 558, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7078:18:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a", "typeString": "literal_string \"Raffle is closed\""}, "value": "Raffle is closed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a", "typeString": "literal_string \"Raffle is closed\""}], "id": 550, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7025:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7025:72:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 560, "nodeType": "ExpressionStatement", "src": "7025:72:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 564, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 562, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "7115:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 563, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7130:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7115:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5469636b657420636f756e74206d7573742062652067726561746572207468616e2030", "id": 565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7133:37:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3", "typeString": "literal_string \"Ticket count must be greater than 0\""}, "value": "Ticket count must be greater than 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3", "typeString": "literal_string \"Ticket count must be greater than 0\""}], "id": 561, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7107:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7107:64:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 567, "nodeType": "ExpressionStatement", "src": "7107:64:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 569, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7189:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "7189:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 571, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "7202:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 573, "indexExpression": {"id": 572, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "7210:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7202:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 574, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "7202:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 575, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "7234:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7202:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7189:57:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5469636b65742070726963652069732067726561746572207468616e2074686520616d6f756e742073656e74", "id": 578, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7248:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8", "typeString": "literal_string \"Ticket price is greater than the amount sent\""}, "value": "Ticket price is greater than the amount sent"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8", "typeString": "literal_string \"Ticket price is greater than the amount sent\""}], "id": 568, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7181:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7181:114:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 580, "nodeType": "ExpressionStatement", "src": "7181:114:7"}, {"expression": {"id": 586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 581, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "7305:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 583, "indexExpression": {"id": 582, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "7313:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7305:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 584, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "7305:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 585, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "7338:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7305:45:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 587, "nodeType": "ExpressionStatement", "src": "7305:45:7"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 595, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7404:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 596, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7404:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 594, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7396:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 593, "name": "address", "nodeType": "ElementaryTypeName", "src": "7396:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 597, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7396:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "expression": {"expression": {"baseExpression": {"id": 588, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "7360:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 590, "indexExpression": {"id": 589, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "7368:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7360:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 591, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketOwners", "nodeType": "MemberAccess", "referencedDeclaration": 87, "src": "7360:30:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "7360:35:7", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$", "typeString": "function (address payable[] storage pointer,address payable)"}}, "id": 598, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7360:56:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 599, "nodeType": "ExpressionStatement", "src": "7360:56:7"}, {"expression": {"arguments": [{"id": 605, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "7463:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"baseExpression": {"id": 600, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "7426:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 602, "indexExpression": {"id": 601, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "7434:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7426:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 603, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketNumbers", "nodeType": "MemberAccess", "referencedDeclaration": 90, "src": "7426:31:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "7426:36:7", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$", "typeString": "function (uint256[] storage pointer,uint256)"}}, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7426:50:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 607, "nodeType": "ExpressionStatement", "src": "7426:50:7"}, {"expression": {"id": 618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 608, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7486:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 609, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7496:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 610, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "7496:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 611, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "7508:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$91_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 613, "indexExpression": {"id": 612, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "7516:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7508:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$91_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 614, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "7508:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 615, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "7540:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7508:44:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7496:56:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7486:66:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 619, "nodeType": "ExpressionStatement", "src": "7486:66:7"}]}, "functionSelector": "b894ad33", "id": 621, "implemented": true, "kind": "function", "modifiers": [], "name": "BuyTickets", "nameLocation": "6868:10:7", "nodeType": "FunctionDefinition", "parameters": {"id": 537, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 534, "mutability": "mutable", "name": "raffleId", "nameLocation": "6887:8:7", "nodeType": "VariableDeclaration", "scope": 621, "src": "6879:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 533, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6879:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 536, "mutability": "mutable", "name": "_ticketCount", "nameLocation": "6905:12:7", "nodeType": "VariableDeclaration", "scope": 621, "src": "6897:20:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 535, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6897:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6878:40:7"}, "returnParameters": {"id": 538, "nodeType": "ParameterList", "parameters": [], "src": "6934:0:7"}, "scope": 658, "src": "6859:700:7", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 656, "nodeType": "Block", "src": "7714:201:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 629, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7732:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 630, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7741:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7732:10:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468657265206973206e6f206368616e676520746f20636f6c6c65637421", "id": 632, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7744:32:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee", "typeString": "literal_string \"There is no change to collect!\""}, "value": "There is no change to collect!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee", "typeString": "literal_string \"There is no change to collect!\""}], "id": 628, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7724:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 633, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7724:53:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 634, "nodeType": "ExpressionStatement", "src": "7724:53:7"}, {"expression": {"arguments": [{"hexValue": "", "id": 643, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7827:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"id": 637, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7795:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7795:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 636, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7787:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 635, "name": "address", "nodeType": "ElementaryTypeName", "src": "7787:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 639, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7787:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 640, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "7787:24:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 642, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 641, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7819:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "7787:39:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 644, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7787:43:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "id": 645, "nodeType": "ExpressionStatement", "src": "7787:43:7"}, {"assignments": [647], "declarations": [{"constant": false, "id": 647, "mutability": "mutable", "name": "_change", "nameLocation": "7848:7:7", "nodeType": "VariableDeclaration", "scope": 656, "src": "7840:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 646, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7840:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 649, "initialValue": {"id": 648, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7858:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7840:24:7"}, {"expression": {"id": 652, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 650, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "7874:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 651, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7883:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7874:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 653, "nodeType": "ExpressionStatement", "src": "7874:10:7"}, {"expression": {"id": 654, "name": "_change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "7901:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 627, "id": 655, "nodeType": "Return", "src": "7894:14:7"}]}, "functionSelector": "3803abef", "id": 657, "implemented": true, "kind": "function", "modifiers": [{"id": 624, "kind": "modifierInvocation", "modifierName": {"id": 623, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 705, "src": "7687:9:7"}, "nodeType": "ModifierInvocation", "src": "7687:9:7"}], "name": "CollectChange", "nameLocation": "7664:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 622, "nodeType": "ParameterList", "parameters": [], "src": "7677:2:7"}, "returnParameters": {"id": 627, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 626, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 657, "src": "7706:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 625, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7706:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7705:9:7"}, "scope": 658, "src": "7655:260:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 659, "src": "320:7597:7", "usedErrors": []}], "src": "67:7850:7"}, "bytecode": "60c060405260006008553480156200001657600080fd5b50604051620018e6380380620018e68339810160408190526200003991620000ee565b8383620000463362000081565b6001600160a01b0391821660a0528116608052600392909255600455600280546001600160a01b031916929091169190911790555062000136565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e957600080fd5b919050565b600080600080608085870312156200010557600080fd5b6200011085620000d1565b93506200012060208601620000d1565b6040860151606090960151949790965092505050565b60805160a051611783620001636000396000818161075601526111300152600061110101526117836000f3fe6080604052600436106101145760003560e01c8063715018a6116100a0578063b894ad3311610064578063b894ad33146102fd578063cda3277314610310578063d1d3bde314610330578063ef124faf14610346578063f2fde38b1461036657600080fd5b8063715018a6146102685780638897cad31461027f5780638da5cb5b1461029657806394985ddd146102c8578063b198333c146102e857600080fd5b80632fec9240116100e75780632fec9240146101ba57806332dd45fb146101da5780633803abef1461020b578063533b4c561461022057806357529e6c1461025157600080fd5b806301889611146101195780631d5ccd9b1461014257806327028a84146101775780632ee79ded146101a4575b600080fd5b34801561012557600080fd5b5061012f60035481565b6040519081526020015b60405180910390f35b34801561014e57600080fd5b5061016261015d366004611319565b610386565b60405161013999989796959493929190611395565b34801561018357600080fd5b5061012f610192366004611319565b60076020526000908152604090205481565b3480156101b057600080fd5b5061012f60085481565b3480156101c657600080fd5b5061012f6101d536600461142e565b610467565b3480156101e657600080fd5b506101fa6101f5366004611319565b61050e565b6040516101399594939291906114f2565b34801561021757600080fd5b5061012f6105f3565b34801561022c57600080fd5b5061024061023b366004611319565b6106d1565b604051610139959493929190611532565b34801561025d57600080fd5b5060055461012f9081565b34801561027457600080fd5b5061027d610715565b005b34801561028b57600080fd5b5061012f62093a8081565b3480156102a257600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610139565b3480156102d457600080fd5b5061027d6102e3366004611569565b61074b565b3480156102f457600080fd5b5061012f6107d1565b61027d61030b366004611569565b6107e1565b34801561031c57600080fd5b5061027d61032b366004611319565b610a1d565b34801561033c57600080fd5b5061012f60045481565b34801561035257600080fd5b506002546102b0906001600160a01b031681565b34801561037257600080fd5b5061027d61038136600461158b565b610d54565b600660205260009081526040902080546001820180549192916103a8906115bb565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906115bb565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b505050600284015460038501546004860154600587015460068801546007890154600890990154979894979396506001600160a01b039283169550911692909160ff1689565b6000610477600580546001019055565b600061048260055490565b60008181526006602090815260409091208281558751929350916104ae91600184019190890190611280565b5060006002820155600381018590556004810180546001600160a01b0319163317905542600682018190556104e490859061160c565b600782015560088101805460ff1916905560050180546001600160a01b0319169055949350505050565b600081815260066020819052604082206004810154600582015492820154600783015460019093018054606096958695869586956001600160a01b0391821694919093169291908590610560906115bb565b80601f016020809104026020016040519081016040528092919081815260200182805461058c906115bb565b80156105d95780601f106105ae576101008083540402835291602001916105d9565b820191906000526020600020905b8154815290600101906020018083116105bc57829003601f168201915b505050505094509450945094509450945091939590929450565b600080546001600160a01b031633146106275760405162461bcd60e51b815260040161061e90611624565b60405180910390fd5b6000600854116106795760405162461bcd60e51b815260206004820152601e60248201527f5468657265206973206e6f206368616e676520746f20636f6c6c656374210000604482015260640161061e565b600854604051339190600081818185875af1925050503d80600081146106bb576040519150601f19603f3d011682016040523d82523d6000602084013e6106c0565b606091505b505060088054600090915591505090565b6000818152600660208190526040822090810154600782015460028301546003840154600190940180546060969586958695869591939092908590610560906115bb565b6000546001600160a01b0316331461073f5760405162461bcd60e51b815260040161061e90611624565b6107496000610def565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107c35760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161061e565b6107cd8282610e3f565b5050565b60006107dc60055490565b905090565b60008281526006602052604081206008015460ff1660048111156108075761080761137f565b146108465760405162461bcd60e51b815260206004820152600f60248201526e2930b3333632903737ba1037b832b760891b604482015260640161061e565b60008281526006602052604090206007015442106108995760405162461bcd60e51b815260206004820152601060248201526f149859999b19481a5cc818db1bdcd95960821b604482015260640161061e565b600081116108f55760405162461bcd60e51b815260206004820152602360248201527f5469636b657420636f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161061e565b600082815260066020526040902060030154610912908290611659565b3410156109765760405162461bcd60e51b815260206004820152602c60248201527f5469636b65742070726963652069732067726561746572207468616e2074686560448201526b08185b5bdd5b9d081cd95b9d60a21b606482015260840161061e565b6000828152600660205260408120600201805483929061099790849061160c565b909155505060008281526006602090815260408220600981018054600181810183559185528385200180546001600160a01b03191633179055600a820180549182018155845291832090910183905590839052600301546109f9908290611659565b610a039034611678565b60086000828254610a14919061160c565b90915550505050565b6000818152600660205260409020600401546001600160a01b03163314610a985760405162461bcd60e51b815260206004820152602960248201527f4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074604482015268686520726166666c6560b81b606482015260840161061e565b600081815260066020526040902060070154421015610af95760405162461bcd60e51b815260206004820152601d60248201527f54686520726166666c6520686173206e6f7420636c6f73656420796574000000604482015260640161061e565b6000818152600660205260409020600701544290610b1b9062093a809061160c565b11610b7d5760405162461bcd60e51b815260206004820152602c60248201527f54686520726166666c6520686173206578706972656420616e642063616e6e6f60448201526b1d0818994818db185a5b595960a21b606482015260840161061e565b600360008281526006602052604090206008015460ff166004811115610ba557610ba561137f565b1415610bf35760405162461bcd60e51b815260206004820152601f60248201527f54686520726166666c6520697320616c6c72656164792066696e697368656400604482015260640161061e565b6003546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c62919061168f565b1015610cd65760405162461bcd60e51b815260206004820152603c60248201527f54686520636f6e7472616374206e6565647320746f2062652070616964206c6960448201527f6e6b20746f6b656e20746f20636c61696d2074686520726166666c6500000000606482015260840161061e565b6000818152600660205260408120600801805460ff19166002179055600454600354610d0291906110fd565b60008181526007602052604090819020849055519091507fe7e9d173875e49599c9dc06ea20fd1d8878525700b2711462f8379cccdc637eb90610d489083815260200190565b60405180910390a15050565b6000546001600160a01b03163314610d7e5760405162461bcd60e51b815260040161061e90611624565b6001600160a01b038116610de35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161061e565b610dec81610def565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260076020526040902054600260008281526006602052604090206008015460ff166004811115610e7657610e7661137f565b14610eda5760405162461bcd60e51b815260206004820152602e60248201527f54686520726166666c65206973206e6f7420696e207468652053656c6563746960448201526d6e6757696e6e657220737461746560901b606482015260840161061e565b600081815260066020526040812060088101805460ff1916600317905560020154610f0590846116a8565b60008381526006602052604081206009015491925090815b8181101561101d57838311158015610f6c57506000858152600660205260409020600a01805482908110610f5357610f536116ca565b906000526020600020015483610f69919061160c565b84105b15610fd0576000858152600660205260409020600901805482908110610f9457610f946116ca565b60009182526020808320909101548783526006909152604090912060050180546001600160a01b0319166001600160a01b039092169190911790555b6000858152600660205260409020600a01805482908110610ff357610ff36116ca565b906000526020600020015483611009919061160c565b925080611015816116e0565b915050610f1d565b506000848152600660205260409020600481015460028201546003909201546001600160a01b039091169161105191611659565b604051600081818185875af1925050503d806000811461108d576040519150601f19603f3d011682016040523d82523d6000602084013e611092565b606091505b5050506000848152600660209081526040918290206005015482518781526001600160a01b03909116918101919091529081018490527fb14375695e696ee7a5001ece25e2fcfb144242680d208452819016209ae26f679060600160405180910390a1505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161116d929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161119a939291906116fb565b6020604051808303816000875af11580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd919061172b565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a090910190925281519183019190912093879052908290526112389161160c565b6000858152600160205260409020556112788482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b82805461128c906115bb565b90600052602060002090601f0160209004810192826112ae57600085556112f4565b82601f106112c757805160ff19168380011785556112f4565b828001600101855582156112f4579182015b828111156112f45782518255916020019190600101906112d9565b50611300929150611304565b5090565b5b808211156113005760008155600101611305565b60006020828403121561132b57600080fd5b5035919050565b6000815180845260005b818110156113585760208185018101518683018201520161133c565b8181111561136a576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101208b83528060208401526113af8184018c611332565b604084018b9052606084018a90526001600160a01b038981166080860152881660a085015260c0840187905260e084018690529150506005831061140357634e487b7160e01b600052602160045260246000fd5b826101008301529a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561144357600080fd5b833567ffffffffffffffff8082111561145b57600080fd5b818601915086601f83011261146f57600080fd5b81358181111561148157611481611418565b604051601f8201601f19908116603f011681019083821181831017156114a9576114a9611418565b816040528281528960208487010111156114c257600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60a08152600061150560a0830188611332565b6001600160a01b039687166020840152949095166040820152606081019290925260809091015292915050565b60a08152600061154560a0830188611332565b90508560208301528460408301528360608301528260808301529695505050505050565b6000806040838503121561157c57600080fd5b50508035926020909101359150565b60006020828403121561159d57600080fd5b81356001600160a01b03811681146115b457600080fd5b9392505050565b600181811c908216806115cf57607f821691505b602082108114156115f057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561161f5761161f6115f6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611673576116736115f6565b500290565b60008282101561168a5761168a6115f6565b500390565b6000602082840312156116a157600080fd5b5051919050565b6000826116c557634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b60006000198214156116f4576116f46115f6565b5060010190565b60018060a01b03841681528260208201526060604082015260006117226060830184611332565b95945050505050565b60006020828403121561173d57600080fd5b815180151581146115b457600080fdfea2646970667358221220158b113391122524aa289dbfce6fa4797fcf5e3790295aeaca12a499d700febd64736f6c634300080a0033", "bytecodeSha1": "29bcbaaa277463e9039d732f47e254c2754ea4c3", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "CharityRaffle", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"69": [2006, 2028, true]}}, "1": {}, "2": {}, "3": {}, "4": {"VRFConsumerBase.rawFulfillRandomness": {"70": [9750, 9778, true]}}, "5": {}, "7": {"CharityRaffle.BuyTickets": {"57": [6952, 6995, true], "58": [7033, 7076, true], "59": [7115, 7131, true], "60": [7189, 7246, true]}, "CharityRaffle.ClaimRaffle": {"61": [4569, 4607, true], "62": [4671, 4710, true], "63": [4762, 4819, true], "64": [4886, 4928, true], "65": [4982, 5043, true]}, "CharityRaffle.CollectChange": {"56": [7732, 7742, true]}, "CharityRaffle.fulfillRandomness": {"66": [5704, 5758, true], "67": [6223, 6258, false], "68": [6262, 6333, false]}}}, "statements": {"0": {"Ownable._transferOwnership": {"42": [2378, 2395], "43": [2405, 2450]}, "Ownable.owner": {"0": [1101, 1114]}, "Ownable.renounceOwnership": {"20": [1732, 1762]}, "Ownable.transferOwnership": {"40": [1998, 2071], "41": [2081, 2109]}}, "1": {}, "2": {"Context._msgSender": {"15": [712, 729]}}, "3": {"Counters.current": {"3": [911, 932]}, "Counters.increment": {"2": [1032, 1051]}}, "4": {"VRFConsumerBase.rawFulfillRandomness": {"21": [9742, 9814], "22": [9820, 9860]}, "VRFConsumerBase.requestRandomness": {"51": [7889, 7976], "53": [8719, 8758], "54": [8764, 8803]}}, "5": {"VRFRequestIDBase.makeRequestId": {"55": [1583, 1642]}, "VRFRequestIDBase.makeVRFInputSeed": {"52": [980, 1058]}}, "7": {"CharityRaffle.BuyTickets": {"24": [6944, 7015], "25": [7025, 7097], "26": [7107, 7171], "27": [7181, 7295], "28": [7305, 7350], "29": [7360, 7416], "30": [7426, 7476], "31": [7486, 7552]}, "CharityRaffle.ClaimRaffle": {"32": [4561, 4653], "33": [4663, 4744], "34": [4754, 4868], "35": [4878, 4964], "36": [4974, 5108], "37": [5118, 5166], "38": [5338, 5377], "39": [5426, 5459]}, "CharityRaffle.CollectChange": {"16": [7724, 7777], "17": [7787, 7830], "18": [7874, 7884]}, "CharityRaffle.CreateRaffle": {"1": [3214, 3237], "4": [3339, 3354], "5": [3364, 3389], "6": [3399, 3421], "7": [3431, 3464], "8": [3474, 3514], "9": [3524, 3558], "10": [3568, 3616], "11": [3626, 3657], "12": [3667, 3695], "13": [3705, 3715]}, "CharityRaffle.GetRaffleCount": {"23": [4470, 4498]}, "CharityRaffle.GetRaffleInfo": {"14": [3964, 4083]}, "CharityRaffle.GetRaffleTicketInfo": {"19": [4267, 4391]}, "CharityRaffle.fulfillRandomness": {"44": [5696, 5809], "45": [5877, 5923], "46": [6389, 6449], "47": [6477, 6528], "48": [6200, 6203], "49": [6600, 6717], "50": [6727, 6800]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.4.0/Context", "OpenZeppelin/openzeppelin-contracts@4.4.0/Counters", "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.4.0/Ownable", "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFConsumerBase", "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFRequestIDBase"], "deployedBytecode": "", "deployedSourceMap": "320:7597:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:22;;;;;;;;;;;;;;;;;;;160:25:8;;;148:2;133:18;456:22:7;;;;;;;;2781:41;;;;;;;;;;-1:-1:-1;2781:41:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;2867:57::-;;;;;;;;;;-1:-1:-1;2867:57:7;;;;;:::i;:::-;;;;;;;;;;;;;;3046:25;;;;;;;;;;;;;;;;3078:644;;;;;;;;;;-1:-1:-1;3078:644:7;;;;;:::i;:::-;;:::i;3788:302::-;;;;;;;;;;-1:-1:-1;3788:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;7655:260::-;;;;;;;;;;;;;:::i;4096:302::-;;;;;;;;;;-1:-1:-1;4096:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2740:35::-;;;;;;;;;;-1:-1:-1;2740:35:7;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;2653:59:7;;;;;;;;;;;;2696:16;2653:59;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;4729:32:8;;;4711:51;;4699:2;4684:18;1036:85:0;4565:203:8;9640:225:4;;;;;;;;;;-1:-1:-1;9640:225:4;;;;;:::i;:::-;;:::i;4404:101:7:-;;;;;;;;;;;;;:::i;6859:700::-;;;;;;:::i;:::-;;:::i;4511:955::-;;;;;;;;;;-1:-1:-1;4511:955:7;;;;;:::i;:::-;;:::i;484:25::-;;;;;;;;;;;;;;;;419:31;;;;;;;;;;-1:-1:-1;419:31:7;;;;-1:-1:-1;;;;;419:31:7;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2781:41:7:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2781:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2781:41:7;;;;-1:-1:-1;2781:41:7;;;;;;;;:::o;3078:644::-;3187:16;3214:23;:11;1032:19:3;;1050:1;1032:19;;;945:123;3214:23:7;3247:11;3261:21;:11;918:14:3;;827:112;3261:21:7;3292;3316:12;;;:7;:12;;;;;;;;3339:15;;;3364:25;;3247:35;;-1:-1:-1;3316:12:7;3364:25;;:11;;;;:25;;;;;:::i;:::-;-1:-1:-1;3420:1:7;3399:18;;;:22;3431:18;;;:33;;;3474:18;;;:40;;-1:-1:-1;;;;;;3474:40:7;3503:10;3474:40;;;3543:15;3524:16;;;:34;;;3585:31;;3603:13;;3585:31;:::i;:::-;3568:14;;;:48;3626:12;;;:31;;-1:-1:-1;;3626:31:7;;;3667:13;;:28;;-1:-1:-1;;;;;;3667:28:7;;;3712:3;;-1:-1:-1;;;;3078:644:7:o;3788:302::-;3865:27;3972:12;;;:7;:12;;;;;;;3991:24;;;;4017:19;;;;4038:22;;;;4062:20;;;;3972:17;;;;3964:119;;3845:18;;3865:27;;;;;;;-1:-1:-1;;;;;3991:24:7;;;;4017:19;;;;;4038:22;4062:20;3972:17;;3964:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3788:302;;;;;;;:::o;7655:260::-;7706:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;7741:1:7::1;7732:6;;:10;7724:53;;;::::0;-1:-1:-1;;;7724:53:7;;6965:2:8;7724:53:7::1;::::0;::::1;6947:21:8::0;7004:2;6984:18;;;6977:30;7043:32;7023:18;;;7016:60;7093:18;;7724:53:7::1;6763:354:8::0;7724:53:7::1;7819:6;::::0;7787:43:::1;::::0;7795:10:::1;::::0;7819:6;7787:43:::1;::::0;;;7819:6;7795:10;7787:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;7858:6:7::1;::::0;;7840:15:::1;7874:10:::0;;;7858:6;-1:-1:-1;;7655:260:7;:::o;4096:302::-;4179:17;4275:12;;;:7;:12;;;;;;;4294:22;;;;4318:20;;;;4340:24;;;;4366;;;;4275:17;;;;4267:124;;4159:18;;4179:17;;;;;;;4294:22;;4318:20;;4366:24;4275:17;;4267:124;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;9640:225:4:-;9750:10;-1:-1:-1;;;;;9764:14:4;9750:28;;9742:72;;;;-1:-1:-1;;;9742:72:4;;7534:2:8;9742:72:4;;;7516:21:8;7573:2;7553:18;;;7546:30;7612:33;7592:18;;;7585:61;7663:18;;9742:72:4;7332:355:8;9742:72:4;9820:40;9838:9;9849:10;9820:17;:40::i;:::-;9640:225;;:::o;4404:101:7:-;4451:7;4477:21;:11;918:14:3;;827:112;4477:21:7;4470:28;;4404:101;:::o;6859:700::-;6979:16;6952:17;;;:7;:17;;;;;:23;;;;;:43;;;;;;;;:::i;:::-;;6944:71;;;;-1:-1:-1;;;6944:71:7;;7894:2:8;6944:71:7;;;7876:21:8;7933:2;7913:18;;;7906:30;-1:-1:-1;;;7952:18:8;;;7945:45;8007:18;;6944:71:7;7692:339:8;6944:71:7;7051:17;;;;:7;:17;;;;;:25;;;7033:15;:43;7025:72;;;;-1:-1:-1;;;7025:72:7;;8238:2:8;7025:72:7;;;8220:21:8;8277:2;8257:18;;;8250:30;-1:-1:-1;;;8296:18:8;;;8289:46;8352:18;;7025:72:7;8036:340:8;7025:72:7;7130:1;7115:12;:16;7107:64;;;;-1:-1:-1;;;7107:64:7;;8583:2:8;7107:64:7;;;8565:21:8;8622:2;8602:18;;;8595:30;8661:34;8641:18;;;8634:62;-1:-1:-1;;;8712:18:8;;;8705:33;8755:19;;7107:64:7;8381:399:8;7107:64:7;7202:17;;;;:7;:17;;;;;:29;;;:44;;7234:12;;7202:44;:::i;:::-;7189:9;:57;;7181:114;;;;-1:-1:-1;;;7181:114:7;;9160:2:8;7181:114:7;;;9142:21:8;9199:2;9179:18;;;9172:30;9238:34;9218:18;;;9211:62;-1:-1:-1;;;9289:18:8;;;9282:42;9341:19;;7181:114:7;8958:408:8;7181:114:7;7305:17;;;;:7;:17;;;;;:29;;:45;;7338:12;;7305:17;:45;;7338:12;;7305:45;:::i;:::-;;;;-1:-1:-1;;7360:17:7;;;;:7;:17;;;;;;;:30;;;:56;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7360:56:7;7404:10;7360:56;;;7426:31;;;:50;;;;;;;;;;;;;;;;;;7508:17;;;;:29;;;:44;;7463:12;;7508:44;:::i;:::-;7496:56;;:9;:56;:::i;:::-;7486:6;;:66;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;6859:700:7:o;4511:955::-;4583:12;;;;:7;:12;;;;;:24;;;-1:-1:-1;;;;;4583:24:7;4569:10;:38;4561:92;;;;-1:-1:-1;;;4561:92:7;;9703:2:8;4561:92:7;;;9685:21:8;9742:2;9722:18;;;9715:30;9781:34;9761:18;;;9754:62;-1:-1:-1;;;9832:18:8;;;9825:39;9881:19;;4561:92:7;9501:405:8;4561:92:7;4690:12;;;;:7;:12;;;;;:20;;;4671:15;:39;;4663:81;;;;-1:-1:-1;;;4663:81:7;;10113:2:8;4663:81:7;;;10095:21:8;10152:2;10132:18;;;10125:30;10191:31;10171:18;;;10164:59;10240:18;;4663:81:7;9911:353:8;4663:81:7;4762:12;;;;:7;:12;;;;;:20;;;4804:15;;4762:39;;2696:16;;4762:39;:::i;:::-;:57;4754:114;;;;-1:-1:-1;;;4754:114:7;;10471:2:8;4754:114:7;;;10453:21:8;10510:2;10490:18;;;10483:30;10549:34;10529:18;;;10522:62;-1:-1:-1;;;10600:18:8;;;10593:42;10652:19;;4754:114:7;10269:408:8;4754:114:7;4908:20;4886:12;;;;:7;:12;;;;;:18;;;;;:42;;;;;;;;:::i;:::-;;;4878:86;;;;-1:-1:-1;;;4878:86:7;;10884:2:8;4878:86:7;;;10866:21:8;10923:2;10903:18;;;10896:30;10962:33;10942:18;;;10935:61;11013:18;;4878:86:7;10682:355:8;4878:86:7;5036:7;;4989:16;;4982:49;;-1:-1:-1;;;4982:49:7;;5025:4;4982:49;;;4711:51:8;-1:-1:-1;;;;;4989:16:7;;;;4982:34;;4684:18:8;;4982:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;4974:134;;;;-1:-1:-1;;;4974:134:7;;11433:2:8;4974:134:7;;;11415:21:8;11472:2;11452:18;;;11445:30;11511:34;11491:18;;;11484:62;11582:30;11562:18;;;11555:58;11630:19;;4974:134:7;11231:424:8;4974:134:7;5118:12;;;;:7;:12;;;;;:18;;:48;;-1:-1:-1;;5118:48:7;5139:27;5118:48;;;5263:10;;5275:7;;5245:38;;5263:10;5245:17;:38::i;:::-;5338:33;;;;:22;:33;;;;;;;:39;;;5431:28;5225:58;;-1:-1:-1;5431:28:7;;;;5225:58;160:25:8;;148:2;133:18;;14:177;5431:28:7;;;;;;;;4551:915;4511:955;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11862:2:8;1998:73:0::1;::::0;::::1;11844:21:8::0;11901:2;11881:18;;;11874:30;11940:34;11920:18;;;11913:62;-1:-1:-1;;;11991:18:8;;;11984:36;12037:19;;1998:73:0::1;11660:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5537:1270:7:-;5633:16;5652:34;;;:22;:34;;;;;;5731:27;5704:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;5696:113;;;;-1:-1:-1;;;5696:113:7;;12269:2:8;5696:113:7;;;12251:21:8;12308:2;12288:18;;;12281:30;12347:34;12327:18;;;12320:62;-1:-1:-1;;;12398:18:8;;;12391:44;12452:19;;5696:113:7;12067:410:8;5696:113:7;5877:17;;;;:7;:17;;;;;:23;;;:46;;-1:-1:-1;;5877:46:7;5903:20;5877:46;;;5976:29;;;5962:43;;:11;:43;:::i;:::-;6079:21;6126:17;;;:7;:17;;;;;:30;;:37;5933:72;;-1:-1:-1;6079:21:7;;6173:366;6197:1;6193;:5;6173:366;;;6240:18;6223:13;:35;;:110;;;;-1:-1:-1;6299:17:7;;;;:7;:17;;;;;:31;;:34;;6331:1;;6299:34;;;;;;:::i;:::-;;;;;;;;;6283:13;:50;;;;:::i;:::-;6262:18;:71;6223:110;6219:245;;;6416:17;;;;:7;:17;;;;;:30;;:33;;6447:1;;6416:33;;;;;;:::i;:::-;;;;;;;;;;;;;6389:17;;;:7;:17;;;;;;;:24;;:60;;-1:-1:-1;;;;;;6389:60:7;-1:-1:-1;;;;;6416:33:7;;;6389:60;;;;;;6219:245;6494:17;;;;:7;:17;;;;;:31;;:34;;6526:1;;6494:34;;;;;;:::i;:::-;;;;;;;;;6477:51;;;;;:::i;:::-;;-1:-1:-1;6200:3:7;;;;:::i;:::-;;;;6173:366;;;-1:-1:-1;6608:17:7;;;;:7;:17;;;;;:29;;;;6683;;;;6651;;;;;-1:-1:-1;;;;;6608:29:7;;;;6651:61;;;:::i;:::-;6600:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6755:17:7;;;;:7;:17;;;;;;;;;:24;;;6732:68;;13534:25:8;;;-1:-1:-1;;;;;6755:24:7;;;13575:18:8;;;13568:60;;;;13644:18;;;13637:34;;;6732:68:7;;13522:2:8;13507:18;6732:68:7;;;;;;;5623:1184;;;;5537:1270;;:::o;7753:1055:4:-;7857:17;7889:4;-1:-1:-1;;;;;7889:20:4;;7910:14;7926:4;7943:8;6610:1;7932:43;;;;;;;;13856:25:8;;;13912:2;13897:18;;13890:34;13844:2;13829:18;;13682:248;7932:43:4;;;;;;;;;;;;;7889:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8207:15:4;8291:16;;;:6;:16;;;;;;;;;1005:51:5;;;;;14839:25:8;;;14880:18;;;14873:34;;;8284:4:4;14923:18:8;;;14916:60;14992:18;;;;14985:34;;;1005:51:5;;;;;;;;;;14811:19:8;;;;1005:51:5;;;995:62;;;;;;;;;8738:16:4;;;;;;;;:20;;;:::i;:::-;8719:16;;;;:6;:16;;;;;:39;8771:32;8726:8;8795:7;1600:41:5;;;;;;;15187:19:8;;;;15222:12;;;15215:28;;;;1600:41:5;;;;;;;;;15259:12:8;;;;1600:41:5;;1590:52;;;;;;1443:204;8771:32:4;8764:39;7753:1055;-1:-1:-1;;;;7753:1055:4:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:8;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:8;;196:180;-1:-1:-1;196:180:8:o;381:472::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;703:6;700:1;697:13;694:87;;;769:1;762:4;753:6;748:3;744:16;740:27;733:38;694:87;-1:-1:-1;835:2:8;814:15;-1:-1:-1;;810:29:8;801:39;;;;842:4;797:50;;381:472;-1:-1:-1;;381:472:8:o;858:127::-;919:10;914:3;910:20;907:1;900:31;950:4;947:1;940:15;974:4;971:1;964:15;990:1068;1370:4;1399:3;1429:6;1418:9;1411:25;1472:2;1467;1456:9;1452:18;1445:30;1492:45;1533:2;1522:9;1518:18;1510:6;1492:45;:::i;:::-;1568:2;1553:18;;1546:34;;;1611:2;1596:18;;1589:34;;;-1:-1:-1;;;;;1698:15:8;;;1692:3;1677:19;;1670:44;1751:15;;1650:3;1730:19;;1723:44;1798:3;1783:19;;1776:35;;;1842:3;1827:19;;1820:35;;;1484:53;-1:-1:-1;;1885:1:8;1874:13;;1864:144;;1930:10;1925:3;1921:20;1918:1;1911:31;1965:4;1962:1;1955:15;1993:4;1990:1;1983:15;1864:144;2045:6;2039:3;2028:9;2024:19;2017:35;990:1068;;;;;;;;;;;;:::o;2248:127::-;2309:10;2304:3;2300:20;2297:1;2290:31;2340:4;2337:1;2330:15;2364:4;2361:1;2354:15;2380:1068;2467:6;2475;2483;2536:2;2524:9;2515:7;2511:23;2507:32;2504:52;;;2552:1;2549;2542:12;2504:52;2592:9;2579:23;2621:18;2662:2;2654:6;2651:14;2648:34;;;2678:1;2675;2668:12;2648:34;2716:6;2705:9;2701:22;2691:32;;2761:7;2754:4;2750:2;2746:13;2742:27;2732:55;;2783:1;2780;2773:12;2732:55;2819:2;2806:16;2841:2;2837;2834:10;2831:36;;;2847:18;;:::i;:::-;2922:2;2916:9;2890:2;2976:13;;-1:-1:-1;;2972:22:8;;;2996:2;2968:31;2964:40;2952:53;;;3020:18;;;3040:22;;;3017:46;3014:72;;;3066:18;;:::i;:::-;3106:10;3102:2;3095:22;3141:2;3133:6;3126:18;3183:7;3176:4;3171:2;3167;3163:11;3159:22;3156:35;3153:55;;;3204:1;3201;3194:12;3153:55;3264:2;3257:4;3253:2;3249:13;3242:4;3234:6;3230:17;3217:50;3311:1;3304:4;3299:2;3291:6;3287:15;3283:26;3276:37;3332:6;3322:16;;;;;;;3385:4;3374:9;3370:20;3357:34;3347:44;;3438:2;3427:9;3423:18;3410:32;3400:42;;2380:1068;;;;;:::o;3453:595::-;3746:3;3735:9;3728:22;3709:4;3767:46;3808:3;3797:9;3793:19;3785:6;3767:46;:::i;:::-;-1:-1:-1;;;;;3887:15:8;;;3882:2;3867:18;;3860:43;3939:15;;;;3934:2;3919:18;;3912:43;3986:2;3971:18;;3964:34;;;;4029:3;4014:19;;;4007:35;3759:54;3453:595;-1:-1:-1;;3453:595:8:o;4053:507::-;4314:3;4303:9;4296:22;4277:4;4335:46;4376:3;4365:9;4361:19;4353:6;4335:46;:::i;:::-;4327:54;;4417:6;4412:2;4401:9;4397:18;4390:34;4460:6;4455:2;4444:9;4440:18;4433:34;4503:6;4498:2;4487:9;4483:18;4476:34;4547:6;4541:3;4530:9;4526:19;4519:35;4053:507;;;;;;;;:::o;4773:248::-;4841:6;4849;4902:2;4890:9;4881:7;4877:23;4873:32;4870:52;;;4918:1;4915;4908:12;4870:52;-1:-1:-1;;4941:23:8;;;5011:2;4996:18;;;4983:32;;-1:-1:-1;4773:248:8:o;5461:286::-;5520:6;5573:2;5561:9;5552:7;5548:23;5544:32;5541:52;;;5589:1;5586;5579:12;5541:52;5615:23;;-1:-1:-1;;;;;5667:31:8;;5657:42;;5647:70;;5713:1;5710;5703:12;5647:70;5736:5;5461:286;-1:-1:-1;;;5461:286:8:o;5752:380::-;5831:1;5827:12;;;;5874;;;5895:61;;5949:4;5941:6;5937:17;5927:27;;5895:61;6002:2;5994:6;5991:14;5971:18;5968:38;5965:161;;;6048:10;6043:3;6039:20;6036:1;6029:31;6083:4;6080:1;6073:15;6111:4;6108:1;6101:15;5965:161;;5752:380;;;:::o;6137:127::-;6198:10;6193:3;6189:20;6186:1;6179:31;6229:4;6226:1;6219:15;6253:4;6250:1;6243:15;6269:128;6309:3;6340:1;6336:6;6333:1;6330:13;6327:39;;;6346:18;;:::i;:::-;-1:-1:-1;6382:9:8;;6269:128::o;6402:356::-;6604:2;6586:21;;;6623:18;;;6616:30;6682:34;6677:2;6662:18;;6655:62;6749:2;6734:18;;6402:356::o;8785:168::-;8825:7;8891:1;8887;8883:6;8879:14;8876:1;8873:21;8868:1;8861:9;8854:17;8850:45;8847:71;;;8898:18;;:::i;:::-;-1:-1:-1;8938:9:8;;8785:168::o;9371:125::-;9411:4;9439:1;9436;9433:8;9430:34;;;9444:18;;:::i;:::-;-1:-1:-1;9481:9:8;;9371:125::o;11042:184::-;11112:6;11165:2;11153:9;11144:7;11140:23;11136:32;11133:52;;;11181:1;11178;11171:12;11133:52;-1:-1:-1;11204:16:8;;11042:184;-1:-1:-1;11042:184:8:o;12830:209::-;12862:1;12888;12878:132;;12932:10;12927:3;12923:20;12920:1;12913:31;12967:4;12964:1;12957:15;12995:4;12992:1;12985:15;12878:132;-1:-1:-1;13024:9:8;;12830:209::o;13044:127::-;13105:10;13100:3;13096:20;13093:1;13086:31;13136:4;13133:1;13126:15;13160:4;13157:1;13150:15;13176:135;13215:3;-1:-1:-1;;13236:17:8;;13233:43;;;13256:18;;:::i;:::-;-1:-1:-1;13303:1:8;13292:13;;13176:135::o;13935:386::-;14167:1;14163;14158:3;14154:11;14150:19;14142:6;14138:32;14127:9;14120:51;14207:6;14202:2;14191:9;14187:18;14180:34;14250:2;14245;14234:9;14230:18;14223:30;14101:4;14270:45;14311:2;14300:9;14296:18;14288:6;14270:45;:::i;:::-;14262:53;13935:386;-1:-1:-1;;;;;13935:386:8:o;14326:277::-;14393:6;14446:2;14434:9;14425:7;14421:23;14417:32;14414:52;;;14462:1;14459;14452:12;14414:52;14494:9;14488:16;14547:5;14540:13;14533:21;14526:5;14523:32;14513:60;;14569:1;14566;14559:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [320, 7917], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB894AD33 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB894AD33 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xCDA32773 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xD1D3BDE3 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xEF124FAF EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8897CAD3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB198333C EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FEC9240 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2FEC9240 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x32DD45FB EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x3803ABEF EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x533B4C56 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x57529E6C EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1889611 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x1D5CCD9B EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x27028A84 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2EE79DED EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1395 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x5F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1532 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x12F SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH3 0x93A80 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x158B JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x3A8 SWAP1 PUSH2 0x15BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x15BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x421 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x421 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x404 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0x7 DUP10 ADD SLOAD PUSH1 0x8 SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP6 POP SWAP2 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x482 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 DUP2 SSTORE DUP8 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x4AE SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1280 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0x4E4 SWAP1 DUP6 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP2 SWAP1 SWAP4 AND SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x560 SWAP1 PUSH2 0x15BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58C SWAP1 PUSH2 0x15BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD GT PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x1 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 DUP6 SWAP1 PUSH2 0x560 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x749 PUSH1 0x0 PUSH2 0xDEF JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH2 0x7CD DUP3 DUP3 PUSH2 0xE3F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x807 JUMPI PUSH2 0x807 PUSH2 0x137F JUMP JUMPDEST EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2930B3333632903737BA1037B832B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD TIMESTAMP LT PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149859999B19481A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420636F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x912 SWAP1 DUP3 SWAP1 PUSH2 0x1659 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65742070726963652069732067726561746572207468616E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x8185B5BDD5B9D081CD95B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x997 SWAP1 DUP5 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP5 MSTORE SWAP2 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP4 SWAP1 SSTORE SWAP1 DUP4 SWAP1 MSTORE PUSH1 0x3 ADD SLOAD PUSH2 0x9F9 SWAP1 DUP3 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0xA03 SWAP1 CALLVALUE PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x686520726166666C65 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD TIMESTAMP SWAP1 PUSH2 0xB1B SWAP1 PUSH3 0x93A80 SWAP1 PUSH2 0x160C JUMP JUMPDEST GT PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206578706972656420616E642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D0818994818DB185A5B5959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA5 PUSH2 0x137F JUMP JUMPDEST EQ ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520697320616C6C72656164792066696E697368656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST LT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB SWAP1 PUSH2 0xD48 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH2 0xDEC DUP2 PUSH2 0xDEF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE76 JUMPI PUSH2 0xE76 PUSH2 0x137F JUMP JUMPDEST EQ PUSH2 0xEDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F7420696E207468652053656C65637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6757696E6E6572207374617465 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x2 ADD SLOAD PUSH2 0xF05 SWAP1 DUP5 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x9 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x101D JUMPI DUP4 DUP4 GT ISZERO DUP1 ISZERO PUSH2 0xF6C JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xF53 JUMPI PUSH2 0xF53 PUSH2 0x16CA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST DUP5 LT JUMPDEST ISZERO PUSH2 0xFD0 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xF94 JUMPI PUSH2 0xF94 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP8 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xFF3 JUMPI PUSH2 0xFF3 PUSH2 0x16CA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x1015 DUP2 PUSH2 0x16E0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF1D JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x1051 SWAP2 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB14375695E696EE7A5001ECE25E2FCFB144242680D208452819016209AE26F67 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x116D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1238 SWAP2 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1278 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x128C SWAP1 PUSH2 0x15BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x12AE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12F4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x12C7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12F4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0x1300 SWAP3 SWAP2 POP PUSH2 0x1304 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1300 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1358 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x133C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x136A JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x13AF DUP2 DUP5 ADD DUP13 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE DUP9 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP7 SWAP1 MSTORE SWAP2 POP POP PUSH1 0x5 DUP4 LT PUSH2 0x1403 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x145B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x146F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1481 JUMPI PUSH2 0x1481 PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A9 PUSH2 0x1418 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1505 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1545 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161F PUSH2 0x15F6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1673 PUSH2 0x15F6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x168A JUMPI PUSH2 0x168A PUSH2 0x15F6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16C5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x16F4 JUMPI PUSH2 0x16F4 PUSH2 0x15F6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1722 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO DUP12 GT CALLER SWAP2 SLT 0x25 0x24 0xAA 0x28 SWAP14 0xBF 0xCE PUSH16 0xA4797FCF5E3790295AEACA12A499D700 INVALID 0xBD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ", "sha1": "c817e6144756c49f045e851a631dc6351cf59735", "source": "// contracts/CharityRafflev0.1.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract CharityRaffle is Ownable, VRFConsumerBase {\n    using Counters for Counters.Counter;\n\n    address public linkTokenAddress;\n    uint256 public linkFee;\n    bytes32 public VRFKeyHash;\n    // A contstructor to deal with randomness\n    constructor(address _vrfCoordinator, address _linkTokenAddress, uint256 _linkFee, bytes32 _VRFKeyHash) VRFConsumerBase(_vrfCoordinator,_linkTokenAddress){\n        linkFee = _linkFee;\n        VRFKeyHash = _VRFKeyHash;\n        linkTokenAddress = _linkTokenAddress;\n    }\n\n    event RequestRandomness(bytes32 requestId);\n    event WinnerChosen(uint256 raffleId, address payable winner, uint256 ticketIndex);\n\n    enum RaffleState {\n        Open,\n        Closed,\n        SelectingWinner,\n        Finished,\n        Expired \n    }\n    // NotStarted: The raffle has not yet begun\n    // Open: The raffle is open for entry\n    // Closed: The raffle is closed for entry\n    // SelectingWinner: The raffle is closed and the winner is being selected\n    // Finished: The raffle is finished and the winner has been selected, beneficiary has been paid\n    // Expired: The raffle has expired since the benificiary has not ended it\n\n    struct Raffle {\n        uint256 id; // unique identifier for the raffle\n        string name; // name of the raffle\n        uint256 ticketCount; // number of tickets bought for this raffle\n        uint256 ticketPrice; // in wei\n        address payable beneficiary; // address of the beneficiary\n        address payable winner; // address of the winner of the raffle, by default it's 0x0\n        uint256 startTime; // unix timestamp of the start of the raffle\n        uint256 endTime; // unix timestamp of the end of the raffle\n        RaffleState state; // state of the raffle\n        address payable[] ticketOwners; // list of all of the ticket owners which is linked to the ticketCount\n        uint256[] ticketNumbers; // list of all the ticketNumbers linked to the ticketOwners\n    }\n\n    // Some rules of how raffles work\n    // 1. Anyone can make a new raffle\n    // 2. Anyone can buy tickets for any open raffle, and this can be for multiple raffles\n    // 3. Tickets are only refundable if the raffle expires, this means that the beneficiary has not claimed the raffle a week after it's end\n    // 4. The beneficiary can only end the raffle after the end time\n    uint256 public constant expirationPeriod = 7 * 24 * 60 * 60; // 7 days in seconds\n\n    Counters.Counter public RaffleCount;\n    mapping(uint256 => Raffle) public Raffles; // mapping of raffle id to raffle data\n    mapping(bytes32 => uint256) public VRFRequestIdTORaffleId; // mapping of VRF request id to raffle id\n\n    // A value that keeps track of all the change givent to the contract\n    uint256 public change = 0;\n\n    function CreateRaffle(string memory _raffleName, uint256 _ticketPrice, uint256 _raffleLength) public returns(uint256 raffleId){\n        RaffleCount.increment();\n        uint256 _id = RaffleCount.current();\n        Raffle storage raffle = Raffles[_id]; \n        raffle.id = _id;\n        raffle.name = _raffleName;\n        raffle.ticketCount = 0;\n        raffle.ticketPrice = _ticketPrice;\n        raffle.beneficiary = payable(msg.sender);\n        raffle.startTime = block.timestamp;\n        raffle.endTime = block.timestamp + _raffleLength;\n        raffle.state = RaffleState.Open;\n        raffle.winner = payable(0x0);\n        return _id;\n    }\n\n    // Some reader functions for getting info about raffles\n    function GetRaffleInfo(uint256 _id) public view returns (string memory name, address payable beneficiary, address payable winner, uint256 startTime, uint256 endTime) {\n        return (Raffles[_id].name, Raffles[_id].beneficiary, Raffles[_id].winner, Raffles[_id].startTime, Raffles[_id].endTime);\n    }\n\n    function GetRaffleTicketInfo(uint256 _id) public view returns (string memory name, uint256 startTime, uint256 endTime, uint256 ticketCount, uint256 ticketPrice) {\n        return (Raffles[_id].name, Raffles[_id].startTime, Raffles[_id].endTime, Raffles[_id].ticketCount, Raffles[_id].ticketPrice);\n    }\n\n    function GetRaffleCount() public view returns (uint256) {\n        return RaffleCount.current();\n    }\n\n    function ClaimRaffle(uint256 _id) public{\n        require(msg.sender == Raffles[_id].beneficiary, \"Only the beneficiary can claim the raffle\");\n        require(block.timestamp >= Raffles[_id].endTime, \"The raffle has not closed yet\");\n        require(Raffles[_id].endTime + expirationPeriod > block.timestamp, \"The raffle has expired and cannot be claimed\");\n        require(Raffles[_id].state != RaffleState.Finished, \"The raffle is allready finished\");\n        require(IERC20(linkTokenAddress).balanceOf(address(this)) >=  linkFee, \"The contract needs to be paid link token to claim the raffle\");\n        Raffles[_id].state = RaffleState.SelectingWinner;\n        // Fire off the VRF to select the winner\n        bytes32 requestId = requestRandomness(VRFKeyHash, linkFee); // Return a bytes 32 which is the request ID\n        VRFRequestIdTORaffleId[requestId] = _id; // Map the request ID to the raffle ID\n        emit RequestRandomness(requestId);\n    }\n\n    // This is run by the VRF coordinator to finalize the winner\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness) internal override {\n        uint256 raffleId = VRFRequestIdTORaffleId[_requestId];\n        require(Raffles[raffleId].state == RaffleState.SelectingWinner, \"The raffle is not in the SelectingWinner state\");\n        require(_randomness >= 0, \"No randomness found\");\n        Raffles[raffleId].state = RaffleState.Finished;\n        uint256 winningTicketIndex = _randomness % Raffles[raffleId].ticketCount;\n        // Todo: Convert the winning ticket index to an address\n        uint256 ticketCounter = 0;\n        uint256 l = Raffles[raffleId].ticketOwners.length;\n        for (uint256 i = 0; i < l; i++) {\n            if (ticketCounter <= winningTicketIndex && winningTicketIndex < ticketCounter + Raffles[raffleId].ticketNumbers[i]) { // We have found the winning ticket\n                Raffles[raffleId].winner = Raffles[raffleId].ticketOwners[i];\n            }\n            ticketCounter += Raffles[raffleId].ticketNumbers[i];\n        }\n        // Send the raffle money to the beneficiary\n        payable(Raffles[raffleId].beneficiary).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketCount}(\"\");\n        emit WinnerChosen(raffleId, Raffles[raffleId].winner, winningTicketIndex);\n    }\n\n    // A function to buy tickets for a raffle\n    function BuyTickets(uint256 raffleId, uint256 _ticketCount) public payable {\n        require(Raffles[raffleId].state == RaffleState.Open, \"Raffle not open\");\n        require(block.timestamp < Raffles[raffleId].endTime, \"Raffle is closed\");\n        require(_ticketCount > 0, \"Ticket count must be greater than 0\");\n        require(msg.value >= Raffles[raffleId].ticketPrice * _ticketCount, \"Ticket price is greater than the amount sent\");\n        Raffles[raffleId].ticketCount += _ticketCount;\n        Raffles[raffleId].ticketOwners.push(payable(msg.sender));\n        Raffles[raffleId].ticketNumbers.push(_ticketCount);\n        change += msg.value - Raffles[raffleId].ticketPrice * _ticketCount;\n    }\n\n    // A function for the owner of the contract to collect all the change in the contract\n    function CollectChange() public onlyOwner returns (uint256){\n        require(change > 0, \"There is no change to collect!\");\n        payable(msg.sender).call{value: change}(\"\");\n        uint256 _change = change;\n        change = 0;\n        return _change;\n    }\n}", "sourceMap": "320:7597:7:-:0;;;3070:1;3046:25;;561:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;680:15;696:17;921:32:0;719:10:2;921:18:0;:32::i;:::-;-1:-1:-1;;;;;9370:32:4;;;;;9408;;;;724:7:7::1;:18:::0;;;;752:10:::1;:24:::0;786:16:::1;:36:::0;;-1:-1:-1;;;;;;786:36:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;320:7597:7;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:8;-1:-1:-1;;;196:416:8:o;:::-;320:7597:7;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/CharityRaffle.sol", "type": "contract", "deployment": {"address": "0x70A0776387B39ebbe4112C1f8A45Ae57FeA5D8fe", "chainid": "4", "blockHeight": 9868220}}