{"abi": [{"inputs": [{"internalType": "address", "name": "_vrfCoordinator", "type": "address"}, {"internalType": "address", "name": "_linkTokenAddress", "type": "address"}, {"internalType": "uint256", "name": "_linkFee", "type": "uint256"}, {"internalType": "bytes32", "name": "_VRFKeyHash", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "requestId", "type": "bytes32"}], "name": "RequestRandomness", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "raffleId", "type": "uint256"}, {"indexed": false, "internalType": "address payable", "name": "winner", "type": "address"}], "name": "WinnerChosen", "type": "event"}, {"inputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}, {"internalType": "uint256", "name": "_ticketCount", "type": "uint256"}], "name": "BuyTickets", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "ClaimRaffle", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "CollectChange", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_raffleName", "type": "string"}, {"internalType": "uint256", "name": "_ticketPrice", "type": "uint256"}, {"internalType": "uint256", "name": "_raffleLength", "type": "uint256"}], "name": "CreateRaffle", "outputs": [{"internalType": "uint256", "name": "raffleId", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "GetRaffleCount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "GetRaffleInfo", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "address payable", "name": "beneficiary", "type": "address"}, {"internalType": "address payable", "name": "winner", "type": "address"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_id", "type": "uint256"}], "name": "GetRaffleTicketInfo", "outputs": [{"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "uint256", "name": "ticketCount", "type": "uint256"}, {"internalType": "uint256", "name": "ticketPrice", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "RaffleCount", "outputs": [{"internalType": "uint256", "name": "_value", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "Raffles", "outputs": [{"internalType": "uint256", "name": "id", "type": "uint256"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "uint256", "name": "ticketCount", "type": "uint256"}, {"internalType": "uint256", "name": "ticketPrice", "type": "uint256"}, {"internalType": "address payable", "name": "beneficiary", "type": "address"}, {"internalType": "address payable", "name": "winner", "type": "address"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "enum CharityRaffle.RaffleState", "name": "state", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "VRFKeyHash", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "VRFRequestIdTORaffleId", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "change", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "expirationPeriod", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "linkFee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "linkTokenAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "requestId", "type": "bytes32"}, {"internalType": "uint256", "name": "randomness", "type": "uint256"}], "name": "rawFulfillRandomness", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol", "1": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol", "2": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol", "3": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol", "4": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol", "5": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFRequestIDBase.sol", "7": "contracts/CharityRaffle.sol"}, "ast": {"absolutePath": "contracts/CharityRaffle.sol", "exportedSymbols": {"CharityRaffle": [579], "Context": [979], "Counters": [836], "IERC20": [762], "LinkTokenInterface": [1124], "Ownable": [684], "VRFConsumerBase": [957], "VRFRequestIDBase": [1029]}, "id": 580, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "67:23:7"}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 580, "sourceUnit": 685, "src": "92:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Counters.sol", "file": "@openzeppelin/contracts/utils/Counters.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 580, "sourceUnit": 837, "src": "145:52:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/dev/VRFConsumerBase.sol", "file": "@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 580, "sourceUnit": 958, "src": "198:63:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 580, "sourceUnit": 763, "src": "262:56:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 6, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 684, "src": "346:7:7"}, "id": 7, "nodeType": "InheritanceSpecifier", "src": "346:7:7"}, {"baseName": {"id": 8, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 957, "src": "355:15:7"}, "id": 9, "nodeType": "InheritanceSpecifier", "src": "355:15:7"}], "canonicalName": "CharityRaffle", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 579, "linearizedBaseContracts": [579, 957, 1029, 684, 979], "name": "CharityRaffle", "nameLocation": "329:13:7", "nodeType": "ContractDefinition", "nodes": [{"id": 13, "libraryName": {"id": 10, "name": "Counters", "nodeType": "IdentifierPath", "referencedDeclaration": 836, "src": "383:8:7"}, "nodeType": "UsingForDirective", "src": "377:36:7", "typeName": {"id": 12, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11, "name": "Counters.Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 768, "src": "396:16:7"}, "referencedDeclaration": 768, "src": "396:16:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$768_storage_ptr", "typeString": "struct Counters.Counter"}}}, {"constant": false, "functionSelector": "ef124faf", "id": 15, "mutability": "mutable", "name": "linkTokenAddress", "nameLocation": "434:16:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "419:31:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "419:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "01889611", "id": 17, "mutability": "mutable", "name": "linkFee", "nameLocation": "471:7:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "456:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "456:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "d1d3bde3", "id": 19, "mutability": "mutable", "name": "VRFKeyHash", "nameLocation": "499:10:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "484:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 18, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "484:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"body": {"id": 46, "nodeType": "Block", "src": "714:115:7", "statements": [{"expression": {"id": 36, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 34, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "724:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 35, "name": "_linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25, "src": "734:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "724:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 37, "nodeType": "ExpressionStatement", "src": "724:18:7"}, {"expression": {"id": 40, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 38, "name": "VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "752:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 39, "name": "_VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "765:11:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "752:24:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 41, "nodeType": "ExpressionStatement", "src": "752:24:7"}, {"expression": {"id": 44, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 42, "name": "linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "786:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 43, "name": "_linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "805:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "786:36:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 45, "nodeType": "ExpressionStatement", "src": "786:36:7"}]}, "id": 47, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 30, "name": "_vrfCoordinator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "680:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 31, "name": "_linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23, "src": "696:17:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 32, "kind": "baseConstructorSpecifier", "modifierName": {"id": 29, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 957, "src": "664:15:7"}, "nodeType": "ModifierInvocation", "src": "664:50:7"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 28, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21, "mutability": "mutable", "name": "_vrfCoordinator", "nameLocation": "581:15:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "573:23:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20, "name": "address", "nodeType": "ElementaryTypeName", "src": "573:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 23, "mutability": "mutable", "name": "_linkTokenAddress", "nameLocation": "606:17:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "598:25:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22, "name": "address", "nodeType": "ElementaryTypeName", "src": "598:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "_linkFee", "nameLocation": "633:8:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "625:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "625:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "_VRFKeyHash", "nameLocation": "651:11:7", "nodeType": "VariableDeclaration", "scope": 47, "src": "643:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 26, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "643:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "572:91:7"}, "returnParameters": {"id": 33, "nodeType": "ParameterList", "parameters": [], "src": "714:0:7"}, "scope": 579, "src": "561:268:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"anonymous": false, "id": 51, "name": "RequestRandomness", "nameLocation": "841:17:7", "nodeType": "EventDefinition", "parameters": {"id": 50, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 49, "indexed": false, "mutability": "mutable", "name": "requestId", "nameLocation": "867:9:7", "nodeType": "VariableDeclaration", "scope": 51, "src": "859:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 48, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "859:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "858:19:7"}, "src": "835:43:7"}, {"anonymous": false, "id": 57, "name": "WinnerChosen", "nameLocation": "889:12:7", "nodeType": "EventDefinition", "parameters": {"id": 56, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 53, "indexed": false, "mutability": "mutable", "name": "raffleId", "nameLocation": "910:8:7", "nodeType": "VariableDeclaration", "scope": 57, "src": "902:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 52, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "902:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 55, "indexed": false, "mutability": "mutable", "name": "winner", "nameLocation": "936:6:7", "nodeType": "VariableDeclaration", "scope": 57, "src": "920:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 54, "name": "address", "nodeType": "ElementaryTypeName", "src": "920:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}], "src": "901:42:7"}, "src": "883:61:7"}, {"canonicalName": "CharityRaffle.RaffleState", "id": 63, "members": [{"id": 58, "name": "Open", "nameLocation": "977:4:7", "nodeType": "EnumValue", "src": "977:4:7"}, {"id": 59, "name": "Closed", "nameLocation": "991:6:7", "nodeType": "EnumValue", "src": "991:6:7"}, {"id": 60, "name": "SelectingWinner", "nameLocation": "1007:15:7", "nodeType": "EnumValue", "src": "1007:15:7"}, {"id": 61, "name": "Finished", "nameLocation": "1032:8:7", "nodeType": "EnumValue", "src": "1032:8:7"}, {"id": 62, "name": "Expired", "nameLocation": "1050:7:7", "nodeType": "EnumValue", "src": "1050:7:7"}], "name": "RaffleState", "nameLocation": "955:11:7", "nodeType": "EnumDefinition", "src": "950:114:7"}, {"canonicalName": "CharityRaffle.Raffle", "id": 87, "members": [{"constant": false, "id": 65, "mutability": "mutable", "name": "id", "nameLocation": "1494:2:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1486:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 64, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1486:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 67, "mutability": "mutable", "name": "name", "nameLocation": "1549:4:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1542:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 66, "name": "string", "nodeType": "ElementaryTypeName", "src": "1542:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 69, "mutability": "mutable", "name": "ticketCount", "nameLocation": "1593:11:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1585:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 68, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1585:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 71, "mutability": "mutable", "name": "ticketPrice", "nameLocation": "1666:11:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1658:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 70, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1658:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 73, "mutability": "mutable", "name": "beneficiary", "nameLocation": "1713:11:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1697:27:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 72, "name": "address", "nodeType": "ElementaryTypeName", "src": "1697:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 75, "mutability": "mutable", "name": "winner", "nameLocation": "1780:6:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1764:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 74, "name": "address", "nodeType": "ElementaryTypeName", "src": "1764:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 77, "mutability": "mutable", "name": "startTime", "nameLocation": "1864:9:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1856:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 76, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1856:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 79, "mutability": "mutable", "name": "endTime", "nameLocation": "1936:7:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1928:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 78, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1928:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 82, "mutability": "mutable", "name": "state", "nameLocation": "2008:5:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "1996:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}, "typeName": {"id": 81, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 80, "name": "RaffleState", "nodeType": "IdentifierPath", "referencedDeclaration": 63, "src": "1996:11:7"}, "referencedDeclaration": 63, "src": "1996:11:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "visibility": "internal"}, {"constant": false, "id": 86, "mutability": "mutable", "name": "tickets", "nameLocation": "2074:7:7", "nodeType": "VariableDeclaration", "scope": 87, "src": "2046:35:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 85, "keyType": {"id": 83, "name": "address", "nodeType": "ElementaryTypeName", "src": "2054:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "2046:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 84, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2065:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "internal"}], "name": "Raffle", "nameLocation": "1469:6:7", "nodeType": "StructDefinition", "scope": 579, "src": "1462:676:7", "visibility": "public"}, {"constant": true, "functionSelector": "8897cad3", "id": 96, "mutability": "constant", "name": "expirationPeriod", "nameLocation": "2547:16:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "2523:59:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 88, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2523:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800"}, "id": 95, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_rational_10080_by_1", "typeString": "int_const 10080"}, "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_rational_168_by_1", "typeString": "int_const 168"}, "id": 91, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "37", "id": 89, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2566:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_7_by_1", "typeString": "int_const 7"}, "value": "7"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3234", "id": 90, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2570:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_24_by_1", "typeString": "int_const 24"}, "value": "24"}, "src": "2566:6:7", "typeDescriptions": {"typeIdentifier": "t_rational_168_by_1", "typeString": "int_const 168"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3630", "id": 92, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2575:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_60_by_1", "typeString": "int_const 60"}, "value": "60"}, "src": "2566:11:7", "typeDescriptions": {"typeIdentifier": "t_rational_10080_by_1", "typeString": "int_const 10080"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3630", "id": 94, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2580:2:7", "typeDescriptions": {"typeIdentifier": "t_rational_60_by_1", "typeString": "int_const 60"}, "value": "60"}, "src": "2566:16:7", "typeDescriptions": {"typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800"}}, "visibility": "public"}, {"constant": false, "functionSelector": "57529e6c", "id": 99, "mutability": "mutable", "name": "RaffleCount", "nameLocation": "2634:11:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "2610:35:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$768_storage", "typeString": "struct Counters.Counter"}, "typeName": {"id": 98, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 97, "name": "Counters.Counter", "nodeType": "IdentifierPath", "referencedDeclaration": 768, "src": "2610:16:7"}, "referencedDeclaration": 768, "src": "2610:16:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$768_storage_ptr", "typeString": "struct Counters.Counter"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1d5ccd9b", "id": 104, "mutability": "mutable", "name": "Raffles", "nameLocation": "2685:7:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "2651:41:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"}, "typeName": {"id": 103, "keyType": {"id": 100, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2659:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "2651:26:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle)"}, "valueType": {"id": 102, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 101, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 87, "src": "2670:6:7"}, "referencedDeclaration": 87, "src": "2670:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "27028a84", "id": 108, "mutability": "mutable", "name": "VRFRequestIdTORaffleId", "nameLocation": "2772:22:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "2737:57:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}, "typeName": {"id": 107, "keyType": {"id": 105, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2745:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "2737:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}, "valueType": {"id": 106, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2756:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "2ee79ded", "id": 111, "mutability": "mutable", "name": "change", "nameLocation": "2931:6:7", "nodeType": "VariableDeclaration", "scope": 579, "src": "2916:25:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 109, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2916:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "30", "id": 110, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2940:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "visibility": "public"}, {"body": {"id": 208, "nodeType": "Block", "src": "3074:518:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 122, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "3084:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$768_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 124, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "increment", "nodeType": "MemberAccess", "referencedDeclaration": 794, "src": "3084:21:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$768_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$768_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 125, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3084:23:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 126, "nodeType": "ExpressionStatement", "src": "3084:23:7"}, {"assignments": [128], "declarations": [{"constant": false, "id": 128, "mutability": "mutable", "name": "_id", "nameLocation": "3125:3:7", "nodeType": "VariableDeclaration", "scope": 208, "src": "3117:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3117:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 132, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 129, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "3131:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$768_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 130, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 780, "src": "3131:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$768_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$768_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3131:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3117:35:7"}, {"assignments": [135], "declarations": [{"constant": false, "id": 135, "mutability": "mutable", "name": "raffle", "nameLocation": "3177:6:7", "nodeType": "VariableDeclaration", "scope": 208, "src": "3162:21:7", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}, "typeName": {"id": 134, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 133, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 87, "src": "3162:6:7"}, "referencedDeclaration": 87, "src": "3162:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}, "visibility": "internal"}], "id": 139, "initialValue": {"baseExpression": {"id": 136, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "3186:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 138, "indexExpression": {"id": 137, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 128, "src": "3194:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3186:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3162:36:7"}, {"expression": {"id": 144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 140, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3209:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 142, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "id", "nodeType": "MemberAccess", "referencedDeclaration": 65, "src": "3209:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 143, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 128, "src": "3221:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3209:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 145, "nodeType": "ExpressionStatement", "src": "3209:15:7"}, {"expression": {"id": 150, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 146, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3234:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 148, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 67, "src": "3234:11:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 149, "name": "_raffleName", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 113, "src": "3248:11:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "3234:25:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 151, "nodeType": "ExpressionStatement", "src": "3234:25:7"}, {"expression": {"id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 152, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3269:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 154, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "3269:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 155, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3290:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3269:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 157, "nodeType": "ExpressionStatement", "src": "3269:22:7"}, {"expression": {"id": 162, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 158, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3301:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 160, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "3301:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 161, "name": "_ticketPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 115, "src": "3322:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3301:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 163, "nodeType": "ExpressionStatement", "src": "3301:33:7"}, {"expression": {"id": 172, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 164, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3344:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 166, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "3344:18:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 169, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3373:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 170, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3373:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 168, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3365:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 167, "name": "address", "nodeType": "ElementaryTypeName", "src": "3365:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3365:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3344:40:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 173, "nodeType": "ExpressionStatement", "src": "3344:40:7"}, {"expression": {"id": 179, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 174, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3394:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 176, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "3394:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 177, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3413:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3413:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3394:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 180, "nodeType": "ExpressionStatement", "src": "3394:34:7"}, {"expression": {"id": 188, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 181, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3438:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 183, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "3438:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 184, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3455:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3455:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 186, "name": "_raffleLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "3473:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3455:31:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3438:48:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 189, "nodeType": "ExpressionStatement", "src": "3438:48:7"}, {"expression": {"id": 195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 190, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3496:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 192, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "3496:12:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 193, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "3511:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$63_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 194, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 58, "src": "3511:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "3496:31:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 196, "nodeType": "ExpressionStatement", "src": "3496:31:7"}, {"expression": {"id": 204, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 197, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "3537:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 199, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "3537:13:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "307830", "id": 202, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3561:3:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 201, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3553:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 200, "name": "address", "nodeType": "ElementaryTypeName", "src": "3553:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 203, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3553:12:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3537:28:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 205, "nodeType": "ExpressionStatement", "src": "3537:28:7"}, {"expression": {"id": 206, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 128, "src": "3582:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 121, "id": 207, "nodeType": "Return", "src": "3575:10:7"}]}, "functionSelector": "2fec9240", "id": 209, "implemented": true, "kind": "function", "modifiers": [], "name": "CreateRaffle", "nameLocation": "2957:12:7", "nodeType": "FunctionDefinition", "parameters": {"id": 118, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 113, "mutability": "mutable", "name": "_raffleName", "nameLocation": "2984:11:7", "nodeType": "VariableDeclaration", "scope": 209, "src": "2970:25:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 112, "name": "string", "nodeType": "ElementaryTypeName", "src": "2970:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 115, "mutability": "mutable", "name": "_ticketPrice", "nameLocation": "3005:12:7", "nodeType": "VariableDeclaration", "scope": 209, "src": "2997:20:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 114, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2997:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 117, "mutability": "mutable", "name": "_raffleLength", "nameLocation": "3027:13:7", "nodeType": "VariableDeclaration", "scope": 209, "src": "3019:21:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 116, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3019:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2969:72:7"}, "returnParameters": {"id": 121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 120, "mutability": "mutable", "name": "raffleId", "nameLocation": "3065:8:7", "nodeType": "VariableDeclaration", "scope": 209, "src": "3057:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 119, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3057:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3056:18:7"}, "scope": 579, "src": "2948:644:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 246, "nodeType": "Block", "src": "3824:136:7", "statements": [{"expression": {"components": [{"expression": {"baseExpression": {"id": 224, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "3842:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 226, "indexExpression": {"id": 225, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "3850:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3842:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 227, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 67, "src": "3842:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"expression": {"baseExpression": {"id": 228, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "3861:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 230, "indexExpression": {"id": 229, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "3869:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3861:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 231, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "3861:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"expression": {"baseExpression": {"id": 232, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "3887:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 234, "indexExpression": {"id": 233, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "3895:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3887:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 235, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "3887:19:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"expression": {"baseExpression": {"id": 236, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "3908:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 238, "indexExpression": {"id": 237, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "3916:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3908:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 239, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "3908:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 240, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "3932:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 242, "indexExpression": {"id": 241, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 211, "src": "3940:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3932:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 243, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "3932:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 244, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "3841:112:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint256_$", "typeString": "tuple(string storage ref,address payable,address payable,uint256,uint256)"}}, "functionReturnParameters": 223, "id": 245, "nodeType": "Return", "src": "3834:119:7"}]}, "functionSelector": "32dd45fb", "id": 247, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleInfo", "nameLocation": "3667:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 212, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 211, "mutability": "mutable", "name": "_id", "nameLocation": "3689:3:7", "nodeType": "VariableDeclaration", "scope": 247, "src": "3681:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 210, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3681:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3680:13:7"}, "returnParameters": {"id": 223, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 214, "mutability": "mutable", "name": "name", "nameLocation": "3729:4:7", "nodeType": "VariableDeclaration", "scope": 247, "src": "3715:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 213, "name": "string", "nodeType": "ElementaryTypeName", "src": "3715:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 216, "mutability": "mutable", "name": "beneficiary", "nameLocation": "3751:11:7", "nodeType": "VariableDeclaration", "scope": 247, "src": "3735:27:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 215, "name": "address", "nodeType": "ElementaryTypeName", "src": "3735:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 218, "mutability": "mutable", "name": "winner", "nameLocation": "3780:6:7", "nodeType": "VariableDeclaration", "scope": 247, "src": "3764:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 217, "name": "address", "nodeType": "ElementaryTypeName", "src": "3764:15:7", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 220, "mutability": "mutable", "name": "startTime", "nameLocation": "3796:9:7", "nodeType": "VariableDeclaration", "scope": 247, "src": "3788:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 219, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3788:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 222, "mutability": "mutable", "name": "endTime", "nameLocation": "3815:7:7", "nodeType": "VariableDeclaration", "scope": 247, "src": "3807:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 221, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3807:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3714:109:7"}, "scope": 579, "src": "3658:302:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 284, "nodeType": "Block", "src": "4127:141:7", "statements": [{"expression": {"components": [{"expression": {"baseExpression": {"id": 262, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4145:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 264, "indexExpression": {"id": 263, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "4153:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4145:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 265, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 67, "src": "4145:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"expression": {"baseExpression": {"id": 266, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4164:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 268, "indexExpression": {"id": 267, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "4172:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4164:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 269, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 77, "src": "4164:22:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 270, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4188:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 272, "indexExpression": {"id": 271, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "4196:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4188:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 273, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "4188:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 274, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4210:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 276, "indexExpression": {"id": 275, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "4218:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4210:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 277, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "4210:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 278, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4236:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 280, "indexExpression": {"id": 279, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 249, "src": "4244:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4236:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 281, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "4236:24:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 282, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4144:117:7", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(string storage ref,uint256,uint256,uint256,uint256)"}}, "functionReturnParameters": 261, "id": 283, "nodeType": "Return", "src": "4137:124:7"}]}, "functionSelector": "533b4c56", "id": 285, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleTicketInfo", "nameLocation": "3975:19:7", "nodeType": "FunctionDefinition", "parameters": {"id": 250, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 249, "mutability": "mutable", "name": "_id", "nameLocation": "4003:3:7", "nodeType": "VariableDeclaration", "scope": 285, "src": "3995:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 248, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3995:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3994:13:7"}, "returnParameters": {"id": 261, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 252, "mutability": "mutable", "name": "name", "nameLocation": "4043:4:7", "nodeType": "VariableDeclaration", "scope": 285, "src": "4029:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 251, "name": "string", "nodeType": "ElementaryTypeName", "src": "4029:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 254, "mutability": "mutable", "name": "startTime", "nameLocation": "4057:9:7", "nodeType": "VariableDeclaration", "scope": 285, "src": "4049:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 253, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4049:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 256, "mutability": "mutable", "name": "endTime", "nameLocation": "4076:7:7", "nodeType": "VariableDeclaration", "scope": 285, "src": "4068:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 255, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4068:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 258, "mutability": "mutable", "name": "ticketCount", "nameLocation": "4093:11:7", "nodeType": "VariableDeclaration", "scope": 285, "src": "4085:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 257, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4085:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 260, "mutability": "mutable", "name": "ticketPrice", "nameLocation": "4114:11:7", "nodeType": "VariableDeclaration", "scope": 285, "src": "4106:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 259, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4106:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4028:98:7"}, "scope": 579, "src": "3966:302:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 294, "nodeType": "Block", "src": "4330:45:7", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 290, "name": "RaffleCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 99, "src": "4347:11:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$768_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 291, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 780, "src": "4347:19:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$768_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$768_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4347:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 289, "id": 293, "nodeType": "Return", "src": "4340:28:7"}]}, "functionSelector": "b198333c", "id": 295, "implemented": true, "kind": "function", "modifiers": [], "name": "GetRaffleCount", "nameLocation": "4283:14:7", "nodeType": "FunctionDefinition", "parameters": {"id": 286, "nodeType": "ParameterList", "parameters": [], "src": "4297:2:7"}, "returnParameters": {"id": 289, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 288, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 295, "src": "4321:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 287, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4321:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4320:9:7"}, "scope": 579, "src": "4274:101:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 375, "nodeType": "Block", "src": "4421:819:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 307, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 301, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4439:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4439:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"baseExpression": {"id": 303, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4453:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 305, "indexExpression": {"id": 304, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "4461:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4453:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 306, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "4453:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "4439:38:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074686520726166666c65", "id": 308, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4479:43:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220", "typeString": "literal_string \"Only the beneficiary can claim the raffle\""}, "value": "Only the beneficiary can claim the raffle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5510a6ef80e7121c8d319e8e91a887d2477ad1610b070e8310dcde0e6ef36220", "typeString": "literal_string \"Only the beneficiary can claim the raffle\""}], "id": 300, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4431:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 309, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4431:92:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 310, "nodeType": "ExpressionStatement", "src": "4431:92:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 312, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4541:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4541:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"baseExpression": {"id": 314, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4560:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 316, "indexExpression": {"id": 315, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "4568:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4560:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 317, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "4560:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4541:39:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520686173206e6f7420636c6f73656420796574", "id": 319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4582:31:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45", "typeString": "literal_string \"The raffle has not closed yet\""}, "value": "The raffle has not closed yet"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_39a5dc7d408672a58a9ae25a1f46d0a2827b87ef396e040311c04ff8cb29fe45", "typeString": "literal_string \"The raffle has not closed yet\""}], "id": 311, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4533:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4533:81:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 321, "nodeType": "ExpressionStatement", "src": "4533:81:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 331, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 328, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 323, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4632:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 325, "indexExpression": {"id": 324, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "4640:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4632:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 326, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "4632:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 327, "name": "expirationPeriod", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "4655:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4632:39:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 329, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4674:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4674:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4632:57:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c6520686173206578706972656420616e642063616e6e6f7420626520636c61696d6564", "id": 332, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4691:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5", "typeString": "literal_string \"The raffle has expired and cannot be claimed\""}, "value": "The raffle has expired and cannot be claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8ff34edcbbc632ddd22a57e85a322c9fe411ae9e3884b3e8e7bdd298e0bbe8e5", "typeString": "literal_string \"The raffle has expired and cannot be claimed\""}], "id": 322, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4624:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 333, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4624:114:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 334, "nodeType": "ExpressionStatement", "src": "4624:114:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 342, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4799:4:7", "typeDescriptions": {"typeIdentifier": "t_contract$_CharityRaffle_$579", "typeString": "contract CharityRaffle"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CharityRaffle_$579", "typeString": "contract CharityRaffle"}], "id": 341, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4791:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 340, "name": "address", "nodeType": "ElementaryTypeName", "src": "4791:7:7", "typeDescriptions": {}}}, "id": 343, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4791:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 337, "name": "linkTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "4763:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 336, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 762, "src": "4756:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$762_$", "typeString": "type(contract IERC20)"}}, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4756:24:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$762", "typeString": "contract IERC20"}}, "id": 339, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 701, "src": "4756:34:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 344, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4756:49:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 345, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "4810:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4756:61:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520636f6e7472616374206e6565647320746f2062652070616964206c696e6b20746f6b656e20746f20636c61696d2074686520726166666c65", "id": 347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4819:62:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872", "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""}, "value": "The contract needs to be paid link token to claim the raffle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2e5f0f54dcfa7319e411a2bda10df0d048f03d855eeb8dd26d0fba3167a93872", "typeString": "literal_string \"The contract needs to be paid link token to claim the raffle\""}], "id": 335, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4748:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4748:134:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 349, "nodeType": "ExpressionStatement", "src": "4748:134:7"}, {"expression": {"id": 356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 350, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "4892:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 352, "indexExpression": {"id": 351, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "4900:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4892:12:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 353, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "4892:18:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 354, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "4913:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$63_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 355, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 60, "src": "4913:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "4892:48:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 357, "nodeType": "ExpressionStatement", "src": "4892:48:7"}, {"assignments": [359], "declarations": [{"constant": false, "id": 359, "mutability": "mutable", "name": "requestId", "nameLocation": "5007:9:7", "nodeType": "VariableDeclaration", "scope": 375, "src": "4999:17:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 358, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4999:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 364, "initialValue": {"arguments": [{"id": 361, "name": "VRFKeyHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "5037:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 362, "name": "linkFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "5049:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 360, "name": "requestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 907, "src": "5019:17:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (bytes32,uint256) returns (bytes32)"}}, "id": 363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5019:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4999:58:7"}, {"expression": {"id": 369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 365, "name": "VRFRequestIdTORaffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "5112:22:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}}, "id": 367, "indexExpression": {"id": 366, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 359, "src": "5135:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5112:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 368, "name": "_id", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "5148:3:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5112:39:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 370, "nodeType": "ExpressionStatement", "src": "5112:39:7"}, {"eventCall": {"arguments": [{"id": 372, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 359, "src": "5223:9:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 371, "name": "RequestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "5205:17:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 373, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5205:28:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 374, "nodeType": "EmitStatement", "src": "5200:33:7"}]}, "functionSelector": "cda32773", "id": 376, "implemented": true, "kind": "function", "modifiers": [], "name": "ClaimRaffle", "nameLocation": "4390:11:7", "nodeType": "FunctionDefinition", "parameters": {"id": 298, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 297, "mutability": "mutable", "name": "_id", "nameLocation": "4410:3:7", "nodeType": "VariableDeclaration", "scope": 376, "src": "4402:11:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 296, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4402:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4401:13:7"}, "returnParameters": {"id": 299, "nodeType": "ParameterList", "parameters": [], "src": "4421:0:7"}, "scope": 579, "src": "4381:859:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [851], "body": {"id": 465, "nodeType": "Block", "src": "5397:798:7", "statements": [{"assignments": [385], "declarations": [{"constant": false, "id": 385, "mutability": "mutable", "name": "raffleId", "nameLocation": "5415:8:7", "nodeType": "VariableDeclaration", "scope": 465, "src": "5407:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 384, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5407:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 389, "initialValue": {"baseExpression": {"id": 386, "name": "VRFRequestIdTORaffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "5426:22:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$", "typeString": "mapping(bytes32 => uint256)"}}, "id": 388, "indexExpression": {"id": 387, "name": "_requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "5449:10:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5426:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5407:53:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}, "id": 397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 391, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "5478:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 393, "indexExpression": {"id": 392, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5486:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5478:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 394, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "5478:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 395, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "5505:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$63_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 396, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "SelectingWinner", "nodeType": "MemberAccess", "referencedDeclaration": 60, "src": "5505:27:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5478:54:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520726166666c65206973206e6f7420696e207468652053656c656374696e6757696e6e6572207374617465", "id": 398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5534:48:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c", "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""}, "value": "The raffle is not in the SelectingWinner state"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_12f1b6f0c435b1f328b7c3c3886d09ea94dae6cfd46d040bfb36d94c562e077c", "typeString": "literal_string \"The raffle is not in the SelectingWinner state\""}], "id": 390, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5470:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5470:113:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 400, "nodeType": "ExpressionStatement", "src": "5470:113:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 402, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "5601:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 403, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5616:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5601:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2072616e646f6d6e65737320666f756e64", "id": 405, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5619:21:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de", "typeString": "literal_string \"No randomness found\""}, "value": "No randomness found"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4ff762b580e51de64ee8ac451ff4718ab1778f8ca9f51a6efa497abc036015de", "typeString": "literal_string \"No randomness found\""}], "id": 401, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5593:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 406, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5593:48:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 407, "nodeType": "ExpressionStatement", "src": "5593:48:7"}, {"expression": {"id": 414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 408, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "5651:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 410, "indexExpression": {"id": 409, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5659:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5651:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 411, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "5651:23:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 412, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "5677:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$63_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Finished", "nodeType": "MemberAccess", "referencedDeclaration": 61, "src": "5677:20:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "5651:46:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "id": 415, "nodeType": "ExpressionStatement", "src": "5651:46:7"}, {"assignments": [417], "declarations": [{"constant": false, "id": 417, "mutability": "mutable", "name": "winningTicketIndex", "nameLocation": "5715:18:7", "nodeType": "VariableDeclaration", "scope": 465, "src": "5707:26:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 416, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5707:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 424, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 418, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "5736:11:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"expression": {"baseExpression": {"id": 419, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "5750:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 421, "indexExpression": {"id": 420, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5758:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5750:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 422, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "5750:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5736:43:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5707:72:7"}, {"expression": {"id": 434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 425, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "5903:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 427, "indexExpression": {"id": 426, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5911:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5903:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 428, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "5903:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 431, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 612, "src": "5938:5:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 432, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5938:7:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 430, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5930:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 429, "name": "address", "nodeType": "ElementaryTypeName", "src": "5930:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 433, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5930:16:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "5903:43:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 435, "nodeType": "ExpressionStatement", "src": "5903:43:7"}, {"expression": {"arguments": [{"hexValue": "", "id": 454, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6122:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 438, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "6016:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 440, "indexExpression": {"id": 439, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "6024:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6016:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 441, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "beneficiary", "nodeType": "MemberAccess", "referencedDeclaration": 73, "src": "6016:29:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 437, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6008:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 436, "name": "address", "nodeType": "ElementaryTypeName", "src": "6008:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6008:38:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "6008:43:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 453, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 444, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "6059:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 446, "indexExpression": {"id": 445, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "6067:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6059:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 447, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "6059:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"baseExpression": {"id": 448, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "6091:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 450, "indexExpression": {"id": 449, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "6099:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6091:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 451, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "6091:29:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6059:61:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "6008:113:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 455, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6008:117:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "id": 456, "nodeType": "ExpressionStatement", "src": "6008:117:7"}, {"eventCall": {"arguments": [{"id": 458, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "6153:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"baseExpression": {"id": 459, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "6163:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 461, "indexExpression": {"id": 460, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "6171:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6163:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "id": 462, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "winner", "nodeType": "MemberAccess", "referencedDeclaration": 75, "src": "6163:24:7", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 457, "name": "WinnerChosen", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "6140:12:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_payable_$returns$__$", "typeString": "function (uint256,address payable)"}}, "id": 463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6140:48:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 464, "nodeType": "EmitStatement", "src": "6135:53:7"}]}, "id": 466, "implemented": true, "kind": "function", "modifiers": [], "name": "fulfillRandomness", "nameLocation": "5320:17:7", "nodeType": "FunctionDefinition", "overrides": {"id": 382, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5388:8:7"}, "parameters": {"id": 381, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 378, "mutability": "mutable", "name": "_requestId", "nameLocation": "5346:10:7", "nodeType": "VariableDeclaration", "scope": 466, "src": "5338:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 377, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5338:7:7", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 380, "mutability": "mutable", "name": "_randomness", "nameLocation": "5366:11:7", "nodeType": "VariableDeclaration", "scope": 466, "src": "5358:19:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 379, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5358:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5337:41:7"}, "returnParameters": {"id": 383, "nodeType": "ParameterList", "parameters": [], "src": "5397:0:7"}, "scope": 579, "src": "5311:884:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 541, "nodeType": "Block", "src": "6322:547:7", "statements": [{"assignments": [475], "declarations": [{"constant": false, "id": 475, "mutability": "mutable", "name": "raffle", "nameLocation": "6347:6:7", "nodeType": "VariableDeclaration", "scope": 541, "src": "6332:21:7", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}, "typeName": {"id": 474, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 473, "name": "Raffle", "nodeType": "IdentifierPath", "referencedDeclaration": 87, "src": "6332:6:7"}, "referencedDeclaration": 87, "src": "6332:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle"}}, "visibility": "internal"}], "id": 479, "initialValue": {"baseExpression": {"id": 476, "name": "Raffles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "6356:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Raffle_$87_storage_$", "typeString": "mapping(uint256 => struct CharityRaffle.Raffle storage ref)"}}, "id": 478, "indexExpression": {"id": 477, "name": "raffleId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 468, "src": "6364:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6356:17:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage", "typeString": "struct CharityRaffle.Raffle storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "6332:41:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}, "id": 485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 481, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6391:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 482, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "state", "nodeType": "MemberAccess", "referencedDeclaration": 82, "src": "6391:12:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 483, "name": "RaffleState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "6407:11:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_RaffleState_$63_$", "typeString": "type(enum CharityRaffle.RaffleState)"}}, "id": 484, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Open", "nodeType": "MemberAccess", "referencedDeclaration": 58, "src": "6407:16:7", "typeDescriptions": {"typeIdentifier": "t_enum$_RaffleState_$63", "typeString": "enum CharityRaffle.RaffleState"}}, "src": "6391:32:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526166666c65206e6f74206f70656e", "id": 486, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6425:17:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea", "typeString": "literal_string \"Raffle not open\""}, "value": "Raffle not open"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d1b00ce108bd1f699bbd7edecc820e200505146dda1109c371c09744a97ee4ea", "typeString": "literal_string \"Raffle not open\""}], "id": 480, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6383:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6383:60:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 488, "nodeType": "ExpressionStatement", "src": "6383:60:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 490, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6461:5:7", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "6461:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 492, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6479:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 493, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 79, "src": "6479:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6461:32:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526166666c6520697320636c6f736564", "id": 495, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6495:18:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a", "typeString": "literal_string \"Raffle is closed\""}, "value": "Raffle is closed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c492a984eb5b61f47ef2678230eef87ec20b3ff6bc62c812c79bf79c34b0c82a", "typeString": "literal_string \"Raffle is closed\""}], "id": 489, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6453:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 496, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6453:61:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 497, "nodeType": "ExpressionStatement", "src": "6453:61:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 499, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 470, "src": "6532:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 500, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6547:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6532:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5469636b657420636f756e74206d7573742062652067726561746572207468616e2030", "id": 502, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6550:37:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3", "typeString": "literal_string \"Ticket count must be greater than 0\""}, "value": "Ticket count must be greater than 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e032fef7b1749949ffe6ec0963998ab5aadf46c326d57a7712269483cbfad7d3", "typeString": "literal_string \"Ticket count must be greater than 0\""}], "id": 498, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6524:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 503, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6524:64:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 504, "nodeType": "ExpressionStatement", "src": "6524:64:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 506, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6606:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6606:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 508, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6619:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 509, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "6619:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 510, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 470, "src": "6640:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6619:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6606:46:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5469636b65742070726963652069732067726561746572207468616e2074686520616d6f756e742073656e74", "id": 513, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6654:46:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8", "typeString": "literal_string \"Ticket price is greater than the amount sent\""}, "value": "Ticket price is greater than the amount sent"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_43e9e813f6fee90c7458ee5f041ef9db5c2d3b4007c14d1ad113dbef76593ba8", "typeString": "literal_string \"Ticket price is greater than the amount sent\""}], "id": 505, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6598:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 514, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6598:103:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 515, "nodeType": "ExpressionStatement", "src": "6598:103:7"}, {"expression": {"id": 520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 516, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6711:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 518, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ticketCount", "nodeType": "MemberAccess", "referencedDeclaration": 69, "src": "6711:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 519, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 470, "src": "6733:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6711:34:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 521, "nodeType": "ExpressionStatement", "src": "6711:34:7"}, {"expression": {"id": 529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"expression": {"id": 522, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6755:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 526, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tickets", "nodeType": "MemberAccess", "referencedDeclaration": 86, "src": "6755:14:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 527, "indexExpression": {"expression": {"id": 524, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6770:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6770:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6755:26:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 528, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 470, "src": "6785:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6755:42:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 530, "nodeType": "ExpressionStatement", "src": "6755:42:7"}, {"expression": {"id": 539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 531, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "6807:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 532, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6817:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6817:9:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 534, "name": "raffle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "6829:6:7", "typeDescriptions": {"typeIdentifier": "t_struct$_Raffle_$87_storage_ptr", "typeString": "struct CharityRaffle.Raffle storage pointer"}}, "id": 535, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "ticketPrice", "nodeType": "MemberAccess", "referencedDeclaration": 71, "src": "6829:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 536, "name": "_ticketCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 470, "src": "6850:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6829:33:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6817:45:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6807:55:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 540, "nodeType": "ExpressionStatement", "src": "6807:55:7"}]}, "functionSelector": "b894ad33", "id": 542, "implemented": true, "kind": "function", "modifiers": [], "name": "BuyTickets", "nameLocation": "6256:10:7", "nodeType": "FunctionDefinition", "parameters": {"id": 471, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 468, "mutability": "mutable", "name": "raffleId", "nameLocation": "6275:8:7", "nodeType": "VariableDeclaration", "scope": 542, "src": "6267:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 467, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6267:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 470, "mutability": "mutable", "name": "_ticketCount", "nameLocation": "6293:12:7", "nodeType": "VariableDeclaration", "scope": 542, "src": "6285:20:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 469, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6285:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6266:40:7"}, "returnParameters": {"id": 472, "nodeType": "ParameterList", "parameters": [], "src": "6322:0:7"}, "scope": 579, "src": "6247:622:7", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 577, "nodeType": "Block", "src": "7024:201:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 550, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "7042:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 551, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7051:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7042:10:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468657265206973206e6f206368616e676520746f20636f6c6c65637421", "id": 553, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7054:32:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee", "typeString": "literal_string \"There is no change to collect!\""}, "value": "There is no change to collect!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b75c8d4463bcbef07fa7ba9249c5807c1bba28b308ce392b2fe80e7b500164ee", "typeString": "literal_string \"There is no change to collect!\""}], "id": 549, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7034:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7034:53:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 555, "nodeType": "ExpressionStatement", "src": "7034:53:7"}, {"expression": {"arguments": [{"hexValue": "", "id": 564, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7137:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"id": 558, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7105:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7105:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 557, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7097:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 556, "name": "address", "nodeType": "ElementaryTypeName", "src": "7097:8:7", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 560, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7097:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "7097:24:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 563, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 562, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "7129:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "7097:39:7", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7097:43:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "id": 566, "nodeType": "ExpressionStatement", "src": "7097:43:7"}, {"assignments": [568], "declarations": [{"constant": false, "id": 568, "mutability": "mutable", "name": "_change", "nameLocation": "7158:7:7", "nodeType": "VariableDeclaration", "scope": 577, "src": "7150:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 567, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7150:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 570, "initialValue": {"id": 569, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "7168:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7150:24:7"}, {"expression": {"id": 573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 571, "name": "change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 111, "src": "7184:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7193:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7184:10:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 574, "nodeType": "ExpressionStatement", "src": "7184:10:7"}, {"expression": {"id": 575, "name": "_change", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 568, "src": "7211:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 548, "id": 576, "nodeType": "Return", "src": "7204:14:7"}]}, "functionSelector": "3803abef", "id": 578, "implemented": true, "kind": "function", "modifiers": [{"id": 545, "kind": "modifierInvocation", "modifierName": {"id": 544, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 626, "src": "6997:9:7"}, "nodeType": "ModifierInvocation", "src": "6997:9:7"}], "name": "CollectChange", "nameLocation": "6974:13:7", "nodeType": "FunctionDefinition", "parameters": {"id": 543, "nodeType": "ParameterList", "parameters": [], "src": "6987:2:7"}, "returnParameters": {"id": 548, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 547, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 578, "src": "7016:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 546, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7016:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7015:9:7"}, "scope": 579, "src": "6965:260:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 580, "src": "320:6907:7", "usedErrors": []}], "src": "67:7160:7"}, "bytecode": "", "bytecodeSha1": "ff44dfcfba464df5eb793ff11b71c63ff28d8b12", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "CharityRaffle", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"62": [2006, 2028, true]}}, "1": {}, "2": {}, "3": {}, "4": {"VRFConsumerBase.rawFulfillRandomness": {"63": [9750, 9778, true]}}, "5": {}, "7": {"CharityRaffle.BuyTickets": {"53": [6391, 6423, true], "54": [6461, 6493, true], "55": [6532, 6548, true], "56": [6606, 6652, true]}, "CharityRaffle.ClaimRaffle": {"57": [4439, 4477, true], "58": [4541, 4580, true], "59": [4632, 4689, true], "60": [4756, 4817, true]}, "CharityRaffle.CollectChange": {"52": [7042, 7052, true]}, "CharityRaffle.fulfillRandomness": {"61": [5478, 5532, true]}}}, "statements": {"0": {"Ownable._transferOwnership": {"40": [2378, 2395], "41": [2405, 2450]}, "Ownable.owner": {"0": [1101, 1114]}, "Ownable.renounceOwnership": {"20": [1732, 1762]}, "Ownable.transferOwnership": {"38": [1998, 2071], "39": [2081, 2109]}}, "1": {}, "2": {"Context._msgSender": {"15": [712, 729]}}, "3": {"Counters.current": {"3": [911, 932]}, "Counters.increment": {"2": [1032, 1051]}}, "4": {"VRFConsumerBase.rawFulfillRandomness": {"21": [9742, 9814], "22": [9820, 9860]}, "VRFConsumerBase.requestRandomness": {"47": [7889, 7976], "49": [8719, 8758], "50": [8764, 8803]}}, "5": {"VRFRequestIDBase.makeRequestId": {"51": [1583, 1642]}, "VRFRequestIDBase.makeVRFInputSeed": {"48": [980, 1058]}}, "7": {"CharityRaffle.BuyTickets": {"24": [6383, 6443], "25": [6453, 6514], "26": [6524, 6588], "27": [6598, 6701], "28": [6711, 6745], "29": [6755, 6797], "30": [6807, 6862]}, "CharityRaffle.ClaimRaffle": {"31": [4431, 4523], "32": [4533, 4614], "33": [4624, 4738], "34": [4748, 4882], "35": [4892, 4940], "36": [5112, 5151], "37": [5200, 5233]}, "CharityRaffle.CollectChange": {"16": [7034, 7087], "17": [7097, 7140], "18": [7184, 7194]}, "CharityRaffle.CreateRaffle": {"1": [3084, 3107], "4": [3209, 3224], "5": [3234, 3259], "6": [3269, 3291], "7": [3301, 3334], "8": [3344, 3384], "9": [3394, 3428], "10": [3438, 3486], "11": [3496, 3527], "12": [3537, 3565], "13": [3575, 3585]}, "CharityRaffle.GetRaffleCount": {"23": [4340, 4368]}, "CharityRaffle.GetRaffleInfo": {"14": [3834, 3953]}, "CharityRaffle.GetRaffleTicketInfo": {"19": [4137, 4261]}, "CharityRaffle.fulfillRandomness": {"42": [5470, 5583], "43": [5651, 5697], "44": [5903, 5946], "45": [6008, 6125], "46": [6135, 6188]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.4.0/Context", "OpenZeppelin/openzeppelin-contracts@4.4.0/Counters", "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.4.0/Ownable", "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFConsumerBase", "smartcontractkit/chainlink-brownie-contracts@1.2.0/VRFRequestIDBase"], "deployedBytecode": "6080604052600436106101145760003560e01c8063715018a6116100a0578063b894ad3311610064578063b894ad33146102fd578063cda3277314610310578063d1d3bde314610330578063ef124faf14610346578063f2fde38b1461036657600080fd5b8063715018a6146102685780638897cad31461027f5780638da5cb5b1461029657806394985ddd146102c8578063b198333c146102e857600080fd5b80632fec9240116100e75780632fec9240146101ba57806332dd45fb146101da5780633803abef1461020b578063533b4c561461022057806357529e6c1461025157600080fd5b806301889611146101195780631d5ccd9b1461014257806327028a84146101775780632ee79ded146101a4575b600080fd5b34801561012557600080fd5b5061012f60035481565b6040519081526020015b60405180910390f35b34801561014e57600080fd5b5061016261015d36600461115f565b610386565b604051610139999897969594939291906111db565b34801561018357600080fd5b5061012f61019236600461115f565b60076020526000908152604090205481565b3480156101b057600080fd5b5061012f60085481565b3480156101c657600080fd5b5061012f6101d5366004611274565b610467565b3480156101e657600080fd5b506101fa6101f536600461115f565b61050e565b604051610139959493929190611338565b34801561021757600080fd5b5061012f6105f3565b34801561022c57600080fd5b5061024061023b36600461115f565b6106d1565b604051610139959493929190611378565b34801561025d57600080fd5b5060055461012f9081565b34801561027457600080fd5b5061027d610715565b005b34801561028b57600080fd5b5061012f62093a8081565b3480156102a257600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610139565b3480156102d457600080fd5b5061027d6102e33660046113af565b61074b565b3480156102f457600080fd5b5061012f6107d1565b61027d61030b3660046113af565b6107e1565b34801561031c57600080fd5b5061027d61032b36600461115f565b6109d2565b34801561033c57600080fd5b5061012f60045481565b34801561035257600080fd5b506002546102b0906001600160a01b031681565b34801561037257600080fd5b5061027d6103813660046113d1565b610c93565b600660205260009081526040902080546001820180549192916103a890611401565b80601f01602080910402602001604051908101604052809291908181526020018280546103d490611401565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b505050600284015460038501546004860154600587015460068801546007890154600890990154979894979396506001600160a01b039283169550911692909160ff1689565b6000610477600580546001019055565b600061048260055490565b60008181526006602090815260409091208281558751929350916104ae916001840191908901906110c6565b5060006002820155600381018590556004810180546001600160a01b0319163317905542600682018190556104e4908590611452565b600782015560088101805460ff1916905560050180546001600160a01b0319169055949350505050565b600081815260066020819052604082206004810154600582015492820154600783015460019093018054606096958695869586956001600160a01b039182169491909316929190859061056090611401565b80601f016020809104026020016040519081016040528092919081815260200182805461058c90611401565b80156105d95780601f106105ae576101008083540402835291602001916105d9565b820191906000526020600020905b8154815290600101906020018083116105bc57829003601f168201915b505050505094509450945094509450945091939590929450565b600080546001600160a01b031633146106275760405162461bcd60e51b815260040161061e9061146a565b60405180910390fd5b6000600854116106795760405162461bcd60e51b815260206004820152601e60248201527f5468657265206973206e6f206368616e676520746f20636f6c6c656374210000604482015260640161061e565b600854604051339190600081818185875af1925050503d80600081146106bb576040519150601f19603f3d011682016040523d82523d6000602084013e6106c0565b606091505b505060088054600090915591505090565b600081815260066020819052604082209081015460078201546002830154600384015460019094018054606096958695869586959193909290859061056090611401565b6000546001600160a01b0316331461073f5760405162461bcd60e51b815260040161061e9061146a565b6107496000610d2e565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107c35760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161061e565b6107cd8282610d7e565b5050565b60006107dc60055490565b905090565b600082815260066020526040812090600882015460ff166004811115610809576108096111c5565b146108485760405162461bcd60e51b815260206004820152600f60248201526e2930b3333632903737ba1037b832b760891b604482015260640161061e565b8060070154421061088e5760405162461bcd60e51b815260206004820152601060248201526f149859999b19481a5cc818db1bdcd95960821b604482015260640161061e565b600082116108ea5760405162461bcd60e51b815260206004820152602360248201527f5469636b657420636f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161061e565b8181600301546108fa919061149f565b34101561095e5760405162461bcd60e51b815260206004820152602c60248201527f5469636b65742070726963652069732067726561746572207468616e2074686560448201526b08185b5bdd5b9d081cd95b9d60a21b606482015260840161061e565b818160020160008282546109729190611452565b909155505033600090815260098201602052604081208054849290610998908490611452565b909155505060038101546109ad90839061149f565b6109b790346114be565b600860008282546109c89190611452565b9091555050505050565b6000818152600660205260409020600401546001600160a01b03163314610a4d5760405162461bcd60e51b815260206004820152602960248201527f4f6e6c79207468652062656e65666963696172792063616e20636c61696d2074604482015268686520726166666c6560b81b606482015260840161061e565b600081815260066020526040902060070154421015610aae5760405162461bcd60e51b815260206004820152601d60248201527f54686520726166666c6520686173206e6f7420636c6f73656420796574000000604482015260640161061e565b6000818152600660205260409020600701544290610ad09062093a8090611452565b11610b325760405162461bcd60e51b815260206004820152602c60248201527f54686520726166666c6520686173206578706972656420616e642063616e6e6f60448201526b1d0818994818db185a5b595960a21b606482015260840161061e565b6003546002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba191906114d5565b1015610c155760405162461bcd60e51b815260206004820152603c60248201527f54686520636f6e7472616374206e6565647320746f2062652070616964206c6960448201527f6e6b20746f6b656e20746f20636c61696d2074686520726166666c6500000000606482015260840161061e565b6000818152600660205260408120600801805460ff19166002179055600454600354610c419190610f43565b60008181526007602052604090819020849055519091507fe7e9d173875e49599c9dc06ea20fd1d8878525700b2711462f8379cccdc637eb90610c879083815260200190565b60405180910390a15050565b6000546001600160a01b03163314610cbd5760405162461bcd60e51b815260040161061e9061146a565b6001600160a01b038116610d225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161061e565b610d2b81610d2e565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260076020526040902054600260008281526006602052604090206008015460ff166004811115610db557610db56111c5565b14610e195760405162461bcd60e51b815260206004820152602e60248201527f54686520726166666c65206973206e6f7420696e207468652053656c6563746960448201526d6e6757696e6e657220737461746560901b606482015260840161061e565b600081815260066020526040812060088101805460ff1916600317905560020154610e4490846114ee565b9050610e586000546001600160a01b031690565b60008381526006602052604090206005810180546001600160a01b0319166001600160a01b0393841617905560048101546002820154600390920154921691610ea1919061149f565b604051600081818185875af1925050503d8060008114610edd576040519150601f19603f3d011682016040523d82523d6000602084013e610ee2565b606091505b5050506000828152600660209081526040918290206005015482518581526001600160a01b03909116918101919091527f3bc05d77c749538b04c637d624a0e50d28a1cf181657405d944d039de39d9651910160405180910390a150505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610fb3929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610fe093929190611510565b6020604051808303816000875af1158015610fff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110239190611540565b50600083815260016020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120938790529082905261107e91611452565b6000858152600160205260409020556110be8482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b8280546110d290611401565b90600052602060002090601f0160209004810192826110f4576000855561113a565b82601f1061110d57805160ff191683800117855561113a565b8280016001018555821561113a579182015b8281111561113a57825182559160200191906001019061111f565b5061114692915061114a565b5090565b5b80821115611146576000815560010161114b565b60006020828403121561117157600080fd5b5035919050565b6000815180845260005b8181101561119e57602081850181015186830182015201611182565b818111156111b0576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101208b83528060208401526111f58184018c611178565b604084018b9052606084018a90526001600160a01b038981166080860152881660a085015260c0840187905260e084018690529150506005831061124957634e487b7160e01b600052602160045260246000fd5b826101008301529a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561128957600080fd5b833567ffffffffffffffff808211156112a157600080fd5b818601915086601f8301126112b557600080fd5b8135818111156112c7576112c761125e565b604051601f8201601f19908116603f011681019083821181831017156112ef576112ef61125e565b8160405282815289602084870101111561130857600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60a08152600061134b60a0830188611178565b6001600160a01b039687166020840152949095166040820152606081019290925260809091015292915050565b60a08152600061138b60a0830188611178565b90508560208301528460408301528360608301528260808301529695505050505050565b600080604083850312156113c257600080fd5b50508035926020909101359150565b6000602082840312156113e357600080fd5b81356001600160a01b03811681146113fa57600080fd5b9392505050565b600181811c9082168061141557607f821691505b6020821081141561143657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156114655761146561143c565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156114b9576114b961143c565b500290565b6000828210156114d0576114d061143c565b500390565b6000602082840312156114e757600080fd5b5051919050565b60008261150b57634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b03841681528260208201526060604082015260006115376060830184611178565b95945050505050565b60006020828403121561155257600080fd5b815180151581146113fa57600080fdfea264697066735822122014362b9e2c06c54f9ea92cb58bab476e18a4f33addba380641f82149858350f064736f6c634300080a0033", "deployedSourceMap": "320:6907:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:22;;;;;;;;;;;;;;;;;;;160:25:8;;;148:2;133:18;456:22:7;;;;;;;;2651:41;;;;;;;;;;-1:-1:-1;2651:41:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;2737:57::-;;;;;;;;;;-1:-1:-1;2737:57:7;;;;;:::i;:::-;;;;;;;;;;;;;;2916:25;;;;;;;;;;;;;;;;2948:644;;;;;;;;;;-1:-1:-1;2948:644:7;;;;;:::i;:::-;;:::i;3658:302::-;;;;;;;;;;-1:-1:-1;3658:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;6965:260::-;;;;;;;;;;;;;:::i;3966:302::-;;;;;;;;;;-1:-1:-1;3966:302:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2610:35::-;;;;;;;;;;-1:-1:-1;2610:35:7;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;2523:59:7;;;;;;;;;;;;2566:16;2523:59;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;4729:32:8;;;4711:51;;4699:2;4684:18;1036:85:0;4565:203:8;9640:225:4;;;;;;;;;;-1:-1:-1;9640:225:4;;;;;:::i;:::-;;:::i;4274:101:7:-;;;;;;;;;;;;;:::i;6247:622::-;;;;;;:::i;:::-;;:::i;4381:859::-;;;;;;;;;;-1:-1:-1;4381:859:7;;;;;:::i;:::-;;:::i;484:25::-;;;;;;;;;;;;;;;;419:31;;;;;;;;;;-1:-1:-1;419:31:7;;;;-1:-1:-1;;;;;419:31:7;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2651:41:7:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2651:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2651:41:7;;;;-1:-1:-1;2651:41:7;;;;;;;;:::o;2948:644::-;3057:16;3084:23;:11;1032:19:3;;1050:1;1032:19;;;945:123;3084:23:7;3117:11;3131:21;:11;918:14:3;;827:112;3131:21:7;3162;3186:12;;;:7;:12;;;;;;;;3209:15;;;3234:25;;3117:35;;-1:-1:-1;3186:12:7;3234:25;;:11;;;;:25;;;;;:::i;:::-;-1:-1:-1;3290:1:7;3269:18;;;:22;3301:18;;;:33;;;3344:18;;;:40;;-1:-1:-1;;;;;;3344:40:7;3373:10;3344:40;;;3413:15;3394:16;;;:34;;;3455:31;;3473:13;;3455:31;:::i;:::-;3438:14;;;:48;3496:12;;;:31;;-1:-1:-1;;3496:31:7;;;3537:13;;:28;;-1:-1:-1;;;;;;3537:28:7;;;3582:3;;-1:-1:-1;;;;2948:644:7:o;3658:302::-;3735:27;3842:12;;;:7;:12;;;;;;;3861:24;;;;3887:19;;;;3908:22;;;;3932:20;;;;3842:17;;;;3834:119;;3715:18;;3735:27;;;;;;;-1:-1:-1;;;;;3861:24:7;;;;3887:19;;;;;3908:22;3932:20;3842:17;;3834:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3658:302;;;;;;;:::o;6965:260::-;7016:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;7051:1:7::1;7042:6;;:10;7034:53;;;::::0;-1:-1:-1;;;7034:53:7;;6965:2:8;7034:53:7::1;::::0;::::1;6947:21:8::0;7004:2;6984:18;;;6977:30;7043:32;7023:18;;;7016:60;7093:18;;7034:53:7::1;6763:354:8::0;7034:53:7::1;7129:6;::::0;7097:43:::1;::::0;7105:10:::1;::::0;7129:6;7097:43:::1;::::0;;;7129:6;7105:10;7097:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;7168:6:7::1;::::0;;7150:15:::1;7184:10:::0;;;7168:6;-1:-1:-1;;6965:260:7;:::o;3966:302::-;4049:17;4145:12;;;:7;:12;;;;;;;4164:22;;;;4188:20;;;;4210:24;;;;4236;;;;4145:17;;;;4137:124;;4029:18;;4049:17;;;;;;;4164:22;;4188:20;;4236:24;4145:17;;4137:124;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;9640:225:4:-;9750:10;-1:-1:-1;;;;;9764:14:4;9750:28;;9742:72;;;;-1:-1:-1;;;9742:72:4;;7534:2:8;9742:72:4;;;7516:21:8;7573:2;7553:18;;;7546:30;7612:33;7592:18;;;7585:61;7663:18;;9742:72:4;7332:355:8;9742:72:4;9820:40;9838:9;9849:10;9820:17;:40::i;:::-;9640:225;;:::o;4274:101:7:-;4321:7;4347:21;:11;918:14:3;;827:112;4347:21:7;4340:28;;4274:101;:::o;6247:622::-;6332:21;6356:17;;;:7;:17;;;;;;6391:12;;;;;;:32;;;;;;;;:::i;:::-;;6383:60;;;;-1:-1:-1;;;6383:60:7;;7894:2:8;6383:60:7;;;7876:21:8;7933:2;7913:18;;;7906:30;-1:-1:-1;;;7952:18:8;;;7945:45;8007:18;;6383:60:7;7692:339:8;6383:60:7;6479:6;:14;;;6461:15;:32;6453:61;;;;-1:-1:-1;;;6453:61:7;;8238:2:8;6453:61:7;;;8220:21:8;8277:2;8257:18;;;8250:30;-1:-1:-1;;;8296:18:8;;;8289:46;8352:18;;6453:61:7;8036:340:8;6453:61:7;6547:1;6532:12;:16;6524:64;;;;-1:-1:-1;;;6524:64:7;;8583:2:8;6524:64:7;;;8565:21:8;8622:2;8602:18;;;8595:30;8661:34;8641:18;;;8634:62;-1:-1:-1;;;8712:18:8;;;8705:33;8755:19;;6524:64:7;8381:399:8;6524:64:7;6640:12;6619:6;:18;;;:33;;;;:::i;:::-;6606:9;:46;;6598:103;;;;-1:-1:-1;;;6598:103:7;;9160:2:8;6598:103:7;;;9142:21:8;9199:2;9179:18;;;9172:30;9238:34;9218:18;;;9211:62;-1:-1:-1;;;9289:18:8;;;9282:42;9341:19;;6598:103:7;8958:408:8;6598:103:7;6733:12;6711:6;:18;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;6770:10:7;6755:26;;;;:14;;;:26;;;;;:42;;6785:12;;6755:26;:42;;6785:12;;6755:42;:::i;:::-;;;;-1:-1:-1;;6829:18:7;;;;:33;;6850:12;;6829:33;:::i;:::-;6817:45;;:9;:45;:::i;:::-;6807:6;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6247:622:7:o;4381:859::-;4453:12;;;;:7;:12;;;;;:24;;;-1:-1:-1;;;;;4453:24:7;4439:10;:38;4431:92;;;;-1:-1:-1;;;4431:92:7;;9703:2:8;4431:92:7;;;9685:21:8;9742:2;9722:18;;;9715:30;9781:34;9761:18;;;9754:62;-1:-1:-1;;;9832:18:8;;;9825:39;9881:19;;4431:92:7;9501:405:8;4431:92:7;4560:12;;;;:7;:12;;;;;:20;;;4541:15;:39;;4533:81;;;;-1:-1:-1;;;4533:81:7;;10113:2:8;4533:81:7;;;10095:21:8;10152:2;10132:18;;;10125:30;10191:31;10171:18;;;10164:59;10240:18;;4533:81:7;9911:353:8;4533:81:7;4632:12;;;;:7;:12;;;;;:20;;;4674:15;;4632:39;;2566:16;;4632:39;:::i;:::-;:57;4624:114;;;;-1:-1:-1;;;4624:114:7;;10471:2:8;4624:114:7;;;10453:21:8;10510:2;10490:18;;;10483:30;10549:34;10529:18;;;10522:62;-1:-1:-1;;;10600:18:8;;;10593:42;10652:19;;4624:114:7;10269:408:8;4624:114:7;4810:7;;4763:16;;4756:49;;-1:-1:-1;;;4756:49:7;;4799:4;4756:49;;;4711:51:8;-1:-1:-1;;;;;4763:16:7;;;;4756:34;;4684:18:8;;4756:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;4748:134;;;;-1:-1:-1;;;4748:134:7;;11073:2:8;4748:134:7;;;11055:21:8;11112:2;11092:18;;;11085:30;11151:34;11131:18;;;11124:62;11222:30;11202:18;;;11195:58;11270:19;;4748:134:7;10871:424:8;4748:134:7;4892:12;;;;:7;:12;;;;;:18;;:48;;-1:-1:-1;;4892:48:7;4913:27;4892:48;;;5037:10;;5049:7;;5019:38;;5037:10;5019:17;:38::i;:::-;5112:33;;;;:22;:33;;;;;;;:39;;;5205:28;4999:58;;-1:-1:-1;5205:28:7;;;;4999:58;160:25:8;;148:2;133:18;;14:177;5205:28:7;;;;;;;;4421:819;4381:859;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11502:2:8;1998:73:0::1;::::0;::::1;11484:21:8::0;11541:2;11521:18;;;11514:30;11580:34;11560:18;;;11553:62;-1:-1:-1;;;11631:18:8;;;11624:36;11677:19;;1998:73:0::1;11300:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5311:884:7:-;5407:16;5426:34;;;:22;:34;;;;;;5505:27;5478:17;;;;:7;:17;;;;;:23;;;;;:54;;;;;;;;:::i;:::-;;5470:113;;;;-1:-1:-1;;;5470:113:7;;11909:2:8;5470:113:7;;;11891:21:8;11948:2;11928:18;;;11921:30;11987:34;11967:18;;;11960:62;-1:-1:-1;;;12038:18:8;;;12031:44;12092:19;;5470:113:7;11707:410:8;5470:113:7;5651:17;;;;:7;:17;;;;;:23;;;:46;;-1:-1:-1;;5651:46:7;5677:20;5651:46;;;5750:29;;;5736:43;;:11;:43;:::i;:::-;5707:72;;5938:7;1082::0;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85;5938:7:7;5903:17;;;;:7;:17;;;;;:24;;;:43;;-1:-1:-1;;;;;;5903:43:7;-1:-1:-1;;;;;5903:43:7;;;;;;6016:29;;;;6091;;;;6059;;;;;6016;;;6059:61;;6091:29;6059:61;:::i;:::-;6008:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6163:17:7;;;;:7;:17;;;;;;;;;:24;;;6140:48;;12874:25:8;;;-1:-1:-1;;;;;6163:24:7;;;12915:18:8;;;12908:60;;;;6140:48:7;;12847:18:8;6140:48:7;;;;;;;5397:798;;5311:884;;:::o;7753:1055:4:-;7857:17;7889:4;-1:-1:-1;;;;;7889:20:4;;7910:14;7926:4;7943:8;6610:1;7932:43;;;;;;;;13153:25:8;;;13209:2;13194:18;;13187:34;13141:2;13126:18;;12979:248;7932:43:4;;;;;;;;;;;;;7889:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8207:15:4;8291:16;;;:6;:16;;;;;;;;;1005:51:5;;;;;14136:25:8;;;14177:18;;;14170:34;;;8284:4:4;14220:18:8;;;14213:60;14289:18;;;;14282:34;;;1005:51:5;;;;;;;;;;14108:19:8;;;;1005:51:5;;;995:62;;;;;;;;;8738:16:4;;;;;;;;:20;;;:::i;:::-;8719:16;;;;:6;:16;;;;;:39;8771:32;8726:8;8795:7;1600:41:5;;;;;;;14484:19:8;;;;14519:12;;;14512:28;;;;1600:41:5;;;;;;;;;14556:12:8;;;;1600:41:5;;1590:52;;;;;;1443:204;8771:32:4;8764:39;7753:1055;-1:-1:-1;;;;7753:1055:4:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:180:8;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:8;;196:180;-1:-1:-1;196:180:8:o;381:472::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;703:6;700:1;697:13;694:87;;;769:1;762:4;753:6;748:3;744:16;740:27;733:38;694:87;-1:-1:-1;835:2:8;814:15;-1:-1:-1;;810:29:8;801:39;;;;842:4;797:50;;381:472;-1:-1:-1;;381:472:8:o;858:127::-;919:10;914:3;910:20;907:1;900:31;950:4;947:1;940:15;974:4;971:1;964:15;990:1068;1370:4;1399:3;1429:6;1418:9;1411:25;1472:2;1467;1456:9;1452:18;1445:30;1492:45;1533:2;1522:9;1518:18;1510:6;1492:45;:::i;:::-;1568:2;1553:18;;1546:34;;;1611:2;1596:18;;1589:34;;;-1:-1:-1;;;;;1698:15:8;;;1692:3;1677:19;;1670:44;1751:15;;1650:3;1730:19;;1723:44;1798:3;1783:19;;1776:35;;;1842:3;1827:19;;1820:35;;;1484:53;-1:-1:-1;;1885:1:8;1874:13;;1864:144;;1930:10;1925:3;1921:20;1918:1;1911:31;1965:4;1962:1;1955:15;1993:4;1990:1;1983:15;1864:144;2045:6;2039:3;2028:9;2024:19;2017:35;990:1068;;;;;;;;;;;;:::o;2248:127::-;2309:10;2304:3;2300:20;2297:1;2290:31;2340:4;2337:1;2330:15;2364:4;2361:1;2354:15;2380:1068;2467:6;2475;2483;2536:2;2524:9;2515:7;2511:23;2507:32;2504:52;;;2552:1;2549;2542:12;2504:52;2592:9;2579:23;2621:18;2662:2;2654:6;2651:14;2648:34;;;2678:1;2675;2668:12;2648:34;2716:6;2705:9;2701:22;2691:32;;2761:7;2754:4;2750:2;2746:13;2742:27;2732:55;;2783:1;2780;2773:12;2732:55;2819:2;2806:16;2841:2;2837;2834:10;2831:36;;;2847:18;;:::i;:::-;2922:2;2916:9;2890:2;2976:13;;-1:-1:-1;;2972:22:8;;;2996:2;2968:31;2964:40;2952:53;;;3020:18;;;3040:22;;;3017:46;3014:72;;;3066:18;;:::i;:::-;3106:10;3102:2;3095:22;3141:2;3133:6;3126:18;3183:7;3176:4;3171:2;3167;3163:11;3159:22;3156:35;3153:55;;;3204:1;3201;3194:12;3153:55;3264:2;3257:4;3253:2;3249:13;3242:4;3234:6;3230:17;3217:50;3311:1;3304:4;3299:2;3291:6;3287:15;3283:26;3276:37;3332:6;3322:16;;;;;;;3385:4;3374:9;3370:20;3357:34;3347:44;;3438:2;3427:9;3423:18;3410:32;3400:42;;2380:1068;;;;;:::o;3453:595::-;3746:3;3735:9;3728:22;3709:4;3767:46;3808:3;3797:9;3793:19;3785:6;3767:46;:::i;:::-;-1:-1:-1;;;;;3887:15:8;;;3882:2;3867:18;;3860:43;3939:15;;;;3934:2;3919:18;;3912:43;3986:2;3971:18;;3964:34;;;;4029:3;4014:19;;;4007:35;3759:54;3453:595;-1:-1:-1;;3453:595:8:o;4053:507::-;4314:3;4303:9;4296:22;4277:4;4335:46;4376:3;4365:9;4361:19;4353:6;4335:46;:::i;:::-;4327:54;;4417:6;4412:2;4401:9;4397:18;4390:34;4460:6;4455:2;4444:9;4440:18;4433:34;4503:6;4498:2;4487:9;4483:18;4476:34;4547:6;4541:3;4530:9;4526:19;4519:35;4053:507;;;;;;;;:::o;4773:248::-;4841:6;4849;4902:2;4890:9;4881:7;4877:23;4873:32;4870:52;;;4918:1;4915;4908:12;4870:52;-1:-1:-1;;4941:23:8;;;5011:2;4996:18;;;4983:32;;-1:-1:-1;4773:248:8:o;5461:286::-;5520:6;5573:2;5561:9;5552:7;5548:23;5544:32;5541:52;;;5589:1;5586;5579:12;5541:52;5615:23;;-1:-1:-1;;;;;5667:31:8;;5657:42;;5647:70;;5713:1;5710;5703:12;5647:70;5736:5;5461:286;-1:-1:-1;;;5461:286:8:o;5752:380::-;5831:1;5827:12;;;;5874;;;5895:61;;5949:4;5941:6;5937:17;5927:27;;5895:61;6002:2;5994:6;5991:14;5971:18;5968:38;5965:161;;;6048:10;6043:3;6039:20;6036:1;6029:31;6083:4;6080:1;6073:15;6111:4;6108:1;6101:15;5965:161;;5752:380;;;:::o;6137:127::-;6198:10;6193:3;6189:20;6186:1;6179:31;6229:4;6226:1;6219:15;6253:4;6250:1;6243:15;6269:128;6309:3;6340:1;6336:6;6333:1;6330:13;6327:39;;;6346:18;;:::i;:::-;-1:-1:-1;6382:9:8;;6269:128::o;6402:356::-;6604:2;6586:21;;;6623:18;;;6616:30;6682:34;6677:2;6662:18;;6655:62;6749:2;6734:18;;6402:356::o;8785:168::-;8825:7;8891:1;8887;8883:6;8879:14;8876:1;8873:21;8868:1;8861:9;8854:17;8850:45;8847:71;;;8898:18;;:::i;:::-;-1:-1:-1;8938:9:8;;8785:168::o;9371:125::-;9411:4;9439:1;9436;9433:8;9430:34;;;9444:18;;:::i;:::-;-1:-1:-1;9481:9:8;;9371:125::o;10682:184::-;10752:6;10805:2;10793:9;10784:7;10780:23;10776:32;10773:52;;;10821:1;10818;10811:12;10773:52;-1:-1:-1;10844:16:8;;10682:184;-1:-1:-1;10682:184:8:o;12470:209::-;12502:1;12528;12518:132;;12572:10;12567:3;12563:20;12560:1;12553:31;12607:4;12604:1;12597:15;12635:4;12632:1;12625:15;12518:132;-1:-1:-1;12664:9:8;;12470:209::o;13232:386::-;13464:1;13460;13455:3;13451:11;13447:19;13439:6;13435:32;13424:9;13417:51;13504:6;13499:2;13488:9;13484:18;13477:34;13547:2;13542;13531:9;13527:18;13520:30;13398:4;13567:45;13608:2;13597:9;13593:18;13585:6;13567:45;:::i;:::-;13559:53;13232:386;-1:-1:-1;;;;;13232:386:8:o;13623:277::-;13690:6;13743:2;13731:9;13722:7;13718:23;13714:32;13711:52;;;13759:1;13756;13749:12;13711:52;13791:9;13785:16;13844:5;13837:13;13830:21;13823:5;13820:32;13810:60;;13866:1;13863;13856:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [320, 7227], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB894AD33 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB894AD33 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xCDA32773 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xD1D3BDE3 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xEF124FAF EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8897CAD3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xB198333C EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FEC9240 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2FEC9240 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x32DD45FB EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x3803ABEF EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x533B4C56 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x57529E6C EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1889611 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x1D5CCD9B EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x27028A84 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2EE79DED EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x5F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x12F SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH3 0x93A80 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x3A8 SWAP1 PUSH2 0x1401 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x1401 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x421 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x421 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x404 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0x7 DUP10 ADD SLOAD PUSH1 0x8 SWAP1 SWAP10 ADD SLOAD SWAP8 SWAP9 SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP6 POP SWAP2 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x482 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 DUP2 SSTORE DUP8 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x4AE SWAP2 PUSH1 0x1 DUP5 ADD SWAP2 SWAP1 DUP10 ADD SWAP1 PUSH2 0x10C6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH2 0x4E4 SWAP1 DUP6 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x1 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP2 SWAP1 SWAP4 AND SWAP3 SWAP2 SWAP1 DUP6 SWAP1 PUSH2 0x560 SWAP1 PUSH2 0x1401 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58C SWAP1 PUSH2 0x1401 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD GT PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F206368616E676520746F20636F6C6C656374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x1 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0x60 SWAP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 DUP7 SWAP6 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 DUP6 SWAP1 PUSH2 0x560 SWAP1 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x749 PUSH1 0x0 PUSH2 0xD2E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH2 0x7CD DUP3 DUP3 PUSH2 0xD7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x809 JUMPI PUSH2 0x809 PUSH2 0x11C5 JUMP JUMPDEST EQ PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2930B3333632903737BA1037B832B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD TIMESTAMP LT PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x149859999B19481A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B657420636F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65742070726963652069732067726561746572207468616E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x8185B5BDD5B9D081CD95B9D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x998 SWAP1 DUP5 SWAP1 PUSH2 0x1452 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD SLOAD PUSH2 0x9AD SWAP1 DUP4 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x9B7 SWAP1 CALLVALUE PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652062656E65666963696172792063616E20636C61696D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x686520726166666C65 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206E6F7420636C6F73656420796574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD TIMESTAMP SWAP1 PUSH2 0xAD0 SWAP1 PUSH3 0x93A80 SWAP1 PUSH2 0x1452 JUMP JUMPDEST GT PUSH2 0xB32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C6520686173206578706972656420616E642063616E6E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D0818994818DB185A5B5959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST LT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206E6565647320746F2062652070616964206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6B20746F6B656E20746F20636C61696D2074686520726166666C6500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xE7E9D173875E49599C9DC06EA20FD1D8878525700B2711462F8379CCCDC637EB SWAP1 PUSH2 0xC87 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH2 0xD2B DUP2 PUSH2 0xD2E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB5 PUSH2 0x11C5 JUMP JUMPDEST EQ PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520726166666C65206973206E6F7420696E207468652053656C65637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E6757696E6E6572207374617465 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE PUSH1 0x2 ADD SLOAD PUSH2 0xE44 SWAP1 DUP5 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP PUSH2 0xE58 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP3 AND SWAP2 PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x3BC05D77C749538B04C637D624A0E50D28A1CF181657405D944D039DE39D9651 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFB3 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x107E SWAP2 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x10BE DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x10D2 SWAP1 PUSH2 0x1401 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x113A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x110D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x113A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x113A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x113A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x111F JUMP JUMPDEST POP PUSH2 0x1146 SWAP3 SWAP2 POP PUSH2 0x114A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x114B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x119E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1182 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x11B0 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11F5 DUP2 DUP5 ADD DUP13 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE DUP9 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP7 SWAP1 MSTORE SWAP2 POP POP PUSH1 0x5 DUP4 LT PUSH2 0x1249 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C7 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x12EF JUMPI PUSH2 0x12EF PUSH2 0x125E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x134B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x138B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1415 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1436 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x143C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14B9 JUMPI PUSH2 0x14B9 PUSH2 0x143C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14D0 JUMPI PUSH2 0x14D0 PUSH2 0x143C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x150B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1537 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13FA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CALLDATASIZE 0x2B SWAP15 0x2C MOD 0xC5 0x4F SWAP15 0xA9 0x2C 0xB5 DUP12 0xAB SELFBALANCE PUSH15 0x18A4F33ADDBA380641F82149858350 CREATE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ", "sha1": "a1f44214d2edbcf23eb195ff9d6d8c8b589d6132", "source": "// contracts/CharityRafflev0.1.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract CharityRaffle is Ownable, VRFConsumerBase {\n    using Counters for Counters.Counter;\n\n    address public linkTokenAddress;\n    uint256 public linkFee;\n    bytes32 public VRFKeyHash;\n    // A contstructor to deal with randomness\n    constructor(address _vrfCoordinator, address _linkTokenAddress, uint256 _linkFee, bytes32 _VRFKeyHash) VRFConsumerBase(_vrfCoordinator,_linkTokenAddress){\n        linkFee = _linkFee;\n        VRFKeyHash = _VRFKeyHash;\n        linkTokenAddress = _linkTokenAddress;\n    }\n\n    event RequestRandomness(bytes32 requestId);\n    event WinnerChosen(uint256 raffleId, address payable winner);\n\n    enum RaffleState {\n        Open,\n        Closed,\n        SelectingWinner,\n        Finished,\n        Expired \n    }\n    // NotStarted: The raffle has not yet begun\n    // Open: The raffle is open for entry\n    // Closed: The raffle is closed for entry\n    // SelectingWinner: The raffle is closed and the winner is being selected\n    // Finished: The raffle is finished and the winner has been selected, beneficiary has been paid\n    // Expired: The raffle has expired since the benificiary has not ended it\n\n    struct Raffle {\n        uint256 id; // unique identifier for the raffle\n        string name; // name of the raffle\n        uint256 ticketCount; // number of tickets bought for this raffle\n        uint256 ticketPrice; // in wei\n        address payable beneficiary; // address of the beneficiary\n        address payable winner; // address of the winner of the raffle, by default it's 0x0\n        uint256 startTime; // unix timestamp of the start of the raffle\n        uint256 endTime; // unix timestamp of the end of the raffle\n        RaffleState state; // state of the raffle\n        mapping(address => uint256) tickets; // mapping of address to number of tickets bought\n    }\n\n    // Some rules of how raffles work\n    // 1. Anyone can make a new raffle\n    // 2. Anyone can buy tickets for any open raffle, and this can be for multiple raffles\n    // 3. Tickets are only refundable if the raffle expires, this means that the beneficiary has not claimed the raffle a week after it's end\n    // 4. The beneficiary can only end the raffle after the end time\n    uint256 public constant expirationPeriod = 7 * 24 * 60 * 60; // 7 days in seconds\n\n    Counters.Counter public RaffleCount;\n    mapping(uint256 => Raffle) public Raffles; // mapping of raffle id to raffle data\n    mapping(bytes32 => uint256) public VRFRequestIdTORaffleId; // mapping of VRF request id to raffle id\n\n    // A value that keeps track of all the change givent to the contract\n    uint256 public change = 0;\n\n    function CreateRaffle(string memory _raffleName, uint256 _ticketPrice, uint256 _raffleLength) public returns(uint256 raffleId){\n        RaffleCount.increment();\n        uint256 _id = RaffleCount.current();\n        Raffle storage raffle = Raffles[_id]; \n        raffle.id = _id;\n        raffle.name = _raffleName;\n        raffle.ticketCount = 0;\n        raffle.ticketPrice = _ticketPrice;\n        raffle.beneficiary = payable(msg.sender);\n        raffle.startTime = block.timestamp;\n        raffle.endTime = block.timestamp + _raffleLength;\n        raffle.state = RaffleState.Open;\n        raffle.winner = payable(0x0);\n        return _id;\n    }\n\n    // Some reader functions for getting info about raffles\n    function GetRaffleInfo(uint256 _id) public view returns (string memory name, address payable beneficiary, address payable winner, uint256 startTime, uint256 endTime) {\n        return (Raffles[_id].name, Raffles[_id].beneficiary, Raffles[_id].winner, Raffles[_id].startTime, Raffles[_id].endTime);\n    }\n\n    function GetRaffleTicketInfo(uint256 _id) public view returns (string memory name, uint256 startTime, uint256 endTime, uint256 ticketCount, uint256 ticketPrice) {\n        return (Raffles[_id].name, Raffles[_id].startTime, Raffles[_id].endTime, Raffles[_id].ticketCount, Raffles[_id].ticketPrice);\n    }\n\n    function GetRaffleCount() public view returns (uint256) {\n        return RaffleCount.current();\n    }\n\n    function ClaimRaffle(uint256 _id) public{\n        require(msg.sender == Raffles[_id].beneficiary, \"Only the beneficiary can claim the raffle\");\n        require(block.timestamp >= Raffles[_id].endTime, \"The raffle has not closed yet\");\n        require(Raffles[_id].endTime + expirationPeriod > block.timestamp, \"The raffle has expired and cannot be claimed\");\n        require(IERC20(linkTokenAddress).balanceOf(address(this)) >=  linkFee, \"The contract needs to be paid link token to claim the raffle\");\n        Raffles[_id].state = RaffleState.SelectingWinner;\n        // Fire off the VRF to select the winner\n        bytes32 requestId = requestRandomness(VRFKeyHash, linkFee); // Return a bytes 32 which is the request ID\n        VRFRequestIdTORaffleId[requestId] = _id; // Map the request ID to the raffle ID\n        emit RequestRandomness(requestId);\n    }\n\n    // This is run by the VRF coordinator to finalize the winner\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness) internal override {\n        uint256 raffleId = VRFRequestIdTORaffleId[_requestId];\n        require(Raffles[raffleId].state == RaffleState.SelectingWinner, \"The raffle is not in the SelectingWinner state\");\n        require(_randomness >= 0, \"No randomness found\");\n        Raffles[raffleId].state = RaffleState.Finished;\n        uint256 winningTicketIndex = _randomness % Raffles[raffleId].ticketCount;\n        // Todo: Convert the winning ticket index to an address\n        // For now well just send it to the owner\n        Raffles[raffleId].winner = payable(owner());\n        // Send the raffle money to the beneficiary\n        payable(Raffles[raffleId].beneficiary).call{value: Raffles[raffleId].ticketPrice * Raffles[raffleId].ticketCount}(\"\");\n        emit WinnerChosen(raffleId, Raffles[raffleId].winner);\n    }\n\n    // A function to buy tickets for a raffle\n    function BuyTickets(uint256 raffleId, uint256 _ticketCount) public payable {\n        Raffle storage raffle = Raffles[raffleId];\n        require(raffle.state == RaffleState.Open, \"Raffle not open\");\n        require(block.timestamp < raffle.endTime, \"Raffle is closed\");\n        require(_ticketCount > 0, \"Ticket count must be greater than 0\");\n        require(msg.value >= raffle.ticketPrice * _ticketCount, \"Ticket price is greater than the amount sent\");\n        raffle.ticketCount += _ticketCount;\n        raffle.tickets[msg.sender] += _ticketCount;\n        change += msg.value - raffle.ticketPrice * _ticketCount;\n    }\n\n    // A function for the owner of the contract to collect all the change in the contract\n    function CollectChange() public onlyOwner returns (uint256){\n        require(change > 0, \"There is no change to collect!\");\n        payable(msg.sender).call{value: change}(\"\");\n        uint256 _change = change;\n        change = 0;\n        return _change;\n    }\n}", "sourceMap": "320:6907:7:-:0;;;2940:1;2916:25;;561:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;680:15;696:17;921:32:0;719:10:2;921:18:0;:32::i;:::-;-1:-1:-1;;;;;9370:32:4;;;;;9408;;;;724:7:7::1;:18:::0;;;;752:10:::1;:24:::0;786:16:::1;:36:::0;;-1:-1:-1;;;;;;786:36:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;320:6907:7;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:8;-1:-1:-1;;;196:416:8:o;:::-;320:6907:7;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/CharityRaffle.sol", "type": "contract", "deployment": {"address": "0xCF46c40cd00E6fFdd305F242ded603Da2cD28300", "chainid": "4", "blockHeight": 9867393}}